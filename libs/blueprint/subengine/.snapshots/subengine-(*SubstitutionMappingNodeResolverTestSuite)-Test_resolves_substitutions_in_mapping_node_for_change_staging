(*subengine.ResolveInMappingNodeResult)({
  ResolvedMappingNode: (*core.MappingNode)({
    Literal: (*core.ScalarValue)(<nil>),
    Fields: (map[string]*core.MappingNode) (len=2) {
      (string) (len=5) "build": (*core.MappingNode)({
        Literal: (*core.ScalarValue)({
          IntValue: (*int)(<nil>),
          BoolValue: (*bool)(<nil>),
          FloatValue: (*float64)(<nil>),
          StringValue: (*string)((len=7) "esbuild"),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 91,
              Column: (int) 10
            },
            EndPosition: (*source.Position)({
              Line: (int) 91,
              Column: (int) 17
            })
          })
        }),
        Fields: (map[string]*core.MappingNode) <nil>,
        Items: ([]*core.MappingNode) <nil>,
        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
        SourceMeta: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 91,
            Column: (int) 10
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        FieldsSourceMeta: (map[string]*source.Meta) <nil>
      }),
      (string) (len=17) "networkingSummary": (*core.MappingNode)({
        Literal: (*core.ScalarValue)(<nil>),
        Fields: (map[string]*core.MappingNode) (len=2) {
          (string) (len=15) "coreInfraRegion": (*core.MappingNode)(<nil>),
          (string) (len=3) "vpc": (*core.MappingNode)(<nil>)
        },
        Items: ([]*core.MappingNode) <nil>,
        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
        SourceMeta: (*source.Meta)(<nil>),
        FieldsSourceMeta: (map[string]*source.Meta) <nil>
      })
    },
    Items: ([]*core.MappingNode) <nil>,
    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
    SourceMeta: (*source.Meta)(<nil>),
    FieldsSourceMeta: (map[string]*source.Meta) <nil>
  }),
  ResolveOnDeploy: ([]string) (len=3) {
    (string) (len=33) "datasources.network.filter.search",
    (string) (len=48) "metadata[\"networkingSummary\"][\"coreInfraRegion\"]",
    (string) (len=36) "metadata[\"networkingSummary\"][\"vpc\"]"
  }
})
