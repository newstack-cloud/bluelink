(*subengine.ResolveInValueResult)({
  ResolvedValue: (*subengine.ResolvedValue)({
    Type: (*schema.ValueTypeWrapper)({
      Value: (schema.ValueType) (len=5) "array",
      SourceMeta: (*source.Meta)({
        Position: (source.Position) {
          Line: (int) 27,
          Column: (int) 11
        },
        EndPosition: (*source.Position)({
          Line: (int) 27,
          Column: (int) 16
        })
      })
    }),
    Value: (*core.MappingNode)({
      Scalar: (*core.ScalarValue)(<nil>),
      Fields: (map[string]*core.MappingNode) <nil>,
      Items: ([]*core.MappingNode) (len=2) {
        (*core.MappingNode)({
          Scalar: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=9) "us-west-2"),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          Fields: (map[string]*core.MappingNode) <nil>,
          Items: ([]*core.MappingNode) <nil>,
          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
          SourceMeta: (*source.Meta)(<nil>),
          FieldsSourceMeta: (map[string]*source.Meta) <nil>
        }),
        (*core.MappingNode)({
          Scalar: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=9) "us-east-1"),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          Fields: (map[string]*core.MappingNode) <nil>,
          Items: ([]*core.MappingNode) <nil>,
          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
          SourceMeta: (*source.Meta)(<nil>),
          FieldsSourceMeta: (map[string]*source.Meta) <nil>
        })
      },
      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
      SourceMeta: (*source.Meta)(<nil>),
      FieldsSourceMeta: (map[string]*source.Meta) <nil>
    }),
    Description: (*core.MappingNode)({
      Scalar: (*core.ScalarValue)({
        IntValue: (*int)(<nil>),
        BoolValue: (*bool)(<nil>),
        FloatValue: (*float64)(<nil>),
        StringValue: (*string)((len=42) "The regions to deploy the orders table to."),
        SourceMeta: (*source.Meta)(<nil>)
      }),
      Fields: (map[string]*core.MappingNode) <nil>,
      Items: ([]*core.MappingNode) <nil>,
      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
      SourceMeta: (*source.Meta)(<nil>),
      FieldsSourceMeta: (map[string]*source.Meta) <nil>
    }),
    Secret: (*core.ScalarValue)(<nil>)
  }),
  ResolveOnDeploy: ([]string) {
  }
})
