(*subengine.ResolveInResourceResult)({
  ResolvedResource: (*provider.ResolvedResource)({
    Type: (*schema.ResourceTypeWrapper)({
      Value: (string) (len=18) "aws/dynamodb/table",
      SourceMeta: (*source.Meta)({
        Position: (source.Position) {
          Line: (int) 53,
          Column: (int) 11
        },
        EndPosition: (*source.Position)({
          Line: (int) 53,
          Column: (int) 29
        })
      })
    }),
    Description: (*core.MappingNode)({
      Literal: (*core.ScalarValue)({
        IntValue: (*int)(<nil>),
        BoolValue: (*bool)(<nil>),
        FloatValue: (*float64)(<nil>),
        StringValue: (*string)((len=44) "Table that stores orders for an application."),
        SourceMeta: (*source.Meta)(<nil>)
      }),
      Fields: (map[string]*core.MappingNode) <nil>,
      Items: ([]*core.MappingNode) <nil>,
      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
      SourceMeta: (*source.Meta)(<nil>),
      FieldsSourceMeta: (map[string]*source.Meta) <nil>
    }),
    Metadata: (*provider.ResolvedResourceMetadata)({
      DisplayName: (*core.MappingNode)({
        Literal: (*core.ScalarValue)({
          IntValue: (*int)(<nil>),
          BoolValue: (*bool)(<nil>),
          FloatValue: (*float64)(<nil>),
          StringValue: (*string)((len=27) "production-env Orders Table"),
          SourceMeta: (*source.Meta)(<nil>)
        }),
        Fields: (map[string]*core.MappingNode) <nil>,
        Items: ([]*core.MappingNode) <nil>,
        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
        SourceMeta: (*source.Meta)(<nil>),
        FieldsSourceMeta: (map[string]*source.Meta) <nil>
      }),
      Annotations: (*core.MappingNode)({
        Literal: (*core.ScalarValue)(<nil>),
        Fields: (map[string]*core.MappingNode) (len=3) {
          (string) (len=20) "aws.dynamodb.trigger": (*core.MappingNode)({
            Literal: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(true),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)(<nil>),
              SourceMeta: (*source.Meta)(<nil>)
            }),
            Fields: (map[string]*core.MappingNode) <nil>,
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)(<nil>),
            FieldsSourceMeta: (map[string]*source.Meta) <nil>
          }),
          (string) (len=16) "aws.dynamodb.vpc": (*core.MappingNode)(<nil>),
          (string) (len=22) "custom.coreInfraRegion": (*core.MappingNode)(<nil>)
        },
        Items: ([]*core.MappingNode) <nil>,
        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
        SourceMeta: (*source.Meta)(<nil>),
        FieldsSourceMeta: (map[string]*source.Meta) <nil>
      }),
      Labels: (*schema.StringMap)({
        Values: (map[string]string) (len=1) {
          (string) (len=3) "app": (string) (len=6) "orders"
        },
        SourceMeta: (map[string]*source.Meta) (len=1) {
          (string) (len=3) "app": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 68,
              Column: (int) 9
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }
      }),
      Custom: (*core.MappingNode)({
        Literal: (*core.ScalarValue)(<nil>),
        Fields: (map[string]*core.MappingNode) (len=1) {
          (string) (len=6) "visual": (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=3) {
              (string) (len=5) "label": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=27) "production-env Orders Table"),
                  SourceMeta: (*source.Meta)(<nil>)
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)(<nil>),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=1) "x": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(100),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 71,
                      Column: (int) 14
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 71,
                      Column: (int) 17
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 71,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=1) "y": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(200),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 72,
                      Column: (int) 14
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 72,
                      Column: (int) 17
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 72,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)(<nil>),
            FieldsSourceMeta: (map[string]*source.Meta) <nil>
          })
        },
        Items: ([]*core.MappingNode) <nil>,
        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
        SourceMeta: (*source.Meta)(<nil>),
        FieldsSourceMeta: (map[string]*source.Meta) <nil>
      })
    }),
    Condition: (*provider.ResolvedResourceCondition)({
      And: ([]*provider.ResolvedResourceCondition) (len=2) {
        (*provider.ResolvedResourceCondition)({
          And: ([]*provider.ResolvedResourceCondition) <nil>,
          Or: ([]*provider.ResolvedResourceCondition) <nil>,
          Not: (*provider.ResolvedResourceCondition)(<nil>),
          StringValue: (*core.MappingNode)({
            Literal: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(true),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)(<nil>),
              SourceMeta: (*source.Meta)(<nil>)
            }),
            Fields: (map[string]*core.MappingNode) <nil>,
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)(<nil>),
            FieldsSourceMeta: (map[string]*source.Meta) <nil>
          })
        }),
        (*provider.ResolvedResourceCondition)({
          And: ([]*provider.ResolvedResourceCondition) <nil>,
          Or: ([]*provider.ResolvedResourceCondition) (len=2) {
            (*provider.ResolvedResourceCondition)({
              And: ([]*provider.ResolvedResourceCondition) <nil>,
              Or: ([]*provider.ResolvedResourceCondition) <nil>,
              Not: (*provider.ResolvedResourceCondition)(<nil>),
              StringValue: (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(true),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)(<nil>),
                  SourceMeta: (*source.Meta)(<nil>)
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)(<nil>),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            }),
            (*provider.ResolvedResourceCondition)({
              And: ([]*provider.ResolvedResourceCondition) <nil>,
              Or: ([]*provider.ResolvedResourceCondition) <nil>,
              Not: (*provider.ResolvedResourceCondition)(<nil>),
              StringValue: (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(false),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)(<nil>),
                  SourceMeta: (*source.Meta)(<nil>)
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)(<nil>),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            })
          },
          Not: (*provider.ResolvedResourceCondition)(<nil>),
          StringValue: (*core.MappingNode)(<nil>)
        })
      },
      Or: ([]*provider.ResolvedResourceCondition) <nil>,
      Not: (*provider.ResolvedResourceCondition)(<nil>),
      StringValue: (*core.MappingNode)(<nil>)
    }),
    LinkSelector: (*schema.LinkSelector)({
      ByLabel: (*schema.StringMap)({
        Values: (map[string]string) (len=1) {
          (string) (len=3) "app": (string) (len=6) "orders"
        },
        SourceMeta: (map[string]*source.Meta) (len=1) {
          (string) (len=3) "app": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 76,
              Column: (int) 9
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }
      }),
      SourceMeta: (*source.Meta)({
        Position: (source.Position) {
          Line: (int) 75,
          Column: (int) 7
        },
        EndPosition: (*source.Position)(<nil>)
      })
    }),
    Spec: (*core.MappingNode)({
      Literal: (*core.ScalarValue)(<nil>),
      Fields: (map[string]*core.MappingNode) (len=2) {
        (string) (len=6) "region": (*core.MappingNode)(<nil>),
        (string) (len=9) "tableName": (*core.MappingNode)({
          Literal: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=17) "production-Orders"),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          Fields: (map[string]*core.MappingNode) <nil>,
          Items: ([]*core.MappingNode) <nil>,
          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
          SourceMeta: (*source.Meta)(<nil>),
          FieldsSourceMeta: (map[string]*source.Meta) <nil>
        })
      },
      Items: ([]*core.MappingNode) <nil>,
      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
      SourceMeta: (*source.Meta)(<nil>),
      FieldsSourceMeta: (map[string]*source.Meta) <nil>
    })
  }),
  ResolveOnDeploy: ([]string) (len=5) {
    (string) (len=33) "datasources.network.filter.search",
    (string) (len=42) "resources.ordersTable.metadata.annotations",
    (string) (len=42) "resources.ordersTable.metadata.annotations",
    (string) (len=36) "resources.ordersTable.spec[\"region\"]",
    (string) (len=36) "values.prefixedCoreInfraRegion.value"
  }
})
