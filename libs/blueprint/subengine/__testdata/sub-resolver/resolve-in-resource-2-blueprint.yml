version: 2025-02-01
variables:
  instanceType:
    type: aws/ec2/instanceType
    description: "The configuration buckets to create."
  environment:
    type: string
  enableOrderTableTrigger:
    type: bool
    description: "Whether to enable the trigger on the order table."
  region:
    type: string
    description: "The region to deploy the resources."
  deployOrdersTableToRegions:
    type: string
    description: "A JSON-encoded list of regions to deploy the orders table to."
  orderTables:
    type: string
    description: "A JSON-encoded list of order tables to create."

values:
  tableName:
    type: string
    value: "${variables.environment}-ordersTable"

  deployOrdersTableToRegions:
    type: array
    value: "${jsondecode(variables.deployOrdersTableToRegions)}"

  prefixedCoreInfraRegion:
    type: string
    value: "core-${children.coreInfra.region}"

  orderTables:
    type: array
    value: "${jsondecode(variables.orderTables)}"

datasources:
  network:
    type: aws/vpc
    description: "Networking resources for the application."
    filter:
      field: tags
      operator: "not contains"
      search: ${children.coreInfra.region}
    metadata:
      displayName: Networking
    exports:
      vpc:
        type: string
        aliasFor: vpcId
        description: |
          The ID of the VPC.
      subnetIds:
        type: array
        description: "The IDs of the subnets."

resources:
  ordersTable:
    type: aws/dynamodb/table
    description: "Table that stores orders for an application."
    each: ${values.orderTables}
    condition:
      and:
        - ${eq(variables.environment, "production-env")}
        - or:
            - ${contains(values.deployOrdersTableToRegions, variables.region)}
            - not: ${eq(variables.region, "eu-central-1")}
    metadata:
      displayName: ${variables.environment} Orders Table ${i}
      annotations:
        aws.dynamodb.trigger: ${variables.enableOrderTableTrigger}
        aws.dynamodb.vpc: ${datasources.network.vpc}
        custom.coreInfraRegion: ${values.prefixedCoreInfraRegion}
      labels:
        app: orders
      custom:
        visual:
          x: 100
          y: 200
          label: ${variables.environment} Orders Table ${i}
    linkSelector:
      byLabel:
        app: orders
    spec:
      tableName: ${elem.name}
      region: "${children.coreInfra.region}"

include:
  coreInfra:
    path: core-infra.yaml
    description: core infrastructure for the Orders API
    metadata:
      sourceType: aws/s3
      bucket: order-system-blueprints
      region: eu-west-1

exports:
  environment:
    type: string
    field: variables.environment
    description: "The environment for the blueprint."

metadata:
  build: esbuild
