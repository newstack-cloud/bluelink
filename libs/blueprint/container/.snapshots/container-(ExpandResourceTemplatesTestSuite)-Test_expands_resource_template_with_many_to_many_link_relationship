(*container.ExpandedResourceTemplateResult)({
  ResourceTemplateMap: (map[string][]string) (len=2) {
    (string) (len=8) "function": ([]string) (len=3) {
      (string) (len=10) "function_0",
      (string) (len=10) "function_1",
      (string) (len=10) "function_2"
    },
    (string) (len=11) "ordersTable": ([]string) (len=3) {
      (string) (len=13) "ordersTable_0",
      (string) (len=13) "ordersTable_1",
      (string) (len=13) "ordersTable_2"
    }
  },
  ExpandedBlueprint: (*schema.Blueprint)({
    Version: (*core.ScalarValue)({
      IntValue: (*int)(<nil>),
      BoolValue: (*bool)(<nil>),
      FloatValue: (*float64)(<nil>),
      StringValue: (*string)((len=10) "2025-05-12"),
      SourceMeta: (*source.Meta)({
        Position: (source.Position) {
          Line: (int) 1,
          Column: (int) 10
        },
        EndPosition: (*source.Position)({
          Line: (int) 1,
          Column: (int) 20
        })
      })
    }),
    Transform: (*schema.TransformValueWrapper)(<nil>),
    Variables: (*schema.VariableMap)({
      Values: (map[string]*schema.Variable) (len=3) {
        (string) (len=11) "environment": (*schema.Variable)({
          Type: (*schema.VariableTypeWrapper)({
            Value: (schema.VariableType) (len=6) "string",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 4,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 4,
                Column: (int) 17
              })
            })
          }),
          Description: (*core.ScalarValue)(<nil>),
          Secret: (*core.ScalarValue)(<nil>),
          Default: (*core.ScalarValue)(<nil>),
          AllowedValues: ([]*core.ScalarValue) <nil>,
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 4,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=15) "functionsConfig": (*schema.Variable)({
          Type: (*schema.VariableTypeWrapper)({
            Value: (schema.VariableType) (len=6) "string",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 6,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 6,
                Column: (int) 17
              })
            })
          }),
          Description: (*core.ScalarValue)(<nil>),
          Secret: (*core.ScalarValue)(<nil>),
          Default: (*core.ScalarValue)(<nil>),
          AllowedValues: ([]*core.ScalarValue) <nil>,
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 6,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=12) "tablesConfig": (*schema.Variable)({
          Type: (*schema.VariableTypeWrapper)({
            Value: (schema.VariableType) (len=6) "string",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 8,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 8,
                Column: (int) 17
              })
            })
          }),
          Description: (*core.ScalarValue)(<nil>),
          Secret: (*core.ScalarValue)(<nil>),
          Default: (*core.ScalarValue)(<nil>),
          AllowedValues: ([]*core.ScalarValue) <nil>,
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 8,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=3) {
        (string) (len=11) "environment": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 3,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=15) "functionsConfig": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 5,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=12) "tablesConfig": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 7,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Values: (*schema.ValueMap)({
      Values: (map[string]*schema.Value) (len=2) {
        (string) (len=15) "functionsConfig": (*schema.Value)({
          Type: (*schema.ValueTypeWrapper)({
            Value: (schema.ValueType) (len=5) "array",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 12,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 12,
                Column: (int) 16
              })
            })
          }),
          Value: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)(<nil>),
                SubstitutionValue: (*substitutions.Substitution)({
                  Function: (*substitutions.SubstitutionFunctionExpr)({
                    FunctionName: (substitutions.SubstitutionFunctionName) (len=10) "jsondecode",
                    Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                      (*substitutions.SubstitutionFunctionArg)({
                        Name: (string) "",
                        Value: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=15) "functionsConfig",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 13,
                                Column: (int) 26
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 13,
                                Column: (int) 51
                              })
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 13,
                              Column: (int) 26
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 13,
                              Column: (int) 51
                            })
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 13,
                            Column: (int) 26
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 13,
                            Column: (int) 51
                          })
                        })
                      })
                    },
                    Path: ([]*substitutions.SubstitutionPathItem) {
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 13,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 13,
                        Column: (int) 52
                      })
                    })
                  }),
                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                  Child: (*substitutions.SubstitutionChild)(<nil>),
                  StringValue: (*string)(<nil>),
                  IntValue: (*int64)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 13,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 13,
                      Column: (int) 52
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 13,
                    Column: (int) 12
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 13,
                    Column: (int) 52
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 13,
                Column: (int) 12
              },
              EndPosition: (*source.Position)({
                Line: (int) 13,
                Column: (int) 54
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)(<nil>),
          Secret: (*core.ScalarValue)(<nil>),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 12,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=12) "tablesConfig": (*schema.Value)({
          Type: (*schema.ValueTypeWrapper)({
            Value: (schema.ValueType) (len=5) "array",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 16,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 16,
                Column: (int) 16
              })
            })
          }),
          Value: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)(<nil>),
                SubstitutionValue: (*substitutions.Substitution)({
                  Function: (*substitutions.SubstitutionFunctionExpr)({
                    FunctionName: (substitutions.SubstitutionFunctionName) (len=10) "jsondecode",
                    Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                      (*substitutions.SubstitutionFunctionArg)({
                        Name: (string) "",
                        Value: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=12) "tablesConfig",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 17,
                                Column: (int) 26
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 17,
                                Column: (int) 48
                              })
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 17,
                              Column: (int) 26
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 17,
                              Column: (int) 48
                            })
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 17,
                            Column: (int) 26
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 17,
                            Column: (int) 48
                          })
                        })
                      })
                    },
                    Path: ([]*substitutions.SubstitutionPathItem) {
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 17,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 17,
                        Column: (int) 49
                      })
                    })
                  }),
                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                  Child: (*substitutions.SubstitutionChild)(<nil>),
                  StringValue: (*string)(<nil>),
                  IntValue: (*int64)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 17,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 17,
                      Column: (int) 49
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 17,
                    Column: (int) 12
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 17,
                    Column: (int) 49
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 17,
                Column: (int) 12
              },
              EndPosition: (*source.Position)({
                Line: (int) 17,
                Column: (int) 51
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)(<nil>),
          Secret: (*core.ScalarValue)(<nil>),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 16,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=2) {
        (string) (len=15) "functionsConfig": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 11,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=12) "tablesConfig": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 15,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Include: (*schema.IncludeMap)({
      Values: (map[string]*schema.Include) (len=1) {
        (string) (len=9) "coreInfra": (*schema.Include)({
          Path: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=15) "core-infra.yaml"),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 62,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 62,
                    Column: (int) 26
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 62,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 62,
                Column: (int) 26
              })
            })
          }),
          Variables: (*core.MappingNode)(<nil>),
          Metadata: (*core.MappingNode)({
            Scalar: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=3) {
              (string) (len=6) "bucket": (*core.MappingNode)({
                Scalar: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=23) "order-system-blueprints"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 66,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 66,
                      Column: (int) 38
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 66,
                    Column: (int) 15
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=6) "region": (*core.MappingNode)({
                Scalar: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=9) "eu-west-1"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 67,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 67,
                      Column: (int) 24
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 67,
                    Column: (int) 15
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=10) "sourceType": (*core.MappingNode)({
                Scalar: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=6) "aws/s3"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 65,
                      Column: (int) 19
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 65,
                      Column: (int) 25
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 65,
                    Column: (int) 19
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 65,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
              (string) (len=6) "bucket": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 66,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=6) "region": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 67,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=10) "sourceType": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 65,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=38) "core infrastructure for the Orders API"),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 63,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 63,
                    Column: (int) 56
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 63,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 63,
                Column: (int) 56
              })
            })
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 62,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=1) {
        (string) (len=9) "coreInfra": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 61,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Resources: (*schema.ResourceMap)({
      Values: (map[string]*schema.Resource) (len=6) {
        (string) (len=10) "function_0": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=19) "aws/lambda/function",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 41,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 41,
                Column: (int) 30
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=45) "Function that saves an order to the database."),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 42,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 42,
                    Column: (int) 65
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 42,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 42,
                Column: (int) 65
              })
            })
          }),
          Metadata: (*schema.Metadata)(<nil>),
          DependsOn: (*schema.DependsOnList)(<nil>),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)({
            ByLabel: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=5) "app_0": (string) (len=6) "orders"
              },
              SourceMeta: (map[string]*source.Meta) <nil>
            }),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          Spec: (*core.MappingNode)({
            Scalar: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=1) {
              (string) (len=7) "handler": (*core.MappingNode)({
                Scalar: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)({
                          Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                            (*substitutions.SubstitutionPathItem)({
                              FieldName: (string) (len=7) "handler",
                              ArrayIndex: (*int64)(<nil>)
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 48,
                              Column: (int) 19
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 48,
                              Column: (int) 31
                            })
                          })
                        }),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 48,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 48,
                            Column: (int) 31
                          })
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 48,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 48,
                          Column: (int) 31
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 48,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 48,
                      Column: (int) 33
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 48,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 48,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
              (string) (len=7) "handler": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 48,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 41,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=10) "function_1": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=19) "aws/lambda/function",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 41,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 41,
                Column: (int) 30
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=45) "Function that saves an order to the database."),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 42,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 42,
                    Column: (int) 65
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 42,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 42,
                Column: (int) 65
              })
            })
          }),
          Metadata: (*schema.Metadata)(<nil>),
          DependsOn: (*schema.DependsOnList)(<nil>),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)({
            ByLabel: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=5) "app_1": (string) (len=6) "orders"
              },
              SourceMeta: (map[string]*source.Meta) <nil>
            }),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          Spec: (*core.MappingNode)({
            Scalar: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=1) {
              (string) (len=7) "handler": (*core.MappingNode)({
                Scalar: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)({
                          Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                            (*substitutions.SubstitutionPathItem)({
                              FieldName: (string) (len=7) "handler",
                              ArrayIndex: (*int64)(<nil>)
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 48,
                              Column: (int) 19
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 48,
                              Column: (int) 31
                            })
                          })
                        }),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 48,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 48,
                            Column: (int) 31
                          })
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 48,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 48,
                          Column: (int) 31
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 48,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 48,
                      Column: (int) 33
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 48,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 48,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
              (string) (len=7) "handler": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 48,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 41,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=10) "function_2": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=19) "aws/lambda/function",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 41,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 41,
                Column: (int) 30
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=45) "Function that saves an order to the database."),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 42,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 42,
                    Column: (int) 65
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 42,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 42,
                Column: (int) 65
              })
            })
          }),
          Metadata: (*schema.Metadata)(<nil>),
          DependsOn: (*schema.DependsOnList)(<nil>),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)({
            ByLabel: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=5) "app_2": (string) (len=6) "orders"
              },
              SourceMeta: (map[string]*source.Meta) <nil>
            }),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          Spec: (*core.MappingNode)({
            Scalar: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=1) {
              (string) (len=7) "handler": (*core.MappingNode)({
                Scalar: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)({
                          Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                            (*substitutions.SubstitutionPathItem)({
                              FieldName: (string) (len=7) "handler",
                              ArrayIndex: (*int64)(<nil>)
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 48,
                              Column: (int) 19
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 48,
                              Column: (int) 31
                            })
                          })
                        }),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 48,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 48,
                            Column: (int) 31
                          })
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 48,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 48,
                          Column: (int) 31
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 48,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 48,
                      Column: (int) 33
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 48,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 48,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
              (string) (len=7) "handler": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 48,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 41,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=13) "ordersTable_0": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=18) "aws/dynamodb/table",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 51,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 51,
                Column: (int) 29
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=44) "Table that stores orders for an application."),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 52,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 52,
                    Column: (int) 64
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 52,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 52,
                Column: (int) 64
              })
            })
          }),
          Metadata: (*schema.Metadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)(<nil>),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Labels: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=5) "app_0": (string) (len=6) "orders"
              },
              SourceMeta: (map[string]*source.Meta) <nil>
            }),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          DependsOn: (*schema.DependsOnList)(<nil>),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)(<nil>),
          Spec: (*core.MappingNode)({
            Scalar: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=1) {
              (string) (len=9) "tableName": (*core.MappingNode)({
                Scalar: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)({
                          Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                            (*substitutions.SubstitutionPathItem)({
                              FieldName: (string) (len=4) "name",
                              ArrayIndex: (*int64)(<nil>)
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 58,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 58,
                              Column: (int) 30
                            })
                          })
                        }),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 58,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 58,
                            Column: (int) 30
                          })
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 58,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 58,
                          Column: (int) 30
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 58,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 58,
                      Column: (int) 32
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 58,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 58,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
              (string) (len=9) "tableName": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 58,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 51,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=13) "ordersTable_1": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=18) "aws/dynamodb/table",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 51,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 51,
                Column: (int) 29
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=44) "Table that stores orders for an application."),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 52,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 52,
                    Column: (int) 64
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 52,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 52,
                Column: (int) 64
              })
            })
          }),
          Metadata: (*schema.Metadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)(<nil>),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Labels: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=5) "app_1": (string) (len=6) "orders"
              },
              SourceMeta: (map[string]*source.Meta) <nil>
            }),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          DependsOn: (*schema.DependsOnList)(<nil>),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)(<nil>),
          Spec: (*core.MappingNode)({
            Scalar: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=1) {
              (string) (len=9) "tableName": (*core.MappingNode)({
                Scalar: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)({
                          Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                            (*substitutions.SubstitutionPathItem)({
                              FieldName: (string) (len=4) "name",
                              ArrayIndex: (*int64)(<nil>)
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 58,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 58,
                              Column: (int) 30
                            })
                          })
                        }),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 58,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 58,
                            Column: (int) 30
                          })
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 58,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 58,
                          Column: (int) 30
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 58,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 58,
                      Column: (int) 32
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 58,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 58,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
              (string) (len=9) "tableName": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 58,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 51,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=13) "ordersTable_2": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=18) "aws/dynamodb/table",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 51,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 51,
                Column: (int) 29
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=44) "Table that stores orders for an application."),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 52,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 52,
                    Column: (int) 64
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 52,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 52,
                Column: (int) 64
              })
            })
          }),
          Metadata: (*schema.Metadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)(<nil>),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Labels: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=5) "app_2": (string) (len=6) "orders"
              },
              SourceMeta: (map[string]*source.Meta) <nil>
            }),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          DependsOn: (*schema.DependsOnList)(<nil>),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)(<nil>),
          Spec: (*core.MappingNode)({
            Scalar: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=1) {
              (string) (len=9) "tableName": (*core.MappingNode)({
                Scalar: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)({
                          Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                            (*substitutions.SubstitutionPathItem)({
                              FieldName: (string) (len=4) "name",
                              ArrayIndex: (*int64)(<nil>)
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 58,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 58,
                              Column: (int) 30
                            })
                          })
                        }),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 58,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 58,
                            Column: (int) 30
                          })
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 58,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 58,
                          Column: (int) 30
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 58,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 58,
                      Column: (int) 32
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 58,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 58,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
              (string) (len=9) "tableName": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 58,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 51,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) {
      }
    }),
    DataSources: (*schema.DataSourceMap)({
      Values: (map[string]*schema.DataSource) (len=1) {
        (string) (len=7) "network": (*schema.DataSource)({
          Type: (*schema.DataSourceTypeWrapper)({
            Value: (string) (len=7) "aws/vpc",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 21,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 21,
                Column: (int) 18
              })
            })
          }),
          DataSourceMetadata: (*schema.DataSourceMetadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=10) "Networking"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 28,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 28,
                      Column: (int) 30
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 28,
                  Column: (int) 20
                },
                EndPosition: (*source.Position)({
                  Line: (int) 28,
                  Column: (int) 30
                })
              })
            }),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 28,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Filter: (*schema.DataSourceFilter)({
            Field: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=4) "tags"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 24,
                  Column: (int) 14
                },
                EndPosition: (*source.Position)({
                  Line: (int) 24,
                  Column: (int) 18
                })
              })
            }),
            Operator: (*schema.DataSourceFilterOperatorWrapper)({
              Value: (schema.DataSourceFilterOperator) (len=12) "not contains",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 25,
                  Column: (int) 17
                },
                EndPosition: (*source.Position)({
                  Line: (int) 25,
                  Column: (int) 31
                })
              })
            }),
            Search: (*schema.DataSourceFilterSearch)({
              Values: ([]*substitutions.StringOrSubstitutions) (len=1) {
                (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=7) "service"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 26,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 26,
                          Column: (int) 22
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 26,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 26,
                      Column: (int) 22
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 26,
                  Column: (int) 15
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 24,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Exports: (*schema.DataSourceFieldExportMap)({
            Values: (map[string]*schema.DataSourceFieldExport) (len=2) {
              (string) (len=9) "subnetIds": (*schema.DataSourceFieldExport)({
                Type: (*schema.DataSourceFieldTypeWrapper)({
                  Value: (schema.DataSourceFieldType) (len=5) "array",
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 36,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 36,
                      Column: (int) 20
                    })
                  })
                }),
                AliasFor: (*core.ScalarValue)(<nil>),
                Description: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=23) "The IDs of the subnets."),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 37,
                          Column: (int) 22
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 37,
                          Column: (int) 47
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 37,
                      Column: (int) 22
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 37,
                      Column: (int) 47
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 36,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              (string) (len=3) "vpc": (*schema.DataSourceFieldExport)({
                Type: (*schema.DataSourceFieldTypeWrapper)({
                  Value: (schema.DataSourceFieldType) (len=6) "string",
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 31,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 31,
                      Column: (int) 21
                    })
                  })
                }),
                AliasFor: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=5) "vpcId"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 32,
                      Column: (int) 19
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 32,
                      Column: (int) 24
                    })
                  })
                }),
                Description: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=19) "The ID of the VPC.\n"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 34,
                          Column: (int) 22
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 34,
                          Column: (int) 39
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 33,
                      Column: (int) 22
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 34,
                      Column: (int) 39
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 31,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            },
            SourceMeta: (map[string]*source.Meta) (len=2) {
              (string) (len=9) "subnetIds": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 35,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=3) "vpc": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 30,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=41) "Networking resources for the application."),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 22,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 22,
                    Column: (int) 61
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 22,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 22,
                Column: (int) 61
              })
            })
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 21,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=1) {
        (string) (len=7) "network": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 20,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Exports: (*schema.ExportMap)({
      Values: (map[string]*schema.Export) (len=1) {
        (string) (len=11) "environment": (*schema.Export)({
          Type: (*schema.ExportTypeWrapper)({
            Value: (schema.ExportType) (len=6) "string",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 71,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 71,
                Column: (int) 17
              })
            })
          }),
          Field: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=21) "variables.environment"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 72,
                Column: (int) 12
              },
              EndPosition: (*source.Position)({
                Line: (int) 72,
                Column: (int) 33
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=34) "The environment for the blueprint."),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 73,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 73,
                    Column: (int) 54
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 73,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 73,
                Column: (int) 54
              })
            })
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 71,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=1) {
        (string) (len=11) "environment": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 70,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Metadata: (*core.MappingNode)({
      Scalar: (*core.ScalarValue)(<nil>),
      Fields: (map[string]*core.MappingNode) (len=1) {
        (string) (len=5) "build": (*core.MappingNode)({
          Scalar: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=7) "esbuild"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 76,
                Column: (int) 10
              },
              EndPosition: (*source.Position)({
                Line: (int) 76,
                Column: (int) 17
              })
            })
          }),
          Fields: (map[string]*core.MappingNode) <nil>,
          Items: ([]*core.MappingNode) <nil>,
          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 76,
              Column: (int) 10
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          FieldsSourceMeta: (map[string]*source.Meta) <nil>
        })
      },
      Items: ([]*core.MappingNode) <nil>,
      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
      SourceMeta: (*source.Meta)({
        Position: (source.Position) {
          Line: (int) 76,
          Column: (int) 3
        },
        EndPosition: (*source.Position)(<nil>)
      }),
      FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
        (string) (len=5) "build": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 76,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    })
  })
})
