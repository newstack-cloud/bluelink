(*schema.TreeNode)({
  Label: (string) "",
  Path: (string) "",
  Type: (schema.TreeNodeType) 0,
  Children: ([]*schema.TreeNode) (len=9) {
    (*schema.TreeNode)({
      Label: (string) (len=7) "version",
      Path: (string) (len=8) "/version",
      Type: (schema.TreeNodeType) 1,
      Children: ([]*schema.TreeNode) <nil>,
      SchemaElement: (*core.ScalarValue)({
        IntValue: (*int)(<nil>),
        BoolValue: (*bool)(<nil>),
        FloatValue: (*float64)(<nil>),
        StringValue: (*string)((len=10) "2021-12-18"),
        SourceMeta: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 1,
            Column: (int) 10
          },
          EndPosition: (*source.Position)({
            Line: (int) 1,
            Column: (int) 20
          })
        })
      }),
      Range: (*source.Range)({
        Start: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 1,
            Column: (int) 10
          },
          EndPosition: (*source.Position)({
            Line: (int) 1,
            Column: (int) 20
          })
        }),
        End: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 3,
            Column: (int) 5
          },
          EndPosition: (*source.Position)({
            Line: (int) 3,
            Column: (int) 24
          })
        })
      })
    }),
    (*schema.TreeNode)({
      Label: (string) (len=9) "transform",
      Path: (string) (len=10) "/transform",
      Type: (schema.TreeNodeType) 0,
      Children: ([]*schema.TreeNode) (len=1) {
        (*schema.TreeNode)({
          Label: (string) (len=1) "0",
          Path: (string) (len=12) "/transform/0",
          Type: (schema.TreeNodeType) 1,
          Children: ([]*schema.TreeNode) <nil>,
          SchemaElement: (string) (len=19) "celerity-2022-01-22",
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 3,
                Column: (int) 5
              },
              EndPosition: (*source.Position)({
                Line: (int) 3,
                Column: (int) 24
              })
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 5,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        })
      },
      SchemaElement: (*schema.TransformValueWrapper)({
        Values: ([]string) (len=1) {
          (string) (len=19) "celerity-2022-01-22"
        },
        SourceMeta: ([]*source.Meta) (len=1) {
          (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 3,
              Column: (int) 5
            },
            EndPosition: (*source.Position)({
              Line: (int) 3,
              Column: (int) 24
            })
          })
        }
      }),
      Range: (*source.Range)({
        Start: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 3,
            Column: (int) 5
          },
          EndPosition: (*source.Position)({
            Line: (int) 3,
            Column: (int) 24
          })
        }),
        End: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 5,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      })
    }),
    (*schema.TreeNode)({
      Label: (string) (len=9) "variables",
      Path: (string) (len=10) "/variables",
      Type: (schema.TreeNodeType) 0,
      Children: ([]*schema.TreeNode) (len=5) {
        (*schema.TreeNode)({
          Label: (string) (len=13) "dynamoDBTable",
          Path: (string) (len=24) "/variables/dynamoDBTable",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=2) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=29) "/variables/dynamoDBTable/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.VariableTypeWrapper)({
                Value: (schema.VariableType) (len=6) "string",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 6,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 6,
                    Column: (int) 17
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 6,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 6,
                    Column: (int) 17
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 7,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 7,
                    Column: (int) 43
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=11) "description",
              Path: (string) (len=36) "/variables/dynamoDBTable/description",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=25) "The Orders DynamoDB Table"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 7,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 7,
                    Column: (int) 43
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 7,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 7,
                    Column: (int) 43
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 8,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 6,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 6,
                  Column: (int) 17
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=25) "The Orders DynamoDB Table"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 7,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 7,
                  Column: (int) 43
                })
              })
            }),
            Secret: (*core.ScalarValue)(<nil>),
            Default: (*core.ScalarValue)(<nil>),
            AllowedValues: ([]*core.ScalarValue) <nil>,
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 6,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 5,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 8,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=15) "ordersTopicName",
          Path: (string) (len=26) "/variables/ordersTopicName",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=2) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=31) "/variables/ordersTopicName/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.VariableTypeWrapper)({
                Value: (schema.VariableType) (len=6) "string",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 9,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 9,
                    Column: (int) 17
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 9,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 9,
                    Column: (int) 17
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 10,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 10,
                    Column: (int) 40
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=11) "description",
              Path: (string) (len=38) "/variables/ordersTopicName/description",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=22) "The Orders Event Topic"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 10,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 10,
                    Column: (int) 40
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 10,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 10,
                    Column: (int) 40
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 11,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 9,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 9,
                  Column: (int) 17
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=22) "The Orders Event Topic"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 10,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 10,
                  Column: (int) 40
                })
              })
            }),
            Secret: (*core.ScalarValue)(<nil>),
            Default: (*core.ScalarValue)(<nil>),
            AllowedValues: ([]*core.ScalarValue) <nil>,
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 9,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 8,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 11,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=11) "environment",
          Path: (string) (len=22) "/variables/environment",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=2) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=27) "/variables/environment/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.VariableTypeWrapper)({
                Value: (schema.VariableType) (len=6) "string",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 12,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 12,
                    Column: (int) 17
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 12,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 12,
                    Column: (int) 17
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 13,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 13,
                    Column: (int) 46
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=11) "description",
              Path: (string) (len=34) "/variables/environment/description",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=28) "The environment to deploy to"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 13,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 13,
                    Column: (int) 46
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 13,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 13,
                    Column: (int) 46
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 14,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 12,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 12,
                  Column: (int) 17
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=28) "The environment to deploy to"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 13,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 13,
                  Column: (int) 46
                })
              })
            }),
            Secret: (*core.ScalarValue)(<nil>),
            Default: (*core.ScalarValue)(<nil>),
            AllowedValues: ([]*core.ScalarValue) <nil>,
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 12,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 11,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 14,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=6) "region",
          Path: (string) (len=17) "/variables/region",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=4) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=22) "/variables/region/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.VariableTypeWrapper)({
                Value: (schema.VariableType) (len=6) "string",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 15,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 15,
                    Column: (int) 17
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 15,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 15,
                    Column: (int) 17
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 16,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 16,
                    Column: (int) 41
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=11) "description",
              Path: (string) (len=29) "/variables/region/description",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=23) "The region to deploy to"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 16,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 16,
                    Column: (int) 41
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 16,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 16,
                    Column: (int) 41
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 17,
                    Column: (int) 13
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 17,
                    Column: (int) 18
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=6) "secret",
              Path: (string) (len=24) "/variables/region/secret",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(false),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 17,
                    Column: (int) 13
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 17,
                    Column: (int) 18
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 17,
                    Column: (int) 13
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 17,
                    Column: (int) 18
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 18,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 18,
                    Column: (int) 23
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=7) "default",
              Path: (string) (len=25) "/variables/region/default",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=9) "us-west-2"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 18,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 18,
                    Column: (int) 23
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 18,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 18,
                    Column: (int) 23
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 19,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 15,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 15,
                  Column: (int) 17
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=23) "The region to deploy to"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 16,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 16,
                  Column: (int) 41
                })
              })
            }),
            Secret: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(false),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 17,
                  Column: (int) 13
                },
                EndPosition: (*source.Position)({
                  Line: (int) 17,
                  Column: (int) 18
                })
              })
            }),
            Default: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=9) "us-west-2"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 18,
                  Column: (int) 14
                },
                EndPosition: (*source.Position)({
                  Line: (int) 18,
                  Column: (int) 23
                })
              })
            }),
            AllowedValues: ([]*core.ScalarValue) <nil>,
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 15,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 14,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 19,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=12) "instanceType",
          Path: (string) (len=23) "/variables/instanceType",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=5) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=28) "/variables/instanceType/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.VariableTypeWrapper)({
                Value: (schema.VariableType) (len=20) "aws/ec2/instanceType",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 20,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 20,
                    Column: (int) 31
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 20,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 20,
                    Column: (int) 31
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 21,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 21,
                    Column: (int) 42
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=11) "description",
              Path: (string) (len=35) "/variables/instanceType/description",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=24) "The instance type to use"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 21,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 21,
                    Column: (int) 42
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 21,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 21,
                    Column: (int) 42
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 22,
                    Column: (int) 13
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 22,
                    Column: (int) 18
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=6) "secret",
              Path: (string) (len=30) "/variables/instanceType/secret",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(false),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 22,
                    Column: (int) 13
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 22,
                    Column: (int) 18
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 22,
                    Column: (int) 13
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 22,
                    Column: (int) 18
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 23,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 23,
                    Column: (int) 22
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=7) "default",
              Path: (string) (len=31) "/variables/instanceType/default",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=8) "t2.micro"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 23,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 23,
                    Column: (int) 22
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 23,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 23,
                    Column: (int) 22
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 25,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 25,
                    Column: (int) 17
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=13) "allowedValues",
              Path: (string) (len=37) "/variables/instanceType/allowedValues",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=4) {
                (*schema.TreeNode)({
                  Label: (string) (len=1) "0",
                  Path: (string) (len=39) "/variables/instanceType/allowedValues/0",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=8) "t2.micro"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 25,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 25,
                        Column: (int) 17
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 25,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 25,
                        Column: (int) 17
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 26,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 26,
                        Column: (int) 17
                      })
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=1) "1",
                  Path: (string) (len=39) "/variables/instanceType/allowedValues/1",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=8) "t2.small"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 26,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 26,
                        Column: (int) 17
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 26,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 26,
                        Column: (int) 17
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 27,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 27,
                        Column: (int) 18
                      })
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=1) "2",
                  Path: (string) (len=39) "/variables/instanceType/allowedValues/2",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=9) "t2.medium"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 27,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 27,
                        Column: (int) 18
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 27,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 27,
                        Column: (int) 18
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 28,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 28,
                        Column: (int) 17
                      })
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=1) "3",
                  Path: (string) (len=39) "/variables/instanceType/allowedValues/3",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=8) "t2.large"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 28,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 28,
                        Column: (int) 17
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 28,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 28,
                        Column: (int) 17
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 31,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (interface {}) <nil>,
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 25,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 25,
                    Column: (int) 17
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 31,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=20) "aws/ec2/instanceType",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 20,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 20,
                  Column: (int) 31
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=24) "The instance type to use"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 21,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 21,
                  Column: (int) 42
                })
              })
            }),
            Secret: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(false),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 22,
                  Column: (int) 13
                },
                EndPosition: (*source.Position)({
                  Line: (int) 22,
                  Column: (int) 18
                })
              })
            }),
            Default: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=8) "t2.micro"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 23,
                  Column: (int) 14
                },
                EndPosition: (*source.Position)({
                  Line: (int) 23,
                  Column: (int) 22
                })
              })
            }),
            AllowedValues: ([]*core.ScalarValue) (len=4) {
              (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=8) "t2.micro"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 25,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 25,
                    Column: (int) 17
                  })
                })
              }),
              (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=8) "t2.small"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 26,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 26,
                    Column: (int) 17
                  })
                })
              }),
              (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=9) "t2.medium"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 27,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 27,
                    Column: (int) 18
                  })
                })
              }),
              (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=8) "t2.large"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 28,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 28,
                    Column: (int) 17
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 20,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 19,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 31,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        })
      },
      SchemaElement: (*schema.VariableMap)({
        Values: (map[string]*schema.Variable) (len=5) {
          (string) (len=13) "dynamoDBTable": (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 6,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 6,
                  Column: (int) 17
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=25) "The Orders DynamoDB Table"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 7,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 7,
                  Column: (int) 43
                })
              })
            }),
            Secret: (*core.ScalarValue)(<nil>),
            Default: (*core.ScalarValue)(<nil>),
            AllowedValues: ([]*core.ScalarValue) <nil>,
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 6,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=11) "environment": (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 12,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 12,
                  Column: (int) 17
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=28) "The environment to deploy to"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 13,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 13,
                  Column: (int) 46
                })
              })
            }),
            Secret: (*core.ScalarValue)(<nil>),
            Default: (*core.ScalarValue)(<nil>),
            AllowedValues: ([]*core.ScalarValue) <nil>,
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 12,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=12) "instanceType": (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=20) "aws/ec2/instanceType",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 20,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 20,
                  Column: (int) 31
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=24) "The instance type to use"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 21,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 21,
                  Column: (int) 42
                })
              })
            }),
            Secret: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(false),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 22,
                  Column: (int) 13
                },
                EndPosition: (*source.Position)({
                  Line: (int) 22,
                  Column: (int) 18
                })
              })
            }),
            Default: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=8) "t2.micro"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 23,
                  Column: (int) 14
                },
                EndPosition: (*source.Position)({
                  Line: (int) 23,
                  Column: (int) 22
                })
              })
            }),
            AllowedValues: ([]*core.ScalarValue) (len=4) {
              (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=8) "t2.micro"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 25,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 25,
                    Column: (int) 17
                  })
                })
              }),
              (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=8) "t2.small"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 26,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 26,
                    Column: (int) 17
                  })
                })
              }),
              (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=9) "t2.medium"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 27,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 27,
                    Column: (int) 18
                  })
                })
              }),
              (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=8) "t2.large"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 28,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 28,
                    Column: (int) 17
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 20,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=15) "ordersTopicName": (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 9,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 9,
                  Column: (int) 17
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=22) "The Orders Event Topic"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 10,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 10,
                  Column: (int) 40
                })
              })
            }),
            Secret: (*core.ScalarValue)(<nil>),
            Default: (*core.ScalarValue)(<nil>),
            AllowedValues: ([]*core.ScalarValue) <nil>,
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 9,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=6) "region": (*schema.Variable)({
            Type: (*schema.VariableTypeWrapper)({
              Value: (schema.VariableType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 15,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 15,
                  Column: (int) 17
                })
              })
            }),
            Description: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=23) "The region to deploy to"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 16,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 16,
                  Column: (int) 41
                })
              })
            }),
            Secret: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(false),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 17,
                  Column: (int) 13
                },
                EndPosition: (*source.Position)({
                  Line: (int) 17,
                  Column: (int) 18
                })
              })
            }),
            Default: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=9) "us-west-2"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 18,
                  Column: (int) 14
                },
                EndPosition: (*source.Position)({
                  Line: (int) 18,
                  Column: (int) 23
                })
              })
            }),
            AllowedValues: ([]*core.ScalarValue) <nil>,
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 15,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        },
        SourceMeta: (map[string]*source.Meta) (len=5) {
          (string) (len=13) "dynamoDBTable": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 5,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=11) "environment": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 11,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=12) "instanceType": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 19,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=15) "ordersTopicName": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 8,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=6) "region": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 14,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }
      }),
      Range: (*source.Range)({
        Start: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 5,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        End: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 31,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      })
    }),
    (*schema.TreeNode)({
      Label: (string) (len=6) "values",
      Path: (string) (len=7) "/values",
      Type: (schema.TreeNodeType) 0,
      Children: ([]*schema.TreeNode) (len=1) {
        (*schema.TreeNode)({
          Label: (string) (len=12) "computedInfo",
          Path: (string) (len=20) "/values/computedInfo",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=4) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=25) "/values/computedInfo/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.ValueTypeWrapper)({
                Value: (schema.ValueType) (len=6) "object",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 32,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 32,
                    Column: (int) 17
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 32,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 32,
                    Column: (int) 17
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 33,
                    Column: (int) 12
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 33,
                    Column: (int) 98
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=5) "value",
              Path: (string) (len=37) "/values/computedInfo/value/stringSubs",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=6) "object",
                  Path: (string) (len=57) "/values/computedInfo/value/stringSubs/functionCall/object",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=2) {
                    (*schema.TreeNode)({
                      Label: (string) (len=1) "0",
                      Path: (string) (len=63) "/values/computedInfo/value/stringSubs/functionCall/object/arg/0",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=13) "dynamoDBTable",
                          Path: (string) (len=78) "/values/computedInfo/value/stringSubs/functionCall/object/varRef/dynamoDBTable",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=13) "dynamoDBTable",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 32
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 32
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 57
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.SubstitutionFunctionArg)({
                        Name: (string) (len=8) "ddbTable",
                        Value: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=13) "dynamoDBTable",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 32
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 32
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 57
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    }),
                    (*schema.TreeNode)({
                      Label: (string) (len=1) "1",
                      Path: (string) (len=63) "/values/computedInfo/value/stringSubs/functionCall/object/arg/1",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=15) "ordersTopicName",
                          Path: (string) (len=80) "/values/computedInfo/value/stringSubs/functionCall/object/varRef/ordersTopicName",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=15) "ordersTopicName",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 69
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 69
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 34,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 34,
                                Column: (int) 34
                              })
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.SubstitutionFunctionArg)({
                        Name: (string) (len=9) "topicName",
                        Value: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=15) "ordersTopicName",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 69
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 69
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 57
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 57
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 34,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 34,
                            Column: (int) 34
                          })
                        })
                      })
                    })
                  },
                  SchemaElement: (*substitutions.SubstitutionFunctionExpr)({
                    FunctionName: (substitutions.SubstitutionFunctionName) (len=6) "object",
                    Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                      (*substitutions.SubstitutionFunctionArg)({
                        Name: (string) (len=8) "ddbTable",
                        Value: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=13) "dynamoDBTable",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 32
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 32
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      (*substitutions.SubstitutionFunctionArg)({
                        Name: (string) (len=9) "topicName",
                        Value: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=15) "ordersTopicName",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 69
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 69
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 57
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    Path: ([]*substitutions.SubstitutionPathItem) {
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 33,
                        Column: (int) 14
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 33,
                        Column: (int) 14
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 34,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 34,
                        Column: (int) 34
                      })
                    })
                  })
                })
              },
              SchemaElement: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)(<nil>),
                    SubstitutionValue: (*substitutions.Substitution)({
                      Function: (*substitutions.SubstitutionFunctionExpr)({
                        FunctionName: (substitutions.SubstitutionFunctionName) (len=6) "object",
                        Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                          (*substitutions.SubstitutionFunctionArg)({
                            Name: (string) (len=8) "ddbTable",
                            Value: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)({
                                VariableName: (string) (len=13) "dynamoDBTable",
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 33,
                                    Column: (int) 32
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 33,
                                  Column: (int) 32
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          (*substitutions.SubstitutionFunctionArg)({
                            Name: (string) (len=9) "topicName",
                            Value: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)({
                                VariableName: (string) (len=15) "ordersTopicName",
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 33,
                                    Column: (int) 69
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 33,
                                  Column: (int) 69
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 57
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        Path: ([]*substitutions.SubstitutionPathItem) {
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 14
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      Variable: (*substitutions.SubstitutionVariable)(<nil>),
                      ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                      Child: (*substitutions.SubstitutionChild)(<nil>),
                      StringValue: (*string)(<nil>),
                      IntValue: (*int64)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 33,
                          Column: (int) 14
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 33,
                        Column: (int) 12
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 33,
                    Column: (int) 12
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 33,
                    Column: (int) 98
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 33,
                    Column: (int) 12
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 33,
                    Column: (int) 98
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 34,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 34,
                    Column: (int) 34
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=11) "description",
              Path: (string) (len=43) "/values/computedInfo/description/stringSubs",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=6) "string",
                  Path: (string) (len=50) "/values/computedInfo/description/stringSubs/string",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (string) (len=16) "A computed value",
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 34,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 34,
                        Column: (int) 34
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 35,
                        Column: (int) 13
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 35,
                        Column: (int) 18
                      })
                    })
                  })
                })
              },
              SchemaElement: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=16) "A computed value"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 34,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 34,
                        Column: (int) 34
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 34,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 34,
                    Column: (int) 34
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 34,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 34,
                    Column: (int) 34
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 35,
                    Column: (int) 13
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 35,
                    Column: (int) 18
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=6) "secret",
              Path: (string) (len=27) "/values/computedInfo/secret",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(false),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 35,
                    Column: (int) 13
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 35,
                    Column: (int) 18
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 35,
                    Column: (int) 13
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 35,
                    Column: (int) 18
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 38,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Value)({
            Type: (*schema.ValueTypeWrapper)({
              Value: (schema.ValueType) (len=6) "object",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 32,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 32,
                  Column: (int) 17
                })
              })
            }),
            Value: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)(<nil>),
                  SubstitutionValue: (*substitutions.Substitution)({
                    Function: (*substitutions.SubstitutionFunctionExpr)({
                      FunctionName: (substitutions.SubstitutionFunctionName) (len=6) "object",
                      Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                        (*substitutions.SubstitutionFunctionArg)({
                          Name: (string) (len=8) "ddbTable",
                          Value: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=13) "dynamoDBTable",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 33,
                                  Column: (int) 32
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 32
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        (*substitutions.SubstitutionFunctionArg)({
                          Name: (string) (len=9) "topicName",
                          Value: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=15) "ordersTopicName",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 33,
                                  Column: (int) 69
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 69
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 57
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      Path: ([]*substitutions.SubstitutionPathItem) {
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 33,
                          Column: (int) 14
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }),
                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                    Child: (*substitutions.SubstitutionChild)(<nil>),
                    StringValue: (*string)(<nil>),
                    IntValue: (*int64)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 33,
                        Column: (int) 14
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 33,
                      Column: (int) 12
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 33,
                  Column: (int) 12
                },
                EndPosition: (*source.Position)({
                  Line: (int) 33,
                  Column: (int) 98
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=16) "A computed value"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 34,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 34,
                      Column: (int) 34
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 34,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 34,
                  Column: (int) 34
                })
              })
            }),
            Secret: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(false),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 35,
                  Column: (int) 13
                },
                EndPosition: (*source.Position)({
                  Line: (int) 35,
                  Column: (int) 18
                })
              })
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 32,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 31,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 38,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        })
      },
      SchemaElement: (*schema.ValueMap)({
        Values: (map[string]*schema.Value) (len=1) {
          (string) (len=12) "computedInfo": (*schema.Value)({
            Type: (*schema.ValueTypeWrapper)({
              Value: (schema.ValueType) (len=6) "object",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 32,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 32,
                  Column: (int) 17
                })
              })
            }),
            Value: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)(<nil>),
                  SubstitutionValue: (*substitutions.Substitution)({
                    Function: (*substitutions.SubstitutionFunctionExpr)({
                      FunctionName: (substitutions.SubstitutionFunctionName) (len=6) "object",
                      Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                        (*substitutions.SubstitutionFunctionArg)({
                          Name: (string) (len=8) "ddbTable",
                          Value: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=13) "dynamoDBTable",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 33,
                                  Column: (int) 32
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 32
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        (*substitutions.SubstitutionFunctionArg)({
                          Name: (string) (len=9) "topicName",
                          Value: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=15) "ordersTopicName",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 33,
                                  Column: (int) 69
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 69
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 57
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      Path: ([]*substitutions.SubstitutionPathItem) {
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 33,
                          Column: (int) 14
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }),
                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                    Child: (*substitutions.SubstitutionChild)(<nil>),
                    StringValue: (*string)(<nil>),
                    IntValue: (*int64)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 33,
                        Column: (int) 14
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 33,
                      Column: (int) 12
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 33,
                  Column: (int) 12
                },
                EndPosition: (*source.Position)({
                  Line: (int) 33,
                  Column: (int) 98
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=16) "A computed value"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 34,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 34,
                      Column: (int) 34
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 34,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 34,
                  Column: (int) 34
                })
              })
            }),
            Secret: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(false),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 35,
                  Column: (int) 13
                },
                EndPosition: (*source.Position)({
                  Line: (int) 35,
                  Column: (int) 18
                })
              })
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 32,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        },
        SourceMeta: (map[string]*source.Meta) (len=1) {
          (string) (len=12) "computedInfo": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 31,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }
      }),
      Range: (*source.Range)({
        Start: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 31,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        End: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 38,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      })
    }),
    (*schema.TreeNode)({
      Label: (string) (len=8) "includes",
      Path: (string) (len=9) "/includes",
      Type: (schema.TreeNodeType) 0,
      Children: ([]*schema.TreeNode) (len=1) {
        (*schema.TreeNode)({
          Label: (string) (len=10) "networking",
          Path: (string) (len=20) "/includes/networking",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=4) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "path",
              Path: (string) (len=36) "/includes/networking/path/stringSubs",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=6) "string",
                  Path: (string) (len=43) "/includes/networking/path/stringSubs/string",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (string) (len=24) "networking.blueprint.yml",
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 39,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 39,
                        Column: (int) 35
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 40,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 40,
                        Column: (int) 53
                      })
                    })
                  })
                })
              },
              SchemaElement: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=24) "networking.blueprint.yml"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 39,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 39,
                        Column: (int) 35
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 39,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 39,
                    Column: (int) 35
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 39,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 39,
                    Column: (int) 35
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 40,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 40,
                    Column: (int) 53
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=11) "description",
              Path: (string) (len=43) "/includes/networking/description/stringSubs",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=6) "string",
                  Path: (string) (len=50) "/includes/networking/description/stringSubs/string",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (string) (len=35) "The networking blueprint to include",
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 40,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 40,
                        Column: (int) 53
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 42,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=35) "The networking blueprint to include"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 40,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 40,
                        Column: (int) 53
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 40,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 40,
                    Column: (int) 53
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 40,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 40,
                    Column: (int) 53
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 42,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=9) "variables",
              Path: (string) (len=30) "/includes/networking/variables",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=2) {
                (*schema.TreeNode)({
                  Label: (string) (len=11) "environment",
                  Path: (string) (len=42) "/includes/networking/variables/environment",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=10) "stringSubs",
                      Path: (string) (len=53) "/includes/networking/variables/environment/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=11) "environment",
                          Path: (string) (len=72) "/includes/networking/variables/environment/stringSubs/varRef/environment",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=11) "environment",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 42,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 42,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 43,
                                Column: (int) 7
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)({
                                VariableName: (string) (len=11) "environment",
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 42,
                                    Column: (int) 22
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 42,
                                  Column: (int) 22
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 42,
                                Column: (int) 20
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 42,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 42,
                            Column: (int) 44
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 42,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 42,
                            Column: (int) 44
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 43,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=11) "environment",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 42,
                                  Column: (int) 22
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 42,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 42,
                              Column: (int) 20
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 42,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 42,
                          Column: (int) 44
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 42,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 42,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 43,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "region",
                  Path: (string) (len=37) "/includes/networking/variables/region",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=10) "stringSubs",
                      Path: (string) (len=48) "/includes/networking/variables/region/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "region",
                          Path: (string) (len=62) "/includes/networking/variables/region/stringSubs/varRef/region",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=6) "region",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 43,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 43,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 45,
                                Column: (int) 7
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)({
                                VariableName: (string) (len=6) "region",
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 43,
                                    Column: (int) 17
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 43,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 43,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 43,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 43,
                            Column: (int) 34
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 43,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 43,
                            Column: (int) 34
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 45,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=6) "region",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 43,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 43,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 43,
                              Column: (int) 15
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 43,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 43,
                          Column: (int) 34
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 43,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 43,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 45,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=2) {
                  (string) (len=11) "environment": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=11) "environment",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 42,
                                  Column: (int) 22
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 42,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 42,
                              Column: (int) 20
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 42,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 42,
                          Column: (int) 44
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 42,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=6) "region": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=6) "region",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 43,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 43,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 43,
                              Column: (int) 15
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 43,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 43,
                          Column: (int) 34
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 43,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 42,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                  (string) (len=11) "environment": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 42,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=6) "region": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 43,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 42,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 45,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=8) "metadata",
              Path: (string) (len=29) "/includes/networking/metadata",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=10) "sourceType",
                  Path: (string) (len=40) "/includes/networking/metadata/sourceType",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=47) "/includes/networking/metadata/sourceType/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=6) "aws/s3"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 45,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 45,
                            Column: (int) 25
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 45,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 45,
                            Column: (int) 25
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 46,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=6) "aws/s3"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 45,
                          Column: (int) 19
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 45,
                          Column: (int) 25
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 45,
                        Column: (int) 19
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 45,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 46,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "bucket",
                  Path: (string) (len=36) "/includes/networking/metadata/bucket",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=43) "/includes/networking/metadata/bucket/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=23) "order-system-blueprints"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 46,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 46,
                            Column: (int) 38
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 46,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 46,
                            Column: (int) 38
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 47,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=23) "order-system-blueprints"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 46,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 46,
                          Column: (int) 38
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 46,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 46,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 47,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "region",
                  Path: (string) (len=36) "/includes/networking/metadata/region",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=10) "stringSubs",
                      Path: (string) (len=47) "/includes/networking/metadata/region/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "region",
                          Path: (string) (len=61) "/includes/networking/metadata/region/stringSubs/varRef/region",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=6) "region",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 47,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 47,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 50,
                                Column: (int) 3
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)({
                                VariableName: (string) (len=6) "region",
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 47,
                                    Column: (int) 17
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 47,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 47,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 47,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 47,
                            Column: (int) 36
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 47,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 47,
                            Column: (int) 36
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 50,
                            Column: (int) 3
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=6) "region",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 47,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 47,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 47,
                              Column: (int) 15
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 47,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 47,
                          Column: (int) 36
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 47,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 47,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 50,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=3) {
                  (string) (len=6) "bucket": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=23) "order-system-blueprints"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 46,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 46,
                          Column: (int) 38
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 46,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=6) "region": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=6) "region",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 47,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 47,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 47,
                              Column: (int) 15
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 47,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 47,
                          Column: (int) 36
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 47,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=10) "sourceType": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=6) "aws/s3"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 45,
                          Column: (int) 19
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 45,
                          Column: (int) 25
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 45,
                        Column: (int) 19
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 45,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                  (string) (len=6) "bucket": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 46,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=6) "region": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 47,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=10) "sourceType": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 45,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 45,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 50,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Include)({
            Path: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=24) "networking.blueprint.yml"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 39,
                      Column: (int) 11
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 39,
                      Column: (int) 35
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 39,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 39,
                  Column: (int) 35
                })
              })
            }),
            Variables: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=2) {
                (string) (len=11) "environment": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=11) "environment",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 42,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 42,
                              Column: (int) 22
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 42,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 42,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 42,
                        Column: (int) 44
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 42,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=6) "region": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=6) "region",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 43,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 43,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 43,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 43,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 43,
                        Column: (int) 34
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 43,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 42,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                (string) (len=11) "environment": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 42,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=6) "region": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 43,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Metadata: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=6) "bucket": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=23) "order-system-blueprints"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 46,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 46,
                        Column: (int) 38
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 46,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=6) "region": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=6) "region",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 47,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 47,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 47,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 47,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 47,
                        Column: (int) 36
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 47,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=10) "sourceType": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=6) "aws/s3"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 45,
                        Column: (int) 19
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 45,
                        Column: (int) 25
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 45,
                      Column: (int) 19
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 45,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=6) "bucket": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 46,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=6) "region": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 47,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=10) "sourceType": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 45,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Description: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=35) "The networking blueprint to include"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 40,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 40,
                      Column: (int) 53
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 40,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 40,
                  Column: (int) 53
                })
              })
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 39,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 38,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 50,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        })
      },
      SchemaElement: (*schema.IncludeMap)({
        Values: (map[string]*schema.Include) (len=1) {
          (string) (len=10) "networking": (*schema.Include)({
            Path: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=24) "networking.blueprint.yml"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 39,
                      Column: (int) 11
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 39,
                      Column: (int) 35
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 39,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 39,
                  Column: (int) 35
                })
              })
            }),
            Variables: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=2) {
                (string) (len=11) "environment": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=11) "environment",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 42,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 42,
                              Column: (int) 22
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 42,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 42,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 42,
                        Column: (int) 44
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 42,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=6) "region": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=6) "region",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 43,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 43,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 43,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 43,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 43,
                        Column: (int) 34
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 43,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 42,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                (string) (len=11) "environment": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 42,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=6) "region": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 43,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Metadata: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=6) "bucket": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=23) "order-system-blueprints"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 46,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 46,
                        Column: (int) 38
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 46,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=6) "region": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=6) "region",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 47,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 47,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 47,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 47,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 47,
                        Column: (int) 36
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 47,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=10) "sourceType": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=6) "aws/s3"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 45,
                        Column: (int) 19
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 45,
                        Column: (int) 25
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 45,
                      Column: (int) 19
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 45,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=6) "bucket": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 46,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=6) "region": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 47,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=10) "sourceType": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 45,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Description: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=35) "The networking blueprint to include"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 40,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 40,
                      Column: (int) 53
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 40,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 40,
                  Column: (int) 53
                })
              })
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 39,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        },
        SourceMeta: (map[string]*source.Meta) (len=1) {
          (string) (len=10) "networking": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 38,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }
      }),
      Range: (*source.Range)({
        Start: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 38,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        End: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 50,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      })
    }),
    (*schema.TreeNode)({
      Label: (string) (len=11) "datasources",
      Path: (string) (len=12) "/datasources",
      Type: (schema.TreeNodeType) 0,
      Children: ([]*schema.TreeNode) (len=1) {
        (*schema.TreeNode)({
          Label: (string) (len=7) "network",
          Path: (string) (len=20) "/datasources/network",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=4) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=25) "/datasources/network/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.DataSourceTypeWrapper)({
                Value: (string) (len=7) "aws/vpc",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 51,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 51,
                    Column: (int) 20
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 51,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 51,
                    Column: (int) 20
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 53,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=8) "metadata",
              Path: (string) (len=29) "/datasources/network/metadata",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=11) "displayName",
                  Path: (string) (len=52) "/datasources/network/metadata/displayName/stringSubs",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=59) "/datasources/network/metadata/displayName/stringSubs/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=14) "Network source",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 53,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 53,
                            Column: (int) 34
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 55,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=14) "Network source"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 53,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 53,
                            Column: (int) 34
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 53,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 53,
                        Column: (int) 34
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 53,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 53,
                        Column: (int) 34
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 55,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.DataSourceMetadata)({
                DisplayName: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=14) "Network source"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 53,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 53,
                          Column: (int) 34
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 53,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 53,
                      Column: (int) 34
                    })
                  })
                }),
                Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
                Custom: (*core.MappingNode)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 53,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 53,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 55,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=6) "filter",
              Path: (string) (len=27) "/datasources/network/filter",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=5) "field",
                  Path: (string) (len=33) "/datasources/network/filter/field",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=4) "tags"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 55,
                        Column: (int) 14
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 55,
                        Column: (int) 18
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 55,
                        Column: (int) 14
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 55,
                        Column: (int) 18
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 56,
                        Column: (int) 17
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 56,
                        Column: (int) 24
                      })
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=8) "operator",
                  Path: (string) (len=36) "/datasources/network/filter/operator",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=7) "has key",
                      Path: (string) (len=44) "/datasources/network/filter/operator/has key",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (schema.DataSourceFilterOperator) (len=7) "has key",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 56,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 56,
                            Column: (int) 24
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 57,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.DataSourceFilterOperatorWrapper)({
                    Value: (schema.DataSourceFilterOperator) (len=7) "has key",
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 56,
                        Column: (int) 17
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 56,
                        Column: (int) 24
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 56,
                        Column: (int) 17
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 56,
                        Column: (int) 24
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 57,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "search",
                  Path: (string) (len=34) "/datasources/network/filter/search",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=1) "0",
                      Path: (string) (len=47) "/datasources/network/filter/search/0/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=11) "environment",
                          Path: (string) (len=66) "/datasources/network/filter/search/0/stringSubs/varRef/environment",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=11) "environment",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 57,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 57,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 59,
                                Column: (int) 7
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)({
                                VariableName: (string) (len=11) "environment",
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 57,
                                    Column: (int) 17
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 57,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 57,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 57,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 57,
                            Column: (int) 39
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 57,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 57,
                            Column: (int) 39
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 59,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.DataSourceFilterSearch)({
                    Values: ([]*substitutions.StringOrSubstitutions) (len=1) {
                      (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)({
                                VariableName: (string) (len=11) "environment",
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 57,
                                    Column: (int) 17
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 57,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 57,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 57,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 57,
                            Column: (int) 39
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 57,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 57,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 59,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.DataSourceFilter)({
                Field: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=4) "tags"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 55,
                      Column: (int) 14
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 55,
                      Column: (int) 18
                    })
                  })
                }),
                Operator: (*schema.DataSourceFilterOperatorWrapper)({
                  Value: (schema.DataSourceFilterOperator) (len=7) "has key",
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 56,
                      Column: (int) 17
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 56,
                      Column: (int) 24
                    })
                  })
                }),
                Search: (*schema.DataSourceFilterSearch)({
                  Values: ([]*substitutions.StringOrSubstitutions) (len=1) {
                    (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=11) "environment",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 57,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 57,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 57,
                              Column: (int) 15
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 57,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 57,
                          Column: (int) 39
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 57,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 55,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 55,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 59,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=7) "exports",
              Path: (string) (len=28) "/datasources/network/exports",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=7) "subnets",
                  Path: (string) (len=28) "/datasources/network/subnets",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=4) "type",
                      Path: (string) (len=33) "/datasources/network/subnets/type",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*schema.DataSourceFieldTypeWrapper)({
                        Value: (schema.DataSourceFieldType) (len=5) "array",
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 60,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 60,
                            Column: (int) 20
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 60,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 60,
                            Column: (int) 20
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 61,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.DataSourceFieldExport)({
                    Type: (*schema.DataSourceFieldTypeWrapper)({
                      Value: (schema.DataSourceFieldType) (len=5) "array",
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 60,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 60,
                          Column: (int) 20
                        })
                      })
                    }),
                    AliasFor: (*core.ScalarValue)(<nil>),
                    Description: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 60,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 59,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 61,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=14) "securityGroups",
                  Path: (string) (len=35) "/datasources/network/securityGroups",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=4) "type",
                      Path: (string) (len=40) "/datasources/network/securityGroups/type",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*schema.DataSourceFieldTypeWrapper)({
                        Value: (schema.DataSourceFieldType) (len=5) "array",
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 62,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 62,
                            Column: (int) 20
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 62,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 62,
                            Column: (int) 20
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 63,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.DataSourceFieldExport)({
                    Type: (*schema.DataSourceFieldTypeWrapper)({
                      Value: (schema.DataSourceFieldType) (len=5) "array",
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 62,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 62,
                          Column: (int) 20
                        })
                      })
                    }),
                    AliasFor: (*core.ScalarValue)(<nil>),
                    Description: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 62,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 61,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 63,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=3) "vpc",
                  Path: (string) (len=24) "/datasources/network/vpc",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=4) "type",
                      Path: (string) (len=29) "/datasources/network/vpc/type",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*schema.DataSourceFieldTypeWrapper)({
                        Value: (schema.DataSourceFieldType) (len=6) "string",
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 64,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 64,
                            Column: (int) 21
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 64,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 64,
                            Column: (int) 21
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 69,
                            Column: (int) 3
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.DataSourceFieldExport)({
                    Type: (*schema.DataSourceFieldTypeWrapper)({
                      Value: (schema.DataSourceFieldType) (len=6) "string",
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 64,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 64,
                          Column: (int) 21
                        })
                      })
                    }),
                    AliasFor: (*core.ScalarValue)(<nil>),
                    Description: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 64,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 63,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 69,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.DataSourceFieldExportMap)({
                Values: (map[string]*schema.DataSourceFieldExport) (len=3) {
                  (string) (len=14) "securityGroups": (*schema.DataSourceFieldExport)({
                    Type: (*schema.DataSourceFieldTypeWrapper)({
                      Value: (schema.DataSourceFieldType) (len=5) "array",
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 62,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 62,
                          Column: (int) 20
                        })
                      })
                    }),
                    AliasFor: (*core.ScalarValue)(<nil>),
                    Description: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 62,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  (string) (len=7) "subnets": (*schema.DataSourceFieldExport)({
                    Type: (*schema.DataSourceFieldTypeWrapper)({
                      Value: (schema.DataSourceFieldType) (len=5) "array",
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 60,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 60,
                          Column: (int) 20
                        })
                      })
                    }),
                    AliasFor: (*core.ScalarValue)(<nil>),
                    Description: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 60,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  (string) (len=3) "vpc": (*schema.DataSourceFieldExport)({
                    Type: (*schema.DataSourceFieldTypeWrapper)({
                      Value: (schema.DataSourceFieldType) (len=6) "string",
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 64,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 64,
                          Column: (int) 21
                        })
                      })
                    }),
                    AliasFor: (*core.ScalarValue)(<nil>),
                    Description: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 64,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                },
                SourceMeta: (map[string]*source.Meta) (len=3) {
                  (string) (len=14) "securityGroups": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 61,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=7) "subnets": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 59,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=3) "vpc": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 63,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 59,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 69,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.DataSource)({
            Type: (*schema.DataSourceTypeWrapper)({
              Value: (string) (len=7) "aws/vpc",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 51,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 51,
                  Column: (int) 20
                })
              })
            }),
            DataSourceMetadata: (*schema.DataSourceMetadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=14) "Network source"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 53,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 53,
                        Column: (int) 34
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 53,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 53,
                    Column: (int) 34
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 53,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Filter: (*schema.DataSourceFilter)({
              Field: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=4) "tags"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 55,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 55,
                    Column: (int) 18
                  })
                })
              }),
              Operator: (*schema.DataSourceFilterOperatorWrapper)({
                Value: (schema.DataSourceFilterOperator) (len=7) "has key",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 56,
                    Column: (int) 17
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 56,
                    Column: (int) 24
                  })
                })
              }),
              Search: (*schema.DataSourceFilterSearch)({
                Values: ([]*substitutions.StringOrSubstitutions) (len=1) {
                  (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=11) "environment",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 57,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 57,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 57,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 57,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 57,
                        Column: (int) 39
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 57,
                    Column: (int) 15
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 55,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Exports: (*schema.DataSourceFieldExportMap)({
              Values: (map[string]*schema.DataSourceFieldExport) (len=3) {
                (string) (len=14) "securityGroups": (*schema.DataSourceFieldExport)({
                  Type: (*schema.DataSourceFieldTypeWrapper)({
                    Value: (schema.DataSourceFieldType) (len=5) "array",
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 62,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 62,
                        Column: (int) 20
                      })
                    })
                  }),
                  AliasFor: (*core.ScalarValue)(<nil>),
                  Description: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 62,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }),
                (string) (len=7) "subnets": (*schema.DataSourceFieldExport)({
                  Type: (*schema.DataSourceFieldTypeWrapper)({
                    Value: (schema.DataSourceFieldType) (len=5) "array",
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 60,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 60,
                        Column: (int) 20
                      })
                    })
                  }),
                  AliasFor: (*core.ScalarValue)(<nil>),
                  Description: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 60,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }),
                (string) (len=3) "vpc": (*schema.DataSourceFieldExport)({
                  Type: (*schema.DataSourceFieldTypeWrapper)({
                    Value: (schema.DataSourceFieldType) (len=6) "string",
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 64,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 64,
                        Column: (int) 21
                      })
                    })
                  }),
                  AliasFor: (*core.ScalarValue)(<nil>),
                  Description: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 64,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                })
              },
              SourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=14) "securityGroups": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 61,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "subnets": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 59,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=3) "vpc": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 63,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 51,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 50,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 69,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        })
      },
      SchemaElement: (*schema.DataSourceMap)({
        Values: (map[string]*schema.DataSource) (len=1) {
          (string) (len=7) "network": (*schema.DataSource)({
            Type: (*schema.DataSourceTypeWrapper)({
              Value: (string) (len=7) "aws/vpc",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 51,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 51,
                  Column: (int) 20
                })
              })
            }),
            DataSourceMetadata: (*schema.DataSourceMetadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=14) "Network source"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 53,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 53,
                        Column: (int) 34
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 53,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 53,
                    Column: (int) 34
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 53,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Filter: (*schema.DataSourceFilter)({
              Field: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=4) "tags"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 55,
                    Column: (int) 14
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 55,
                    Column: (int) 18
                  })
                })
              }),
              Operator: (*schema.DataSourceFilterOperatorWrapper)({
                Value: (schema.DataSourceFilterOperator) (len=7) "has key",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 56,
                    Column: (int) 17
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 56,
                    Column: (int) 24
                  })
                })
              }),
              Search: (*schema.DataSourceFilterSearch)({
                Values: ([]*substitutions.StringOrSubstitutions) (len=1) {
                  (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=11) "environment",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 57,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 57,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 57,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 57,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 57,
                        Column: (int) 39
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 57,
                    Column: (int) 15
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 55,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Exports: (*schema.DataSourceFieldExportMap)({
              Values: (map[string]*schema.DataSourceFieldExport) (len=3) {
                (string) (len=14) "securityGroups": (*schema.DataSourceFieldExport)({
                  Type: (*schema.DataSourceFieldTypeWrapper)({
                    Value: (schema.DataSourceFieldType) (len=5) "array",
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 62,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 62,
                        Column: (int) 20
                      })
                    })
                  }),
                  AliasFor: (*core.ScalarValue)(<nil>),
                  Description: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 62,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }),
                (string) (len=7) "subnets": (*schema.DataSourceFieldExport)({
                  Type: (*schema.DataSourceFieldTypeWrapper)({
                    Value: (schema.DataSourceFieldType) (len=5) "array",
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 60,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 60,
                        Column: (int) 20
                      })
                    })
                  }),
                  AliasFor: (*core.ScalarValue)(<nil>),
                  Description: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 60,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }),
                (string) (len=3) "vpc": (*schema.DataSourceFieldExport)({
                  Type: (*schema.DataSourceFieldTypeWrapper)({
                    Value: (schema.DataSourceFieldType) (len=6) "string",
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 64,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 64,
                        Column: (int) 21
                      })
                    })
                  }),
                  AliasFor: (*core.ScalarValue)(<nil>),
                  Description: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 64,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                })
              },
              SourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=14) "securityGroups": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 61,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "subnets": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 59,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=3) "vpc": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 63,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 51,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        },
        SourceMeta: (map[string]*source.Meta) (len=1) {
          (string) (len=7) "network": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 50,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }
      }),
      Range: (*source.Range)({
        Start: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 50,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        End: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 69,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      })
    }),
    (*schema.TreeNode)({
      Label: (string) (len=9) "resources",
      Path: (string) (len=10) "/resources",
      Type: (schema.TreeNodeType) 0,
      Children: ([]*schema.TreeNode) (len=7) {
        (*schema.TreeNode)({
          Label: (string) (len=8) "orderApi",
          Path: (string) (len=19) "/resources/orderApi",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=6) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=24) "/resources/orderApi/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.ResourceTypeWrapper)({
                Value: (string) (len=12) "celerity/api",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 72,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 72,
                    Column: (int) 25
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 72,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 72,
                    Column: (int) 25
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 73,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 73,
                    Column: (int) 46
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=11) "description",
              Path: (string) (len=42) "/resources/orderApi/description/stringSubs",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=6) "string",
                  Path: (string) (len=49) "/resources/orderApi/description/stringSubs/string",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (string) (len=28) "The API for the order system",
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 73,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 73,
                        Column: (int) 46
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 75,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=28) "The API for the order system"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 73,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 73,
                        Column: (int) 46
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 73,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 73,
                    Column: (int) 46
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 73,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 73,
                    Column: (int) 46
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 75,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=9) "condition",
              Path: (string) (len=29) "/resources/orderApi/condition",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=3) "and",
                  Path: (string) (len=33) "/resources/orderApi/condition/and",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=1) "0",
                      Path: (string) (len=35) "/resources/orderApi/condition/and/0",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=3) "not",
                          Path: (string) (len=39) "/resources/orderApi/condition/and/0/not",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=1) "0",
                              Path: (string) (len=41) "/resources/orderApi/condition/and/0/not/0",
                              Type: (schema.TreeNodeType) 0,
                              Children: ([]*schema.TreeNode) (len=1) {
                                (*schema.TreeNode)({
                                  Label: (string) (len=4) "expr",
                                  Path: (string) (len=57) "/resources/orderApi/condition/and/0/not/0/expr/stringSubs",
                                  Type: (schema.TreeNodeType) 0,
                                  Children: ([]*schema.TreeNode) (len=1) {
                                    (*schema.TreeNode)({
                                      Label: (string) (len=2) "eq",
                                      Path: (string) (len=73) "/resources/orderApi/condition/and/0/not/0/expr/stringSubs/functionCall/eq",
                                      Type: (schema.TreeNodeType) 0,
                                      Children: ([]*schema.TreeNode) (len=2) {
                                        (*schema.TreeNode)({
                                          Label: (string) (len=1) "0",
                                          Path: (string) (len=79) "/resources/orderApi/condition/and/0/not/0/expr/stringSubs/functionCall/eq/arg/0",
                                          Type: (schema.TreeNodeType) 0,
                                          Children: ([]*schema.TreeNode) (len=1) {
                                            (*schema.TreeNode)({
                                              Label: (string) (len=3) "len",
                                              Path: (string) (len=90) "/resources/orderApi/condition/and/0/not/0/expr/stringSubs/functionCall/eq/functionCall/len",
                                              Type: (schema.TreeNodeType) 0,
                                              Children: ([]*schema.TreeNode) (len=1) {
                                                (*schema.TreeNode)({
                                                  Label: (string) (len=1) "0",
                                                  Path: (string) (len=96) "/resources/orderApi/condition/and/0/not/0/expr/stringSubs/functionCall/eq/functionCall/len/arg/0",
                                                  Type: (schema.TreeNodeType) 0,
                                                  Children: ([]*schema.TreeNode) (len=1) {
                                                    (*schema.TreeNode)({
                                                      Label: (string) (len=7) "network",
                                                      Path: (string) (len=112) "/resources/orderApi/condition/and/0/not/0/expr/stringSubs/functionCall/eq/functionCall/len/datasourceRef/network",
                                                      Type: (schema.TreeNodeType) 1,
                                                      Children: ([]*schema.TreeNode) <nil>,
                                                      SchemaElement: (*substitutions.SubstitutionDataSourceProperty)({
                                                        DataSourceName: (string) (len=7) "network",
                                                        FieldName: (string) (len=4) "tags",
                                                        PrimitiveArrIndex: (*int64)(<nil>),
                                                        SourceMeta: (*source.Meta)({
                                                          Position: (source.Position) {
                                                            Line: (int) 76,
                                                            Column: (int) 25
                                                          },
                                                          EndPosition: (*source.Position)(<nil>)
                                                        })
                                                      }),
                                                      Range: (*source.Range)({
                                                        Start: (*source.Meta)({
                                                          Position: (source.Position) {
                                                            Line: (int) 76,
                                                            Column: (int) 25
                                                          },
                                                          EndPosition: (*source.Position)(<nil>)
                                                        }),
                                                        End: (*source.Meta)({
                                                          Position: (source.Position) {
                                                            Line: (int) 76,
                                                            Column: (int) 52
                                                          },
                                                          EndPosition: (*source.Position)(<nil>)
                                                        })
                                                      })
                                                    })
                                                  },
                                                  SchemaElement: (*substitutions.SubstitutionFunctionArg)({
                                                    Name: (string) "",
                                                    Value: (*substitutions.Substitution)({
                                                      Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                      Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                      ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                        DataSourceName: (string) (len=7) "network",
                                                        FieldName: (string) (len=4) "tags",
                                                        PrimitiveArrIndex: (*int64)(<nil>),
                                                        SourceMeta: (*source.Meta)({
                                                          Position: (source.Position) {
                                                            Line: (int) 76,
                                                            Column: (int) 25
                                                          },
                                                          EndPosition: (*source.Position)(<nil>)
                                                        })
                                                      }),
                                                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                      Child: (*substitutions.SubstitutionChild)(<nil>),
                                                      StringValue: (*string)(<nil>),
                                                      IntValue: (*int64)(<nil>),
                                                      FloatValue: (*float64)(<nil>),
                                                      BoolValue: (*bool)(<nil>),
                                                      SourceMeta: (*source.Meta)({
                                                        Position: (source.Position) {
                                                          Line: (int) 76,
                                                          Column: (int) 25
                                                        },
                                                        EndPosition: (*source.Position)(<nil>)
                                                      })
                                                    }),
                                                    SourceMeta: (*source.Meta)({
                                                      Position: (source.Position) {
                                                        Line: (int) 76,
                                                        Column: (int) 25
                                                      },
                                                      EndPosition: (*source.Position)(<nil>)
                                                    })
                                                  }),
                                                  Range: (*source.Range)({
                                                    Start: (*source.Meta)({
                                                      Position: (source.Position) {
                                                        Line: (int) 76,
                                                        Column: (int) 25
                                                      },
                                                      EndPosition: (*source.Position)(<nil>)
                                                    }),
                                                    End: (*source.Meta)({
                                                      Position: (source.Position) {
                                                        Line: (int) 76,
                                                        Column: (int) 52
                                                      },
                                                      EndPosition: (*source.Position)(<nil>)
                                                    })
                                                  })
                                                })
                                              },
                                              SchemaElement: (*substitutions.SubstitutionFunctionExpr)({
                                                FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                                Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                                  (*substitutions.SubstitutionFunctionArg)({
                                                    Name: (string) "",
                                                    Value: (*substitutions.Substitution)({
                                                      Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                      Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                      ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                        DataSourceName: (string) (len=7) "network",
                                                        FieldName: (string) (len=4) "tags",
                                                        PrimitiveArrIndex: (*int64)(<nil>),
                                                        SourceMeta: (*source.Meta)({
                                                          Position: (source.Position) {
                                                            Line: (int) 76,
                                                            Column: (int) 25
                                                          },
                                                          EndPosition: (*source.Position)(<nil>)
                                                        })
                                                      }),
                                                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                      Child: (*substitutions.SubstitutionChild)(<nil>),
                                                      StringValue: (*string)(<nil>),
                                                      IntValue: (*int64)(<nil>),
                                                      FloatValue: (*float64)(<nil>),
                                                      BoolValue: (*bool)(<nil>),
                                                      SourceMeta: (*source.Meta)({
                                                        Position: (source.Position) {
                                                          Line: (int) 76,
                                                          Column: (int) 25
                                                        },
                                                        EndPosition: (*source.Position)(<nil>)
                                                      })
                                                    }),
                                                    SourceMeta: (*source.Meta)({
                                                      Position: (source.Position) {
                                                        Line: (int) 76,
                                                        Column: (int) 25
                                                      },
                                                      EndPosition: (*source.Position)(<nil>)
                                                    })
                                                  })
                                                },
                                                Path: ([]*substitutions.SubstitutionPathItem) {
                                                },
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 21
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              }),
                                              Range: (*source.Range)({
                                                Start: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 21
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                }),
                                                End: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 52
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              })
                                            })
                                          },
                                          SchemaElement: (*substitutions.SubstitutionFunctionArg)({
                                            Name: (string) "",
                                            Value: (*substitutions.Substitution)({
                                              Function: (*substitutions.SubstitutionFunctionExpr)({
                                                FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                                Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                                  (*substitutions.SubstitutionFunctionArg)({
                                                    Name: (string) "",
                                                    Value: (*substitutions.Substitution)({
                                                      Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                      Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                      ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                        DataSourceName: (string) (len=7) "network",
                                                        FieldName: (string) (len=4) "tags",
                                                        PrimitiveArrIndex: (*int64)(<nil>),
                                                        SourceMeta: (*source.Meta)({
                                                          Position: (source.Position) {
                                                            Line: (int) 76,
                                                            Column: (int) 25
                                                          },
                                                          EndPosition: (*source.Position)(<nil>)
                                                        })
                                                      }),
                                                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                      Child: (*substitutions.SubstitutionChild)(<nil>),
                                                      StringValue: (*string)(<nil>),
                                                      IntValue: (*int64)(<nil>),
                                                      FloatValue: (*float64)(<nil>),
                                                      BoolValue: (*bool)(<nil>),
                                                      SourceMeta: (*source.Meta)({
                                                        Position: (source.Position) {
                                                          Line: (int) 76,
                                                          Column: (int) 25
                                                        },
                                                        EndPosition: (*source.Position)(<nil>)
                                                      })
                                                    }),
                                                    SourceMeta: (*source.Meta)({
                                                      Position: (source.Position) {
                                                        Line: (int) 76,
                                                        Column: (int) 25
                                                      },
                                                      EndPosition: (*source.Position)(<nil>)
                                                    })
                                                  })
                                                },
                                                Path: ([]*substitutions.SubstitutionPathItem) {
                                                },
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 21
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              }),
                                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                              Child: (*substitutions.SubstitutionChild)(<nil>),
                                              StringValue: (*string)(<nil>),
                                              IntValue: (*int64)(<nil>),
                                              FloatValue: (*float64)(<nil>),
                                              BoolValue: (*bool)(<nil>),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 21
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            }),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 21
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          Range: (*source.Range)({
                                            Start: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 21
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            }),
                                            End: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 52
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          })
                                        }),
                                        (*schema.TreeNode)({
                                          Label: (string) (len=1) "1",
                                          Path: (string) (len=79) "/resources/orderApi/condition/and/0/not/0/expr/stringSubs/functionCall/eq/arg/1",
                                          Type: (schema.TreeNodeType) 0,
                                          Children: ([]*schema.TreeNode) (len=1) {
                                            (*schema.TreeNode)({
                                              Label: (string) (len=3) "int",
                                              Path: (string) (len=77) "/resources/orderApi/condition/and/0/not/0/expr/stringSubs/functionCall/eq/int",
                                              Type: (schema.TreeNodeType) 1,
                                              Children: ([]*schema.TreeNode) <nil>,
                                              SchemaElement: (int64) 10,
                                              Range: (*source.Range)({
                                                Start: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 52
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                }),
                                                End: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 78,
                                                    Column: (int) 7
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              })
                                            })
                                          },
                                          SchemaElement: (*substitutions.SubstitutionFunctionArg)({
                                            Name: (string) "",
                                            Value: (*substitutions.Substitution)({
                                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                              Child: (*substitutions.SubstitutionChild)(<nil>),
                                              StringValue: (*string)(<nil>),
                                              IntValue: (*int64)(10),
                                              FloatValue: (*float64)(<nil>),
                                              BoolValue: (*bool)(<nil>),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 52
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            }),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 52
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          Range: (*source.Range)({
                                            Start: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 52
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            }),
                                            End: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 78,
                                                Column: (int) 7
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          })
                                        })
                                      },
                                      SchemaElement: (*substitutions.SubstitutionFunctionExpr)({
                                        FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                                        Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                                          (*substitutions.SubstitutionFunctionArg)({
                                            Name: (string) "",
                                            Value: (*substitutions.Substitution)({
                                              Function: (*substitutions.SubstitutionFunctionExpr)({
                                                FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                                Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                                  (*substitutions.SubstitutionFunctionArg)({
                                                    Name: (string) "",
                                                    Value: (*substitutions.Substitution)({
                                                      Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                      Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                      ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                        DataSourceName: (string) (len=7) "network",
                                                        FieldName: (string) (len=4) "tags",
                                                        PrimitiveArrIndex: (*int64)(<nil>),
                                                        SourceMeta: (*source.Meta)({
                                                          Position: (source.Position) {
                                                            Line: (int) 76,
                                                            Column: (int) 25
                                                          },
                                                          EndPosition: (*source.Position)(<nil>)
                                                        })
                                                      }),
                                                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                      Child: (*substitutions.SubstitutionChild)(<nil>),
                                                      StringValue: (*string)(<nil>),
                                                      IntValue: (*int64)(<nil>),
                                                      FloatValue: (*float64)(<nil>),
                                                      BoolValue: (*bool)(<nil>),
                                                      SourceMeta: (*source.Meta)({
                                                        Position: (source.Position) {
                                                          Line: (int) 76,
                                                          Column: (int) 25
                                                        },
                                                        EndPosition: (*source.Position)(<nil>)
                                                      })
                                                    }),
                                                    SourceMeta: (*source.Meta)({
                                                      Position: (source.Position) {
                                                        Line: (int) 76,
                                                        Column: (int) 25
                                                      },
                                                      EndPosition: (*source.Position)(<nil>)
                                                    })
                                                  })
                                                },
                                                Path: ([]*substitutions.SubstitutionPathItem) {
                                                },
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 21
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              }),
                                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                              Child: (*substitutions.SubstitutionChild)(<nil>),
                                              StringValue: (*string)(<nil>),
                                              IntValue: (*int64)(<nil>),
                                              FloatValue: (*float64)(<nil>),
                                              BoolValue: (*bool)(<nil>),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 21
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            }),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 21
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          (*substitutions.SubstitutionFunctionArg)({
                                            Name: (string) "",
                                            Value: (*substitutions.Substitution)({
                                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                              Child: (*substitutions.SubstitutionChild)(<nil>),
                                              StringValue: (*string)(<nil>),
                                              IntValue: (*int64)(10),
                                              FloatValue: (*float64)(<nil>),
                                              BoolValue: (*bool)(<nil>),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 52
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            }),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 52
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          })
                                        },
                                        Path: ([]*substitutions.SubstitutionPathItem) {
                                        },
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 18
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      }),
                                      Range: (*source.Range)({
                                        Start: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 18
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        }),
                                        End: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 78,
                                            Column: (int) 7
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      })
                                    })
                                  },
                                  SchemaElement: (*substitutions.StringOrSubstitutions)({
                                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                                      (*substitutions.StringOrSubstitution)({
                                        StringValue: (*string)(<nil>),
                                        SubstitutionValue: (*substitutions.Substitution)({
                                          Function: (*substitutions.SubstitutionFunctionExpr)({
                                            FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                                            Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                                              (*substitutions.SubstitutionFunctionArg)({
                                                Name: (string) "",
                                                Value: (*substitutions.Substitution)({
                                                  Function: (*substitutions.SubstitutionFunctionExpr)({
                                                    FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                                    Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                                      (*substitutions.SubstitutionFunctionArg)({
                                                        Name: (string) "",
                                                        Value: (*substitutions.Substitution)({
                                                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                            DataSourceName: (string) (len=7) "network",
                                                            FieldName: (string) (len=4) "tags",
                                                            PrimitiveArrIndex: (*int64)(<nil>),
                                                            SourceMeta: (*source.Meta)({
                                                              Position: (source.Position) {
                                                                Line: (int) 76,
                                                                Column: (int) 25
                                                              },
                                                              EndPosition: (*source.Position)(<nil>)
                                                            })
                                                          }),
                                                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                          Child: (*substitutions.SubstitutionChild)(<nil>),
                                                          StringValue: (*string)(<nil>),
                                                          IntValue: (*int64)(<nil>),
                                                          FloatValue: (*float64)(<nil>),
                                                          BoolValue: (*bool)(<nil>),
                                                          SourceMeta: (*source.Meta)({
                                                            Position: (source.Position) {
                                                              Line: (int) 76,
                                                              Column: (int) 25
                                                            },
                                                            EndPosition: (*source.Position)(<nil>)
                                                          })
                                                        }),
                                                        SourceMeta: (*source.Meta)({
                                                          Position: (source.Position) {
                                                            Line: (int) 76,
                                                            Column: (int) 25
                                                          },
                                                          EndPosition: (*source.Position)(<nil>)
                                                        })
                                                      })
                                                    },
                                                    Path: ([]*substitutions.SubstitutionPathItem) {
                                                    },
                                                    SourceMeta: (*source.Meta)({
                                                      Position: (source.Position) {
                                                        Line: (int) 76,
                                                        Column: (int) 21
                                                      },
                                                      EndPosition: (*source.Position)(<nil>)
                                                    })
                                                  }),
                                                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                                  StringValue: (*string)(<nil>),
                                                  IntValue: (*int64)(<nil>),
                                                  FloatValue: (*float64)(<nil>),
                                                  BoolValue: (*bool)(<nil>),
                                                  SourceMeta: (*source.Meta)({
                                                    Position: (source.Position) {
                                                      Line: (int) 76,
                                                      Column: (int) 21
                                                    },
                                                    EndPosition: (*source.Position)(<nil>)
                                                  })
                                                }),
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 21
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              }),
                                              (*substitutions.SubstitutionFunctionArg)({
                                                Name: (string) "",
                                                Value: (*substitutions.Substitution)({
                                                  Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                                  StringValue: (*string)(<nil>),
                                                  IntValue: (*int64)(10),
                                                  FloatValue: (*float64)(<nil>),
                                                  BoolValue: (*bool)(<nil>),
                                                  SourceMeta: (*source.Meta)({
                                                    Position: (source.Position) {
                                                      Line: (int) 76,
                                                      Column: (int) 52
                                                    },
                                                    EndPosition: (*source.Position)(<nil>)
                                                  })
                                                }),
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 52
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              })
                                            },
                                            Path: ([]*substitutions.SubstitutionPathItem) {
                                            },
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 18
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                          Child: (*substitutions.SubstitutionChild)(<nil>),
                                          StringValue: (*string)(<nil>),
                                          IntValue: (*int64)(<nil>),
                                          FloatValue: (*float64)(<nil>),
                                          BoolValue: (*bool)(<nil>),
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 18
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        }),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 16
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      })
                                    },
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 16
                                      },
                                      EndPosition: (*source.Position)({
                                        Line: (int) 76,
                                        Column: (int) 56
                                      })
                                    })
                                  }),
                                  Range: (*source.Range)({
                                    Start: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 16
                                      },
                                      EndPosition: (*source.Position)({
                                        Line: (int) 76,
                                        Column: (int) 56
                                      })
                                    }),
                                    End: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 78,
                                        Column: (int) 7
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                })
                              },
                              SchemaElement: (*schema.Condition)({
                                And: ([]*schema.Condition) <nil>,
                                Or: ([]*schema.Condition) <nil>,
                                Not: (*schema.Condition)(<nil>),
                                StringValue: (*substitutions.StringOrSubstitutions)({
                                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                                    (*substitutions.StringOrSubstitution)({
                                      StringValue: (*string)(<nil>),
                                      SubstitutionValue: (*substitutions.Substitution)({
                                        Function: (*substitutions.SubstitutionFunctionExpr)({
                                          FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                                          Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                                            (*substitutions.SubstitutionFunctionArg)({
                                              Name: (string) "",
                                              Value: (*substitutions.Substitution)({
                                                Function: (*substitutions.SubstitutionFunctionExpr)({
                                                  FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                                  Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                                    (*substitutions.SubstitutionFunctionArg)({
                                                      Name: (string) "",
                                                      Value: (*substitutions.Substitution)({
                                                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                        ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                          DataSourceName: (string) (len=7) "network",
                                                          FieldName: (string) (len=4) "tags",
                                                          PrimitiveArrIndex: (*int64)(<nil>),
                                                          SourceMeta: (*source.Meta)({
                                                            Position: (source.Position) {
                                                              Line: (int) 76,
                                                              Column: (int) 25
                                                            },
                                                            EndPosition: (*source.Position)(<nil>)
                                                          })
                                                        }),
                                                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                        Child: (*substitutions.SubstitutionChild)(<nil>),
                                                        StringValue: (*string)(<nil>),
                                                        IntValue: (*int64)(<nil>),
                                                        FloatValue: (*float64)(<nil>),
                                                        BoolValue: (*bool)(<nil>),
                                                        SourceMeta: (*source.Meta)({
                                                          Position: (source.Position) {
                                                            Line: (int) 76,
                                                            Column: (int) 25
                                                          },
                                                          EndPosition: (*source.Position)(<nil>)
                                                        })
                                                      }),
                                                      SourceMeta: (*source.Meta)({
                                                        Position: (source.Position) {
                                                          Line: (int) 76,
                                                          Column: (int) 25
                                                        },
                                                        EndPosition: (*source.Position)(<nil>)
                                                      })
                                                    })
                                                  },
                                                  Path: ([]*substitutions.SubstitutionPathItem) {
                                                  },
                                                  SourceMeta: (*source.Meta)({
                                                    Position: (source.Position) {
                                                      Line: (int) 76,
                                                      Column: (int) 21
                                                    },
                                                    EndPosition: (*source.Position)(<nil>)
                                                  })
                                                }),
                                                Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                                ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                Child: (*substitutions.SubstitutionChild)(<nil>),
                                                StringValue: (*string)(<nil>),
                                                IntValue: (*int64)(<nil>),
                                                FloatValue: (*float64)(<nil>),
                                                BoolValue: (*bool)(<nil>),
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 21
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              }),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 21
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            }),
                                            (*substitutions.SubstitutionFunctionArg)({
                                              Name: (string) "",
                                              Value: (*substitutions.Substitution)({
                                                Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                                ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                Child: (*substitutions.SubstitutionChild)(<nil>),
                                                StringValue: (*string)(<nil>),
                                                IntValue: (*int64)(10),
                                                FloatValue: (*float64)(<nil>),
                                                BoolValue: (*bool)(<nil>),
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 52
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              }),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 52
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            })
                                          },
                                          Path: ([]*substitutions.SubstitutionPathItem) {
                                          },
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 18
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        }),
                                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                        ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                        Child: (*substitutions.SubstitutionChild)(<nil>),
                                        StringValue: (*string)(<nil>),
                                        IntValue: (*int64)(<nil>),
                                        FloatValue: (*float64)(<nil>),
                                        BoolValue: (*bool)(<nil>),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 18
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      }),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 76,
                                          Column: (int) 16
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    })
                                  },
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 16
                                    },
                                    EndPosition: (*source.Position)({
                                      Line: (int) 76,
                                      Column: (int) 56
                                    })
                                  })
                                }),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 76,
                                    Column: (int) 16
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 76,
                                    Column: (int) 16
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 78,
                                    Column: (int) 7
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*schema.Condition)({
                            And: ([]*schema.Condition) <nil>,
                            Or: ([]*schema.Condition) <nil>,
                            Not: (*schema.Condition)(<nil>),
                            StringValue: (*substitutions.StringOrSubstitutions)({
                              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)(<nil>),
                                  SubstitutionValue: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)({
                                      FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                                      Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                                        (*substitutions.SubstitutionFunctionArg)({
                                          Name: (string) "",
                                          Value: (*substitutions.Substitution)({
                                            Function: (*substitutions.SubstitutionFunctionExpr)({
                                              FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                              Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                                (*substitutions.SubstitutionFunctionArg)({
                                                  Name: (string) "",
                                                  Value: (*substitutions.Substitution)({
                                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                      DataSourceName: (string) (len=7) "network",
                                                      FieldName: (string) (len=4) "tags",
                                                      PrimitiveArrIndex: (*int64)(<nil>),
                                                      SourceMeta: (*source.Meta)({
                                                        Position: (source.Position) {
                                                          Line: (int) 76,
                                                          Column: (int) 25
                                                        },
                                                        EndPosition: (*source.Position)(<nil>)
                                                      })
                                                    }),
                                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                                    StringValue: (*string)(<nil>),
                                                    IntValue: (*int64)(<nil>),
                                                    FloatValue: (*float64)(<nil>),
                                                    BoolValue: (*bool)(<nil>),
                                                    SourceMeta: (*source.Meta)({
                                                      Position: (source.Position) {
                                                        Line: (int) 76,
                                                        Column: (int) 25
                                                      },
                                                      EndPosition: (*source.Position)(<nil>)
                                                    })
                                                  }),
                                                  SourceMeta: (*source.Meta)({
                                                    Position: (source.Position) {
                                                      Line: (int) 76,
                                                      Column: (int) 25
                                                    },
                                                    EndPosition: (*source.Position)(<nil>)
                                                  })
                                                })
                                              },
                                              Path: ([]*substitutions.SubstitutionPathItem) {
                                              },
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 21
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            }),
                                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                            Child: (*substitutions.SubstitutionChild)(<nil>),
                                            StringValue: (*string)(<nil>),
                                            IntValue: (*int64)(<nil>),
                                            FloatValue: (*float64)(<nil>),
                                            BoolValue: (*bool)(<nil>),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 21
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 21
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        }),
                                        (*substitutions.SubstitutionFunctionArg)({
                                          Name: (string) "",
                                          Value: (*substitutions.Substitution)({
                                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                            Child: (*substitutions.SubstitutionChild)(<nil>),
                                            StringValue: (*string)(<nil>),
                                            IntValue: (*int64)(10),
                                            FloatValue: (*float64)(<nil>),
                                            BoolValue: (*bool)(<nil>),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 52
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 52
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        })
                                      },
                                      Path: ([]*substitutions.SubstitutionPathItem) {
                                      },
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 76,
                                          Column: (int) 18
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 18
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 16
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 76,
                                  Column: (int) 16
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 76,
                                  Column: (int) 56
                                })
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 76,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 76,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 78,
                                Column: (int) 7
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*schema.Condition)({
                        And: ([]*schema.Condition) <nil>,
                        Or: ([]*schema.Condition) <nil>,
                        Not: (*schema.Condition)({
                          And: ([]*schema.Condition) <nil>,
                          Or: ([]*schema.Condition) <nil>,
                          Not: (*schema.Condition)(<nil>),
                          StringValue: (*substitutions.StringOrSubstitutions)({
                            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                              (*substitutions.StringOrSubstitution)({
                                StringValue: (*string)(<nil>),
                                SubstitutionValue: (*substitutions.Substitution)({
                                  Function: (*substitutions.SubstitutionFunctionExpr)({
                                    FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                                    Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                                      (*substitutions.SubstitutionFunctionArg)({
                                        Name: (string) "",
                                        Value: (*substitutions.Substitution)({
                                          Function: (*substitutions.SubstitutionFunctionExpr)({
                                            FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                            Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                              (*substitutions.SubstitutionFunctionArg)({
                                                Name: (string) "",
                                                Value: (*substitutions.Substitution)({
                                                  Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                    DataSourceName: (string) (len=7) "network",
                                                    FieldName: (string) (len=4) "tags",
                                                    PrimitiveArrIndex: (*int64)(<nil>),
                                                    SourceMeta: (*source.Meta)({
                                                      Position: (source.Position) {
                                                        Line: (int) 76,
                                                        Column: (int) 25
                                                      },
                                                      EndPosition: (*source.Position)(<nil>)
                                                    })
                                                  }),
                                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                                  StringValue: (*string)(<nil>),
                                                  IntValue: (*int64)(<nil>),
                                                  FloatValue: (*float64)(<nil>),
                                                  BoolValue: (*bool)(<nil>),
                                                  SourceMeta: (*source.Meta)({
                                                    Position: (source.Position) {
                                                      Line: (int) 76,
                                                      Column: (int) 25
                                                    },
                                                    EndPosition: (*source.Position)(<nil>)
                                                  })
                                                }),
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 25
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              })
                                            },
                                            Path: ([]*substitutions.SubstitutionPathItem) {
                                            },
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 21
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                          Child: (*substitutions.SubstitutionChild)(<nil>),
                                          StringValue: (*string)(<nil>),
                                          IntValue: (*int64)(<nil>),
                                          FloatValue: (*float64)(<nil>),
                                          BoolValue: (*bool)(<nil>),
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 21
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        }),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 21
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      }),
                                      (*substitutions.SubstitutionFunctionArg)({
                                        Name: (string) "",
                                        Value: (*substitutions.Substitution)({
                                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                          Child: (*substitutions.SubstitutionChild)(<nil>),
                                          StringValue: (*string)(<nil>),
                                          IntValue: (*int64)(10),
                                          FloatValue: (*float64)(<nil>),
                                          BoolValue: (*bool)(<nil>),
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 52
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        }),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 52
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      })
                                    },
                                    Path: ([]*substitutions.SubstitutionPathItem) {
                                    },
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 18
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                  StringValue: (*string)(<nil>),
                                  IntValue: (*int64)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 18
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 76,
                                    Column: (int) 16
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 76,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 76,
                                Column: (int) 56
                              })
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 76,
                              Column: (int) 16
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 76,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 76,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 78,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: ([]*schema.Condition) (len=1) {
                    (*schema.Condition)({
                      And: ([]*schema.Condition) <nil>,
                      Or: ([]*schema.Condition) <nil>,
                      Not: (*schema.Condition)({
                        And: ([]*schema.Condition) <nil>,
                        Or: ([]*schema.Condition) <nil>,
                        Not: (*schema.Condition)(<nil>),
                        StringValue: (*substitutions.StringOrSubstitutions)({
                          Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                            (*substitutions.StringOrSubstitution)({
                              StringValue: (*string)(<nil>),
                              SubstitutionValue: (*substitutions.Substitution)({
                                Function: (*substitutions.SubstitutionFunctionExpr)({
                                  FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                                  Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                                    (*substitutions.SubstitutionFunctionArg)({
                                      Name: (string) "",
                                      Value: (*substitutions.Substitution)({
                                        Function: (*substitutions.SubstitutionFunctionExpr)({
                                          FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                          Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                            (*substitutions.SubstitutionFunctionArg)({
                                              Name: (string) "",
                                              Value: (*substitutions.Substitution)({
                                                Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                                Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                                ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                                ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                                ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                                DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                  DataSourceName: (string) (len=7) "network",
                                                  FieldName: (string) (len=4) "tags",
                                                  PrimitiveArrIndex: (*int64)(<nil>),
                                                  SourceMeta: (*source.Meta)({
                                                    Position: (source.Position) {
                                                      Line: (int) 76,
                                                      Column: (int) 25
                                                    },
                                                    EndPosition: (*source.Position)(<nil>)
                                                  })
                                                }),
                                                ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                                Child: (*substitutions.SubstitutionChild)(<nil>),
                                                StringValue: (*string)(<nil>),
                                                IntValue: (*int64)(<nil>),
                                                FloatValue: (*float64)(<nil>),
                                                BoolValue: (*bool)(<nil>),
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 25
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              }),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 25
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            })
                                          },
                                          Path: ([]*substitutions.SubstitutionPathItem) {
                                          },
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 21
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        }),
                                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                        ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                        Child: (*substitutions.SubstitutionChild)(<nil>),
                                        StringValue: (*string)(<nil>),
                                        IntValue: (*int64)(<nil>),
                                        FloatValue: (*float64)(<nil>),
                                        BoolValue: (*bool)(<nil>),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 21
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      }),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 76,
                                          Column: (int) 21
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    (*substitutions.SubstitutionFunctionArg)({
                                      Name: (string) "",
                                      Value: (*substitutions.Substitution)({
                                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                        ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                        Child: (*substitutions.SubstitutionChild)(<nil>),
                                        StringValue: (*string)(<nil>),
                                        IntValue: (*int64)(10),
                                        FloatValue: (*float64)(<nil>),
                                        BoolValue: (*bool)(<nil>),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 52
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      }),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 76,
                                          Column: (int) 52
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    })
                                  },
                                  Path: ([]*substitutions.SubstitutionPathItem) {
                                  },
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 18
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                Child: (*substitutions.SubstitutionChild)(<nil>),
                                StringValue: (*string)(<nil>),
                                IntValue: (*int64)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 76,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 76,
                                  Column: (int) 16
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 76,
                              Column: (int) 16
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 76,
                              Column: (int) 56
                            })
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 76,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 76,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    })
                  },
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 76,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 78,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.Condition)({
                And: ([]*schema.Condition) (len=1) {
                  (*schema.Condition)({
                    And: ([]*schema.Condition) <nil>,
                    Or: ([]*schema.Condition) <nil>,
                    Not: (*schema.Condition)({
                      And: ([]*schema.Condition) <nil>,
                      Or: ([]*schema.Condition) <nil>,
                      Not: (*schema.Condition)(<nil>),
                      StringValue: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)({
                                FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                                Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                                  (*substitutions.SubstitutionFunctionArg)({
                                    Name: (string) "",
                                    Value: (*substitutions.Substitution)({
                                      Function: (*substitutions.SubstitutionFunctionExpr)({
                                        FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                        Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                          (*substitutions.SubstitutionFunctionArg)({
                                            Name: (string) "",
                                            Value: (*substitutions.Substitution)({
                                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                                DataSourceName: (string) (len=7) "network",
                                                FieldName: (string) (len=4) "tags",
                                                PrimitiveArrIndex: (*int64)(<nil>),
                                                SourceMeta: (*source.Meta)({
                                                  Position: (source.Position) {
                                                    Line: (int) 76,
                                                    Column: (int) 25
                                                  },
                                                  EndPosition: (*source.Position)(<nil>)
                                                })
                                              }),
                                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                              Child: (*substitutions.SubstitutionChild)(<nil>),
                                              StringValue: (*string)(<nil>),
                                              IntValue: (*int64)(<nil>),
                                              FloatValue: (*float64)(<nil>),
                                              BoolValue: (*bool)(<nil>),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 25
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            }),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 25
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          })
                                        },
                                        Path: ([]*substitutions.SubstitutionPathItem) {
                                        },
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 21
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      }),
                                      Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                      ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                      Child: (*substitutions.SubstitutionChild)(<nil>),
                                      StringValue: (*string)(<nil>),
                                      IntValue: (*int64)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 76,
                                          Column: (int) 21
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 21
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  (*substitutions.SubstitutionFunctionArg)({
                                    Name: (string) "",
                                    Value: (*substitutions.Substitution)({
                                      Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                      Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                      ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                      Child: (*substitutions.SubstitutionChild)(<nil>),
                                      StringValue: (*string)(<nil>),
                                      IntValue: (*int64)(10),
                                      FloatValue: (*float64)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 76,
                                          Column: (int) 52
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 52
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                },
                                Path: ([]*substitutions.SubstitutionPathItem) {
                                },
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 76,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 76,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 76,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 76,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 76,
                            Column: (int) 56
                          })
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 76,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }),
                    StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 76,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                },
                Or: ([]*schema.Condition) <nil>,
                Not: (*schema.Condition)(<nil>),
                StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 75,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 75,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 78,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=8) "metadata",
              Path: (string) (len=28) "/resources/orderApi/metadata",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=11) "displayName",
                  Path: (string) (len=51) "/resources/orderApi/metadata/displayName/stringSubs",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=58) "/resources/orderApi/metadata/displayName/stringSubs/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=9) "Order API",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 78,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 78,
                            Column: (int) 29
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 80,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=9) "Order API"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 78,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 78,
                            Column: (int) 29
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 78,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 78,
                        Column: (int) 29
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 78,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 78,
                        Column: (int) 29
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 80,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "labels",
                  Path: (string) (len=35) "/resources/orderApi/metadata/labels",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=42) "/resources/orderApi/metadata/labels/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=8) "orderApi",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 80,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 82,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.StringMap)({
                    Values: (map[string]string) (len=1) {
                      (string) (len=3) "app": (string) (len=8) "orderApi"
                    },
                    SourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=3) "app": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 80,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 80,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 82,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "custom",
                  Path: (string) (len=35) "/resources/orderApi/metadata/custom",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "visual",
                      Path: (string) (len=42) "/resources/orderApi/metadata/custom/visual",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=4) {
                        (*schema.TreeNode)({
                          Label: (string) (len=5) "point",
                          Path: (string) (len=48) "/resources/orderApi/metadata/custom/visual/point",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=6) "scalar",
                              Path: (string) (len=55) "/resources/orderApi/metadata/custom/visual/point/scalar",
                              Type: (schema.TreeNodeType) 1,
                              Children: ([]*schema.TreeNode) <nil>,
                              SchemaElement: (*core.ScalarValue)({
                                IntValue: (*int)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                StringValue: (*string)((len=6) "20 100"),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 83,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 83,
                                    Column: (int) 24
                                  })
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 83,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 83,
                                    Column: (int) 24
                                  })
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 84,
                                    Column: (int) 11
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=6) "20 100"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 83,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 83,
                                  Column: (int) 24
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 83,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 83,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 84,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        }),
                        (*schema.TreeNode)({
                          Label: (string) (len=5) "width",
                          Path: (string) (len=48) "/resources/orderApi/metadata/custom/visual/width",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=6) "scalar",
                              Path: (string) (len=55) "/resources/orderApi/metadata/custom/visual/width/scalar",
                              Type: (schema.TreeNodeType) 1,
                              Children: ([]*schema.TreeNode) <nil>,
                              SchemaElement: (*core.ScalarValue)({
                                IntValue: (*int)(50),
                                BoolValue: (*bool)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                StringValue: (*string)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 84,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 84,
                                    Column: (int) 20
                                  })
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 84,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 84,
                                    Column: (int) 20
                                  })
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 85,
                                    Column: (int) 11
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(50),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 84,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 84,
                                  Column: (int) 20
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 84,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 84,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 85,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        }),
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "height",
                          Path: (string) (len=49) "/resources/orderApi/metadata/custom/visual/height",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=6) "scalar",
                              Path: (string) (len=56) "/resources/orderApi/metadata/custom/visual/height/scalar",
                              Type: (schema.TreeNodeType) 1,
                              Children: ([]*schema.TreeNode) <nil>,
                              SchemaElement: (*core.ScalarValue)({
                                IntValue: (*int)(50),
                                BoolValue: (*bool)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                StringValue: (*string)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 85,
                                    Column: (int) 19
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 85,
                                    Column: (int) 21
                                  })
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 85,
                                    Column: (int) 19
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 85,
                                    Column: (int) 21
                                  })
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 86,
                                    Column: (int) 11
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(50),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 85,
                                  Column: (int) 19
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 85,
                                  Column: (int) 21
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 85,
                                Column: (int) 19
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 85,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 86,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        }),
                        (*schema.TreeNode)({
                          Label: (string) (len=9) "linkPorts",
                          Path: (string) (len=52) "/resources/orderApi/metadata/custom/visual/linkPorts",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=1) "0",
                              Path: (string) (len=54) "/resources/orderApi/metadata/custom/visual/linkPorts/0",
                              Type: (schema.TreeNodeType) 0,
                              Children: ([]*schema.TreeNode) (len=3) {
                                (*schema.TreeNode)({
                                  Label: (string) (len=6) "linkTo",
                                  Path: (string) (len=61) "/resources/orderApi/metadata/custom/visual/linkPorts/0/linkTo",
                                  Type: (schema.TreeNodeType) 0,
                                  Children: ([]*schema.TreeNode) (len=1) {
                                    (*schema.TreeNode)({
                                      Label: (string) (len=6) "scalar",
                                      Path: (string) (len=68) "/resources/orderApi/metadata/custom/visual/linkPorts/0/linkTo/scalar",
                                      Type: (schema.TreeNodeType) 1,
                                      Children: ([]*schema.TreeNode) <nil>,
                                      SchemaElement: (*core.ScalarValue)({
                                        IntValue: (*int)(<nil>),
                                        BoolValue: (*bool)(<nil>),
                                        FloatValue: (*float64)(<nil>),
                                        StringValue: (*string)((len=16) "getOrderEndpoint"),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 87,
                                            Column: (int) 23
                                          },
                                          EndPosition: (*source.Position)({
                                            Line: (int) 87,
                                            Column: (int) 39
                                          })
                                        })
                                      }),
                                      Range: (*source.Range)({
                                        Start: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 87,
                                            Column: (int) 23
                                          },
                                          EndPosition: (*source.Position)({
                                            Line: (int) 87,
                                            Column: (int) 39
                                          })
                                        }),
                                        End: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 88,
                                            Column: (int) 15
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      })
                                    })
                                  },
                                  SchemaElement: (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=16) "getOrderEndpoint"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 87,
                                          Column: (int) 23
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 87,
                                          Column: (int) 39
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 87,
                                        Column: (int) 23
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  Range: (*source.Range)({
                                    Start: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 87,
                                        Column: (int) 15
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    End: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 88,
                                        Column: (int) 15
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                }),
                                (*schema.TreeNode)({
                                  Label: (string) (len=9) "connectAt",
                                  Path: (string) (len=64) "/resources/orderApi/metadata/custom/visual/linkPorts/0/connectAt",
                                  Type: (schema.TreeNodeType) 0,
                                  Children: ([]*schema.TreeNode) (len=1) {
                                    (*schema.TreeNode)({
                                      Label: (string) (len=6) "scalar",
                                      Path: (string) (len=71) "/resources/orderApi/metadata/custom/visual/linkPorts/0/connectAt/scalar",
                                      Type: (schema.TreeNodeType) 1,
                                      Children: ([]*schema.TreeNode) <nil>,
                                      SchemaElement: (*core.ScalarValue)({
                                        IntValue: (*int)(<nil>),
                                        BoolValue: (*bool)(<nil>),
                                        FloatValue: (*float64)(<nil>),
                                        StringValue: (*string)((len=6) "70 100"),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 88,
                                            Column: (int) 26
                                          },
                                          EndPosition: (*source.Position)({
                                            Line: (int) 88,
                                            Column: (int) 32
                                          })
                                        })
                                      }),
                                      Range: (*source.Range)({
                                        Start: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 88,
                                            Column: (int) 26
                                          },
                                          EndPosition: (*source.Position)({
                                            Line: (int) 88,
                                            Column: (int) 32
                                          })
                                        }),
                                        End: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 89,
                                            Column: (int) 15
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      })
                                    })
                                  },
                                  SchemaElement: (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=6) "70 100"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 88,
                                          Column: (int) 26
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 88,
                                          Column: (int) 32
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 88,
                                        Column: (int) 26
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  Range: (*source.Range)({
                                    Start: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 88,
                                        Column: (int) 15
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    End: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 89,
                                        Column: (int) 15
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                }),
                                (*schema.TreeNode)({
                                  Label: (string) (len=10) "annotation",
                                  Path: (string) (len=65) "/resources/orderApi/metadata/custom/visual/linkPorts/0/annotation",
                                  Type: (schema.TreeNodeType) 0,
                                  Children: ([]*schema.TreeNode) (len=1) {
                                    (*schema.TreeNode)({
                                      Label: (string) (len=6) "scalar",
                                      Path: (string) (len=72) "/resources/orderApi/metadata/custom/visual/linkPorts/0/annotation/scalar",
                                      Type: (schema.TreeNodeType) 1,
                                      Children: ([]*schema.TreeNode) <nil>,
                                      SchemaElement: (*core.ScalarValue)({
                                        IntValue: (*int)(<nil>),
                                        BoolValue: (*bool)(<nil>),
                                        FloatValue: (*float64)(<nil>),
                                        StringValue: (*string)((len=10) "Orders API"),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 89,
                                            Column: (int) 27
                                          },
                                          EndPosition: (*source.Position)({
                                            Line: (int) 89,
                                            Column: (int) 37
                                          })
                                        })
                                      }),
                                      Range: (*source.Range)({
                                        Start: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 89,
                                            Column: (int) 27
                                          },
                                          EndPosition: (*source.Position)({
                                            Line: (int) 89,
                                            Column: (int) 37
                                          })
                                        }),
                                        End: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 91,
                                            Column: (int) 7
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      })
                                    })
                                  },
                                  SchemaElement: (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=10) "Orders API"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 89,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 89,
                                          Column: (int) 37
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 89,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  Range: (*source.Range)({
                                    Start: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 89,
                                        Column: (int) 15
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    End: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 91,
                                        Column: (int) 7
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                })
                              },
                              SchemaElement: (*core.MappingNode)({
                                Literal: (*core.ScalarValue)(<nil>),
                                Fields: (map[string]*core.MappingNode) (len=3) {
                                  (string) (len=10) "annotation": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=10) "Orders API"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 89,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 89,
                                          Column: (int) 37
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 89,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  (string) (len=9) "connectAt": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=6) "70 100"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 88,
                                          Column: (int) 26
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 88,
                                          Column: (int) 32
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 88,
                                        Column: (int) 26
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  (string) (len=6) "linkTo": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=16) "getOrderEndpoint"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 87,
                                          Column: (int) 23
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 87,
                                          Column: (int) 39
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 87,
                                        Column: (int) 23
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  })
                                },
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 87,
                                    Column: (int) 15
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                                  (string) (len=10) "annotation": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 89,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  (string) (len=9) "connectAt": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 88,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  (string) (len=6) "linkTo": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 87,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 87,
                                    Column: (int) 15
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 91,
                                    Column: (int) 7
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) (len=1) {
                              (*core.MappingNode)({
                                Literal: (*core.ScalarValue)(<nil>),
                                Fields: (map[string]*core.MappingNode) (len=3) {
                                  (string) (len=10) "annotation": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=10) "Orders API"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 89,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 89,
                                          Column: (int) 37
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 89,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  (string) (len=9) "connectAt": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=6) "70 100"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 88,
                                          Column: (int) 26
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 88,
                                          Column: (int) 32
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 88,
                                        Column: (int) 26
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  (string) (len=6) "linkTo": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=16) "getOrderEndpoint"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 87,
                                          Column: (int) 23
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 87,
                                          Column: (int) 39
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 87,
                                        Column: (int) 23
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  })
                                },
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 87,
                                    Column: (int) 15
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                                  (string) (len=10) "annotation": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 89,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  (string) (len=9) "connectAt": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 88,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  (string) (len=6) "linkTo": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 87,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }
                              })
                            },
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 87,
                                Column: (int) 13
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 86,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 91,
                                Column: (int) 7
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=4) {
                          (string) (len=6) "height": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(50),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 85,
                                  Column: (int) 19
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 85,
                                  Column: (int) 21
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 85,
                                Column: (int) 19
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=9) "linkPorts": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) (len=1) {
                              (*core.MappingNode)({
                                Literal: (*core.ScalarValue)(<nil>),
                                Fields: (map[string]*core.MappingNode) (len=3) {
                                  (string) (len=10) "annotation": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=10) "Orders API"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 89,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 89,
                                          Column: (int) 37
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 89,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  (string) (len=9) "connectAt": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=6) "70 100"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 88,
                                          Column: (int) 26
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 88,
                                          Column: (int) 32
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 88,
                                        Column: (int) 26
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  (string) (len=6) "linkTo": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=16) "getOrderEndpoint"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 87,
                                          Column: (int) 23
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 87,
                                          Column: (int) 39
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 87,
                                        Column: (int) 23
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  })
                                },
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 87,
                                    Column: (int) 15
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                                  (string) (len=10) "annotation": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 89,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  (string) (len=9) "connectAt": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 88,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  (string) (len=6) "linkTo": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 87,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }
                              })
                            },
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 87,
                                Column: (int) 13
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=5) "point": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=6) "20 100"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 83,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 83,
                                  Column: (int) 24
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 83,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=5) "width": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(50),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 84,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 84,
                                  Column: (int) 20
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 84,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 83,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=4) {
                          (string) (len=6) "height": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 85,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=9) "linkPorts": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 86,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=5) "point": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 83,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=5) "width": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 84,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 82,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 91,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=1) {
                      (string) (len=6) "visual": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=4) {
                          (string) (len=6) "height": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(50),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 85,
                                  Column: (int) 19
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 85,
                                  Column: (int) 21
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 85,
                                Column: (int) 19
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=9) "linkPorts": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) (len=1) {
                              (*core.MappingNode)({
                                Literal: (*core.ScalarValue)(<nil>),
                                Fields: (map[string]*core.MappingNode) (len=3) {
                                  (string) (len=10) "annotation": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=10) "Orders API"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 89,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 89,
                                          Column: (int) 37
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 89,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  (string) (len=9) "connectAt": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=6) "70 100"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 88,
                                          Column: (int) 26
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 88,
                                          Column: (int) 32
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 88,
                                        Column: (int) 26
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  }),
                                  (string) (len=6) "linkTo": (*core.MappingNode)({
                                    Literal: (*core.ScalarValue)({
                                      IntValue: (*int)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      StringValue: (*string)((len=16) "getOrderEndpoint"),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 87,
                                          Column: (int) 23
                                        },
                                        EndPosition: (*source.Position)({
                                          Line: (int) 87,
                                          Column: (int) 39
                                        })
                                      })
                                    }),
                                    Fields: (map[string]*core.MappingNode) <nil>,
                                    Items: ([]*core.MappingNode) <nil>,
                                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 87,
                                        Column: (int) 23
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                  })
                                },
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 87,
                                    Column: (int) 15
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                                  (string) (len=10) "annotation": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 89,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  (string) (len=9) "connectAt": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 88,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  (string) (len=6) "linkTo": (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 87,
                                      Column: (int) 15
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }
                              })
                            },
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 87,
                                Column: (int) 13
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=5) "point": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=6) "20 100"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 83,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 83,
                                  Column: (int) 24
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 83,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=5) "width": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(50),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 84,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 84,
                                  Column: (int) 20
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 84,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 83,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=4) {
                          (string) (len=6) "height": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 85,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=9) "linkPorts": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 86,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=5) "point": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 83,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=5) "width": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 84,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 82,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=6) "visual": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 82,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 82,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 91,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.Metadata)({
                DisplayName: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=9) "Order API"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 78,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 78,
                          Column: (int) 29
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 78,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 78,
                      Column: (int) 29
                    })
                  })
                }),
                Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
                Labels: (*schema.StringMap)({
                  Values: (map[string]string) (len=1) {
                    (string) (len=3) "app": (string) (len=8) "orderApi"
                  },
                  SourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=3) "app": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 80,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                Custom: (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) (len=1) {
                    (string) (len=6) "visual": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) (len=4) {
                        (string) (len=6) "height": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)({
                            IntValue: (*int)(50),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 85,
                                Column: (int) 19
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 85,
                                Column: (int) 21
                              })
                            })
                          }),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 85,
                              Column: (int) 19
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        }),
                        (string) (len=9) "linkPorts": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)(<nil>),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) (len=1) {
                            (*core.MappingNode)({
                              Literal: (*core.ScalarValue)(<nil>),
                              Fields: (map[string]*core.MappingNode) (len=3) {
                                (string) (len=10) "annotation": (*core.MappingNode)({
                                  Literal: (*core.ScalarValue)({
                                    IntValue: (*int)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    StringValue: (*string)((len=10) "Orders API"),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 89,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)({
                                        Line: (int) 89,
                                        Column: (int) 37
                                      })
                                    })
                                  }),
                                  Fields: (map[string]*core.MappingNode) <nil>,
                                  Items: ([]*core.MappingNode) <nil>,
                                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 89,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                }),
                                (string) (len=9) "connectAt": (*core.MappingNode)({
                                  Literal: (*core.ScalarValue)({
                                    IntValue: (*int)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    StringValue: (*string)((len=6) "70 100"),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 88,
                                        Column: (int) 26
                                      },
                                      EndPosition: (*source.Position)({
                                        Line: (int) 88,
                                        Column: (int) 32
                                      })
                                    })
                                  }),
                                  Fields: (map[string]*core.MappingNode) <nil>,
                                  Items: ([]*core.MappingNode) <nil>,
                                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 88,
                                      Column: (int) 26
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                }),
                                (string) (len=6) "linkTo": (*core.MappingNode)({
                                  Literal: (*core.ScalarValue)({
                                    IntValue: (*int)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    StringValue: (*string)((len=16) "getOrderEndpoint"),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 87,
                                        Column: (int) 23
                                      },
                                      EndPosition: (*source.Position)({
                                        Line: (int) 87,
                                        Column: (int) 39
                                      })
                                    })
                                  }),
                                  Fields: (map[string]*core.MappingNode) <nil>,
                                  Items: ([]*core.MappingNode) <nil>,
                                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 87,
                                      Column: (int) 23
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  }),
                                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                                })
                              },
                              Items: ([]*core.MappingNode) <nil>,
                              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 87,
                                  Column: (int) 15
                                },
                                EndPosition: (*source.Position)(<nil>)
                              }),
                              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                                (string) (len=10) "annotation": (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 89,
                                    Column: (int) 15
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                (string) (len=9) "connectAt": (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 88,
                                    Column: (int) 15
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                (string) (len=6) "linkTo": (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 87,
                                    Column: (int) 15
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }
                            })
                          },
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 87,
                              Column: (int) 13
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        }),
                        (string) (len=5) "point": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)({
                            IntValue: (*int)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)((len=6) "20 100"),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 83,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 83,
                                Column: (int) 24
                              })
                            })
                          }),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 83,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        }),
                        (string) (len=5) "width": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)({
                            IntValue: (*int)(50),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 84,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 84,
                                Column: (int) 20
                              })
                            })
                          }),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 84,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        })
                      },
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 83,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) (len=4) {
                        (string) (len=6) "height": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 85,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        (string) (len=9) "linkPorts": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 86,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        (string) (len=5) "point": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 83,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        (string) (len=5) "width": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 84,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }
                    })
                  },
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 82,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=6) "visual": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 82,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 78,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 78,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 91,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=12) "linkSelector",
              Path: (string) (len=32) "/resources/orderApi/linkSelector",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=7) "byLabel",
                  Path: (string) (len=40) "/resources/orderApi/linkSelector/byLabel",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=47) "/resources/orderApi/linkSelector/byLabel/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=8) "orderApi",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 92,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 103,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.StringMap)({
                    Values: (map[string]string) (len=1) {
                      (string) (len=3) "app": (string) (len=8) "orderApi"
                    },
                    SourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=3) "app": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 92,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 92,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 103,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.LinkSelector)({
                ByLabel: (*schema.StringMap)({
                  Values: (map[string]string) (len=1) {
                    (string) (len=3) "app": (string) (len=8) "orderApi"
                  },
                  SourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=3) "app": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 92,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 91,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 91,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 103,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=4) "spec",
              Path: (string) (len=24) "/resources/orderApi/spec",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=11) "environment",
                  Path: (string) (len=36) "/resources/orderApi/spec/environment",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=9) "variables",
                      Path: (string) (len=46) "/resources/orderApi/spec/environment/variables",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=14) "DYNAMODB_TABLE",
                          Path: (string) (len=61) "/resources/orderApi/spec/environment/variables/DYNAMODB_TABLE",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=10) "stringSubs",
                              Path: (string) (len=72) "/resources/orderApi/spec/environment/variables/DYNAMODB_TABLE/stringSubs",
                              Type: (schema.TreeNodeType) 0,
                              Children: ([]*schema.TreeNode) (len=1) {
                                (*schema.TreeNode)({
                                  Label: (string) (len=13) "dynamoDBTable",
                                  Path: (string) (len=93) "/resources/orderApi/spec/environment/variables/DYNAMODB_TABLE/stringSubs/varRef/dynamoDBTable",
                                  Type: (schema.TreeNodeType) 1,
                                  Children: ([]*schema.TreeNode) <nil>,
                                  SchemaElement: (*substitutions.SubstitutionVariable)({
                                    VariableName: (string) (len=13) "dynamoDBTable",
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 105,
                                        Column: (int) 29
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  Range: (*source.Range)({
                                    Start: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 105,
                                        Column: (int) 29
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    End: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 110,
                                        Column: (int) 7
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                })
                              },
                              SchemaElement: (*substitutions.StringOrSubstitutions)({
                                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                                  (*substitutions.StringOrSubstitution)({
                                    StringValue: (*string)(<nil>),
                                    SubstitutionValue: (*substitutions.Substitution)({
                                      Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                      Variable: (*substitutions.SubstitutionVariable)({
                                        VariableName: (string) (len=13) "dynamoDBTable",
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 105,
                                            Column: (int) 29
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      }),
                                      ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                      Child: (*substitutions.SubstitutionChild)(<nil>),
                                      StringValue: (*string)(<nil>),
                                      IntValue: (*int64)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 105,
                                          Column: (int) 29
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 105,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                },
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 105,
                                    Column: (int) 27
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 105,
                                    Column: (int) 53
                                  })
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 105,
                                    Column: (int) 27
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 105,
                                    Column: (int) 53
                                  })
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 110,
                                    Column: (int) 7
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)(<nil>),
                                  SubstitutionValue: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)({
                                      VariableName: (string) (len=13) "dynamoDBTable",
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 105,
                                          Column: (int) 29
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 105,
                                        Column: (int) 29
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 105,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 105,
                                  Column: (int) 27
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 105,
                                  Column: (int) 53
                                })
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 105,
                                Column: (int) 27
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 105,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 110,
                                Column: (int) 7
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=1) {
                          (string) (len=14) "DYNAMODB_TABLE": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)(<nil>),
                                  SubstitutionValue: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)({
                                      VariableName: (string) (len=13) "dynamoDBTable",
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 105,
                                          Column: (int) 29
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 105,
                                        Column: (int) 29
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 105,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 105,
                                  Column: (int) 27
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 105,
                                  Column: (int) 53
                                })
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 105,
                                Column: (int) 27
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 105,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                          (string) (len=14) "DYNAMODB_TABLE": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 105,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 104,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 110,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=1) {
                      (string) (len=9) "variables": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=1) {
                          (string) (len=14) "DYNAMODB_TABLE": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)(<nil>),
                                  SubstitutionValue: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)({
                                      VariableName: (string) (len=13) "dynamoDBTable",
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 105,
                                          Column: (int) 29
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 105,
                                        Column: (int) 29
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 105,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 105,
                                  Column: (int) 27
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 105,
                                  Column: (int) 53
                                })
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 105,
                                Column: (int) 27
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 105,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                          (string) (len=14) "DYNAMODB_TABLE": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 105,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 104,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=9) "variables": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 104,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 103,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 110,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=7) "runtime",
                  Path: (string) (len=32) "/resources/orderApi/spec/runtime",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=39) "/resources/orderApi/spec/runtime/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=5) "go1.x"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 110,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 110,
                            Column: (int) 21
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 110,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 110,
                            Column: (int) 21
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 113,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=5) "go1.x"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 110,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 110,
                          Column: (int) 21
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 110,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 110,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 113,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=14) "tracingEnabled",
                  Path: (string) (len=39) "/resources/orderApi/spec/tracingEnabled",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=46) "/resources/orderApi/spec/tracingEnabled/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(true),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 113,
                            Column: (int) 23
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 113,
                            Column: (int) 27
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 113,
                            Column: (int) 23
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 113,
                            Column: (int) 27
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 120,
                            Column: (int) 3
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(true),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 113,
                          Column: (int) 23
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 113,
                          Column: (int) 27
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 113,
                        Column: (int) 23
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 113,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 120,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=3) {
                  (string) (len=11) "environment": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=1) {
                      (string) (len=9) "variables": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=1) {
                          (string) (len=14) "DYNAMODB_TABLE": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)(<nil>),
                                  SubstitutionValue: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)({
                                      VariableName: (string) (len=13) "dynamoDBTable",
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 105,
                                          Column: (int) 29
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 105,
                                        Column: (int) 29
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 105,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 105,
                                  Column: (int) 27
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 105,
                                  Column: (int) 53
                                })
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 105,
                                Column: (int) 27
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 105,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                          (string) (len=14) "DYNAMODB_TABLE": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 105,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 104,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=9) "variables": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 104,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  (string) (len=7) "runtime": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=5) "go1.x"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 110,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 110,
                          Column: (int) 21
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 110,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=14) "tracingEnabled": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(true),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 113,
                          Column: (int) 23
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 113,
                          Column: (int) 27
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 113,
                        Column: (int) 23
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 103,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                  (string) (len=11) "environment": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 103,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=7) "runtime": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 110,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=14) "tracingEnabled": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 113,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 103,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 120,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=12) "celerity/api",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 72,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 72,
                  Column: (int) 25
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=28) "The API for the order system"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 73,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 73,
                      Column: (int) 46
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 73,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 73,
                  Column: (int) 46
                })
              })
            }),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=9) "Order API"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 78,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 78,
                        Column: (int) 29
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 78,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 78,
                    Column: (int) 29
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=3) "app": (string) (len=8) "orderApi"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 80,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=1) {
                  (string) (len=6) "visual": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=4) {
                      (string) (len=6) "height": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(50),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 85,
                              Column: (int) 19
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 85,
                              Column: (int) 21
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 85,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=9) "linkPorts": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) (len=1) {
                          (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) (len=3) {
                              (string) (len=10) "annotation": (*core.MappingNode)({
                                Literal: (*core.ScalarValue)({
                                  IntValue: (*int)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  StringValue: (*string)((len=10) "Orders API"),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 89,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)({
                                      Line: (int) 89,
                                      Column: (int) 37
                                    })
                                  })
                                }),
                                Fields: (map[string]*core.MappingNode) <nil>,
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 89,
                                    Column: (int) 27
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) <nil>
                              }),
                              (string) (len=9) "connectAt": (*core.MappingNode)({
                                Literal: (*core.ScalarValue)({
                                  IntValue: (*int)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  StringValue: (*string)((len=6) "70 100"),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 88,
                                      Column: (int) 26
                                    },
                                    EndPosition: (*source.Position)({
                                      Line: (int) 88,
                                      Column: (int) 32
                                    })
                                  })
                                }),
                                Fields: (map[string]*core.MappingNode) <nil>,
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 88,
                                    Column: (int) 26
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) <nil>
                              }),
                              (string) (len=6) "linkTo": (*core.MappingNode)({
                                Literal: (*core.ScalarValue)({
                                  IntValue: (*int)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  StringValue: (*string)((len=16) "getOrderEndpoint"),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 87,
                                      Column: (int) 23
                                    },
                                    EndPosition: (*source.Position)({
                                      Line: (int) 87,
                                      Column: (int) 39
                                    })
                                  })
                                }),
                                Fields: (map[string]*core.MappingNode) <nil>,
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 87,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) <nil>
                              })
                            },
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 87,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                              (string) (len=10) "annotation": (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 89,
                                  Column: (int) 15
                                },
                                EndPosition: (*source.Position)(<nil>)
                              }),
                              (string) (len=9) "connectAt": (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 88,
                                  Column: (int) 15
                                },
                                EndPosition: (*source.Position)(<nil>)
                              }),
                              (string) (len=6) "linkTo": (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 87,
                                  Column: (int) 15
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }
                          })
                        },
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 87,
                            Column: (int) 13
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=5) "point": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=6) "20 100"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 83,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 83,
                              Column: (int) 24
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 83,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=5) "width": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(50),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 84,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 84,
                              Column: (int) 20
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 84,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 83,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=4) {
                      (string) (len=6) "height": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 85,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=9) "linkPorts": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 86,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=5) "point": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 83,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=5) "width": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 84,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 82,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=6) "visual": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 82,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 78,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)({
              And: ([]*schema.Condition) (len=1) {
                (*schema.Condition)({
                  And: ([]*schema.Condition) <nil>,
                  Or: ([]*schema.Condition) <nil>,
                  Not: (*schema.Condition)({
                    And: ([]*schema.Condition) <nil>,
                    Or: ([]*schema.Condition) <nil>,
                    Not: (*schema.Condition)(<nil>),
                    StringValue: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)({
                              FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                              Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                                (*substitutions.SubstitutionFunctionArg)({
                                  Name: (string) "",
                                  Value: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)({
                                      FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                      Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                        (*substitutions.SubstitutionFunctionArg)({
                                          Name: (string) "",
                                          Value: (*substitutions.Substitution)({
                                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                              DataSourceName: (string) (len=7) "network",
                                              FieldName: (string) (len=4) "tags",
                                              PrimitiveArrIndex: (*int64)(<nil>),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 25
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            }),
                                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                            Child: (*substitutions.SubstitutionChild)(<nil>),
                                            StringValue: (*string)(<nil>),
                                            IntValue: (*int64)(<nil>),
                                            FloatValue: (*float64)(<nil>),
                                            BoolValue: (*bool)(<nil>),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 25
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 25
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        })
                                      },
                                      Path: ([]*substitutions.SubstitutionPathItem) {
                                      },
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 76,
                                          Column: (int) 21
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 21
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 21
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                (*substitutions.SubstitutionFunctionArg)({
                                  Name: (string) "",
                                  Value: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(10),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 52
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 52
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              Path: ([]*substitutions.SubstitutionPathItem) {
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 76,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 76,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 76,
                              Column: (int) 16
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 76,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 76,
                          Column: (int) 56
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 76,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 76,
                      Column: (int) 11
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                })
              },
              Or: ([]*schema.Condition) <nil>,
              Not: (*schema.Condition)(<nil>),
              StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 75,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)({
              ByLabel: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=3) "app": (string) (len=8) "orderApi"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 92,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 91,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=11) "environment": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) (len=1) {
                    (string) (len=9) "variables": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) (len=1) {
                        (string) (len=14) "DYNAMODB_TABLE": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)(<nil>),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                              (*substitutions.StringOrSubstitution)({
                                StringValue: (*string)(<nil>),
                                SubstitutionValue: (*substitutions.Substitution)({
                                  Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                  Variable: (*substitutions.SubstitutionVariable)({
                                    VariableName: (string) (len=13) "dynamoDBTable",
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 105,
                                        Column: (int) 29
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                  StringValue: (*string)(<nil>),
                                  IntValue: (*int64)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 105,
                                      Column: (int) 29
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 105,
                                    Column: (int) 27
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 105,
                                Column: (int) 27
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 105,
                                Column: (int) 53
                              })
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 105,
                              Column: (int) 27
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        })
                      },
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 105,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                        (string) (len=14) "DYNAMODB_TABLE": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 105,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }
                    })
                  },
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 104,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=9) "variables": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 104,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                (string) (len=7) "runtime": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=5) "go1.x"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 110,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 110,
                        Column: (int) 21
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 110,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=14) "tracingEnabled": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(true),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 113,
                        Column: (int) 23
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 113,
                        Column: (int) 27
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 113,
                      Column: (int) 23
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 103,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=11) "environment": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 103,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "runtime": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 110,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=14) "tracingEnabled": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 113,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 72,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 69,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 120,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=10) "authoriser",
          Path: (string) (len=21) "/resources/authoriser",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=3) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=26) "/resources/authoriser/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.ResourceTypeWrapper)({
                Value: (string) (len=16) "celerity/handler",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 121,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 121,
                    Column: (int) 29
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 121,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 121,
                    Column: (int) 29
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 123,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=8) "metadata",
              Path: (string) (len=30) "/resources/authoriser/metadata",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=11) "displayName",
                  Path: (string) (len=53) "/resources/authoriser/metadata/displayName/stringSubs",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=60) "/resources/authoriser/metadata/displayName/stringSubs/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=10) "Authoriser",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 123,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 123,
                            Column: (int) 30
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 128,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=10) "Authoriser"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 123,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 123,
                            Column: (int) 30
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 123,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 123,
                        Column: (int) 30
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 123,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 123,
                        Column: (int) 30
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 128,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=11) "annotations",
                  Path: (string) (len=42) "/resources/authoriser/metadata/annotations",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=4) {
                    (*schema.TreeNode)({
                      Label: (string) (len=10) "authoriser",
                      Path: (string) (len=64) "/resources/authoriser/metadata/annotations/authoriser/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "string",
                          Path: (string) (len=71) "/resources/authoriser/metadata/annotations/authoriser/stringSubs/string",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (string) (len=4) "true",
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 128,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 128,
                                Column: (int) 25
                              })
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 132,
                                Column: (int) 37
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 132,
                                Column: (int) 55
                              })
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)((len=4) "true"),
                            SubstitutionValue: (*substitutions.Substitution)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 128,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 128,
                                Column: (int) 25
                              })
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 128,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 128,
                            Column: (int) 25
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 128,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 128,
                            Column: (int) 25
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 132,
                            Column: (int) 37
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 132,
                            Column: (int) 55
                          })
                        })
                      })
                    }),
                    (*schema.TreeNode)({
                      Label: (string) (len=26) "authoriser.identity.header",
                      Path: (string) (len=80) "/resources/authoriser/metadata/annotations/authoriser.identity.header/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "string",
                          Path: (string) (len=87) "/resources/authoriser/metadata/annotations/authoriser.identity.header/stringSubs/string",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (string) (len=18) "MyCustomAuthHeader",
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 132,
                                Column: (int) 37
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 132,
                                Column: (int) 55
                              })
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 133,
                                Column: (int) 51
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 133,
                                Column: (int) 62
                              })
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)((len=18) "MyCustomAuthHeader"),
                            SubstitutionValue: (*substitutions.Substitution)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 132,
                                Column: (int) 37
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 132,
                                Column: (int) 55
                              })
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 132,
                            Column: (int) 37
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 132,
                            Column: (int) 55
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 132,
                            Column: (int) 37
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 132,
                            Column: (int) 55
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 133,
                            Column: (int) 51
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 133,
                            Column: (int) 62
                          })
                        })
                      })
                    }),
                    (*schema.TreeNode)({
                      Label: (string) (len=40) "authoriser.identity.validationExpression",
                      Path: (string) (len=94) "/resources/authoriser/metadata/annotations/authoriser.identity.validationExpression/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "string",
                          Path: (string) (len=101) "/resources/authoriser/metadata/annotations/authoriser.identity.validationExpression/stringSubs/string",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (string) (len=9) "Bearer .*",
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 133,
                                Column: (int) 51
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 133,
                                Column: (int) 62
                              })
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 134,
                                Column: (int) 47
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 134,
                                Column: (int) 49
                              })
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)((len=9) "Bearer .*"),
                            SubstitutionValue: (*substitutions.Substitution)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 133,
                                Column: (int) 51
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 133,
                                Column: (int) 62
                              })
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 133,
                            Column: (int) 51
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 133,
                            Column: (int) 62
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 133,
                            Column: (int) 51
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 133,
                            Column: (int) 62
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 134,
                            Column: (int) 47
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 134,
                            Column: (int) 49
                          })
                        })
                      })
                    }),
                    (*schema.TreeNode)({
                      Label: (string) (len=36) "authoriser.identity.reauthoriseEvery",
                      Path: (string) (len=90) "/resources/authoriser/metadata/annotations/authoriser.identity.reauthoriseEvery/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "string",
                          Path: (string) (len=97) "/resources/authoriser/metadata/annotations/authoriser.identity.reauthoriseEvery/stringSubs/string",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (string) (len=2) "20",
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 134,
                                Column: (int) 47
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 134,
                                Column: (int) 49
                              })
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 136,
                                Column: (int) 9
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)((len=2) "20"),
                            SubstitutionValue: (*substitutions.Substitution)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 134,
                                Column: (int) 47
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 134,
                                Column: (int) 49
                              })
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 134,
                            Column: (int) 47
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 134,
                            Column: (int) 49
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 134,
                            Column: (int) 47
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 134,
                            Column: (int) 49
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 136,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.StringOrSubstitutionsMap)({
                    Values: (map[string]*substitutions.StringOrSubstitutions) (len=4) {
                      (string) (len=10) "authoriser": (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)((len=4) "true"),
                            SubstitutionValue: (*substitutions.Substitution)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 128,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 128,
                                Column: (int) 25
                              })
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 128,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 128,
                            Column: (int) 25
                          })
                        })
                      }),
                      (string) (len=26) "authoriser.identity.header": (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)((len=18) "MyCustomAuthHeader"),
                            SubstitutionValue: (*substitutions.Substitution)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 132,
                                Column: (int) 37
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 132,
                                Column: (int) 55
                              })
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 132,
                            Column: (int) 37
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 132,
                            Column: (int) 55
                          })
                        })
                      }),
                      (string) (len=36) "authoriser.identity.reauthoriseEvery": (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)((len=2) "20"),
                            SubstitutionValue: (*substitutions.Substitution)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 134,
                                Column: (int) 47
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 134,
                                Column: (int) 49
                              })
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 134,
                            Column: (int) 47
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 134,
                            Column: (int) 49
                          })
                        })
                      }),
                      (string) (len=40) "authoriser.identity.validationExpression": (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)((len=9) "Bearer .*"),
                            SubstitutionValue: (*substitutions.Substitution)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 133,
                                Column: (int) 51
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 133,
                                Column: (int) 62
                              })
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 133,
                            Column: (int) 51
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 133,
                            Column: (int) 62
                          })
                        })
                      })
                    },
                    SourceMeta: (map[string]*source.Meta) (len=4) {
                      (string) (len=10) "authoriser": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 128,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=26) "authoriser.identity.header": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 132,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=36) "authoriser.identity.reauthoriseEvery": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 134,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=40) "authoriser.identity.validationExpression": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 133,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 128,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 136,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "labels",
                  Path: (string) (len=37) "/resources/authoriser/metadata/labels",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=44) "/resources/authoriser/metadata/labels/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=8) "orderApi",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 136,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 138,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.StringMap)({
                    Values: (map[string]string) (len=1) {
                      (string) (len=3) "app": (string) (len=8) "orderApi"
                    },
                    SourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=3) "app": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 136,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 136,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 138,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.Metadata)({
                DisplayName: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=10) "Authoriser"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 123,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 123,
                          Column: (int) 30
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 123,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 123,
                      Column: (int) 30
                    })
                  })
                }),
                Annotations: (*schema.StringOrSubstitutionsMap)({
                  Values: (map[string]*substitutions.StringOrSubstitutions) (len=4) {
                    (string) (len=10) "authoriser": (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)((len=4) "true"),
                          SubstitutionValue: (*substitutions.Substitution)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 128,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 128,
                              Column: (int) 25
                            })
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 128,
                          Column: (int) 21
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 128,
                          Column: (int) 25
                        })
                      })
                    }),
                    (string) (len=26) "authoriser.identity.header": (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)((len=18) "MyCustomAuthHeader"),
                          SubstitutionValue: (*substitutions.Substitution)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 132,
                              Column: (int) 37
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 132,
                              Column: (int) 55
                            })
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 132,
                          Column: (int) 37
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 132,
                          Column: (int) 55
                        })
                      })
                    }),
                    (string) (len=36) "authoriser.identity.reauthoriseEvery": (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)((len=2) "20"),
                          SubstitutionValue: (*substitutions.Substitution)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 134,
                              Column: (int) 47
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 134,
                              Column: (int) 49
                            })
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 134,
                          Column: (int) 47
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 134,
                          Column: (int) 49
                        })
                      })
                    }),
                    (string) (len=40) "authoriser.identity.validationExpression": (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)((len=9) "Bearer .*"),
                          SubstitutionValue: (*substitutions.Substitution)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 133,
                              Column: (int) 51
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 133,
                              Column: (int) 62
                            })
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 133,
                          Column: (int) 51
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 133,
                          Column: (int) 62
                        })
                      })
                    })
                  },
                  SourceMeta: (map[string]*source.Meta) (len=4) {
                    (string) (len=10) "authoriser": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 128,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=26) "authoriser.identity.header": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 132,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=36) "authoriser.identity.reauthoriseEvery": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 134,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=40) "authoriser.identity.validationExpression": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 133,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                Labels: (*schema.StringMap)({
                  Values: (map[string]string) (len=1) {
                    (string) (len=3) "app": (string) (len=8) "orderApi"
                  },
                  SourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=3) "app": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 136,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                Custom: (*core.MappingNode)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 123,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 123,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 138,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=4) "spec",
              Path: (string) (len=26) "/resources/authoriser/spec",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=2) {
                (*schema.TreeNode)({
                  Label: (string) (len=7) "handler",
                  Path: (string) (len=34) "/resources/authoriser/spec/handler",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=41) "/resources/authoriser/spec/handler/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=19) "handlers.Authoriser"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 138,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 138,
                            Column: (int) 35
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 138,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 138,
                            Column: (int) 35
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 139,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=19) "handlers.Authoriser"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 138,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 138,
                          Column: (int) 35
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 138,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 138,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 139,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=7) "timeout",
                  Path: (string) (len=34) "/resources/authoriser/spec/timeout",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=41) "/resources/authoriser/spec/timeout/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(120),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 139,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 139,
                            Column: (int) 19
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 139,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 139,
                            Column: (int) 19
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 141,
                            Column: (int) 3
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(120),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 139,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 139,
                          Column: (int) 19
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 139,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 139,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 141,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=2) {
                  (string) (len=7) "handler": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=19) "handlers.Authoriser"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 138,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 138,
                          Column: (int) 35
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 138,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=7) "timeout": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(120),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 139,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 139,
                          Column: (int) 19
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 139,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 138,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                  (string) (len=7) "handler": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 138,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=7) "timeout": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 139,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 138,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 141,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=16) "celerity/handler",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 121,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 121,
                  Column: (int) 29
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=10) "Authoriser"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 123,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 123,
                        Column: (int) 30
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 123,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 123,
                    Column: (int) 30
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)({
                Values: (map[string]*substitutions.StringOrSubstitutions) (len=4) {
                  (string) (len=10) "authoriser": (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=4) "true"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 128,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 128,
                            Column: (int) 25
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 128,
                        Column: (int) 21
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 128,
                        Column: (int) 25
                      })
                    })
                  }),
                  (string) (len=26) "authoriser.identity.header": (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=18) "MyCustomAuthHeader"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 132,
                            Column: (int) 37
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 132,
                            Column: (int) 55
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 132,
                        Column: (int) 37
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 132,
                        Column: (int) 55
                      })
                    })
                  }),
                  (string) (len=36) "authoriser.identity.reauthoriseEvery": (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=2) "20"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 134,
                            Column: (int) 47
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 134,
                            Column: (int) 49
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 134,
                        Column: (int) 47
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 134,
                        Column: (int) 49
                      })
                    })
                  }),
                  (string) (len=40) "authoriser.identity.validationExpression": (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=9) "Bearer .*"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 133,
                            Column: (int) 51
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 133,
                            Column: (int) 62
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 133,
                        Column: (int) 51
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 133,
                        Column: (int) 62
                      })
                    })
                  })
                },
                SourceMeta: (map[string]*source.Meta) (len=4) {
                  (string) (len=10) "authoriser": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 128,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=26) "authoriser.identity.header": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 132,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=36) "authoriser.identity.reauthoriseEvery": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 134,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=40) "authoriser.identity.validationExpression": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 133,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=3) "app": (string) (len=8) "orderApi"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 136,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 123,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=2) {
                (string) (len=7) "handler": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=19) "handlers.Authoriser"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 138,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 138,
                        Column: (int) 35
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 138,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=7) "timeout": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(120),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 139,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 139,
                        Column: (int) 19
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 139,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 138,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                (string) (len=7) "handler": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 138,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "timeout": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 139,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 121,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 120,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 141,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=16) "getOrdersHandler",
          Path: (string) (len=27) "/resources/getOrdersHandler",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=3) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=32) "/resources/getOrdersHandler/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.ResourceTypeWrapper)({
                Value: (string) (len=16) "celerity/handler",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 142,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 142,
                    Column: (int) 29
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 142,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 142,
                    Column: (int) 29
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 144,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=8) "metadata",
              Path: (string) (len=36) "/resources/getOrdersHandler/metadata",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=2) {
                (*schema.TreeNode)({
                  Label: (string) (len=11) "displayName",
                  Path: (string) (len=59) "/resources/getOrdersHandler/metadata/displayName/stringSubs",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=66) "/resources/getOrdersHandler/metadata/displayName/stringSubs/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=18) "Get Orders Handler",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 144,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 144,
                            Column: (int) 38
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 146,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=18) "Get Orders Handler"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 144,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 144,
                            Column: (int) 38
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 144,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 144,
                        Column: (int) 38
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 144,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 144,
                        Column: (int) 38
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 146,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "labels",
                  Path: (string) (len=43) "/resources/getOrdersHandler/metadata/labels",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=50) "/resources/getOrdersHandler/metadata/labels/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=8) "orderApi",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 146,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 148,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.StringMap)({
                    Values: (map[string]string) (len=1) {
                      (string) (len=3) "app": (string) (len=8) "orderApi"
                    },
                    SourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=3) "app": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 146,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 146,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 148,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.Metadata)({
                DisplayName: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=18) "Get Orders Handler"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 144,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 144,
                          Column: (int) 38
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 144,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 144,
                      Column: (int) 38
                    })
                  })
                }),
                Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
                Labels: (*schema.StringMap)({
                  Values: (map[string]string) (len=1) {
                    (string) (len=3) "app": (string) (len=8) "orderApi"
                  },
                  SourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=3) "app": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 146,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                Custom: (*core.MappingNode)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 144,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 144,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 148,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=4) "spec",
              Path: (string) (len=32) "/resources/getOrdersHandler/spec",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=7) "handler",
                  Path: (string) (len=40) "/resources/getOrdersHandler/spec/handler",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=47) "/resources/getOrdersHandler/spec/handler/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=18) "handlers.GetOrders"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 148,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 148,
                            Column: (int) 34
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 148,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 148,
                            Column: (int) 34
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 149,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=18) "handlers.GetOrders"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 148,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 148,
                          Column: (int) 34
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 148,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 148,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 149,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=7) "timeout",
                  Path: (string) (len=40) "/resources/getOrdersHandler/spec/timeout",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=47) "/resources/getOrdersHandler/spec/timeout/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(120),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 149,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 149,
                            Column: (int) 19
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 149,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 149,
                            Column: (int) 19
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 150,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(120),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 149,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 149,
                          Column: (int) 19
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 149,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 149,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 150,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=8) "endpoint",
                  Path: (string) (len=41) "/resources/getOrdersHandler/spec/endpoint",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=3) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "method",
                      Path: (string) (len=48) "/resources/getOrdersHandler/spec/endpoint/method",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "scalar",
                          Path: (string) (len=55) "/resources/getOrdersHandler/spec/endpoint/method/scalar",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*core.ScalarValue)({
                            IntValue: (*int)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)((len=3) "get"),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 151,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 151,
                                Column: (int) 20
                              })
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 151,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 151,
                                Column: (int) 20
                              })
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 152,
                                Column: (int) 9
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=3) "get"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 151,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 151,
                              Column: (int) 20
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 151,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 151,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 152,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    }),
                    (*schema.TreeNode)({
                      Label: (string) (len=4) "path",
                      Path: (string) (len=46) "/resources/getOrdersHandler/spec/endpoint/path",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "scalar",
                          Path: (string) (len=53) "/resources/getOrdersHandler/spec/endpoint/path/scalar",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*core.ScalarValue)({
                            IntValue: (*int)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)((len=7) "/orders"),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 152,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 152,
                                Column: (int) 22
                              })
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 152,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 152,
                                Column: (int) 22
                              })
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 153,
                                Column: (int) 9
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=7) "/orders"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 152,
                              Column: (int) 15
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 152,
                              Column: (int) 22
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 152,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 152,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 153,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    }),
                    (*schema.TreeNode)({
                      Label: (string) (len=10) "authoriser",
                      Path: (string) (len=52) "/resources/getOrdersHandler/spec/endpoint/authoriser",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=10) "stringSubs",
                          Path: (string) (len=63) "/resources/getOrdersHandler/spec/endpoint/authoriser/stringSubs",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=10) "authoriser",
                              Path: (string) (len=86) "/resources/getOrdersHandler/spec/endpoint/authoriser/stringSubs/resourceRef/authoriser",
                              Type: (schema.TreeNodeType) 1,
                              Children: ([]*schema.TreeNode) <nil>,
                              SchemaElement: (*substitutions.SubstitutionResourceProperty)({
                                ResourceName: (string) (len=10) "authoriser",
                                ResourceEachTemplateIndex: (*int64)(<nil>),
                                Path: ([]*substitutions.SubstitutionPathItem) {
                                },
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 153,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 153,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 156,
                                    Column: (int) 3
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*substitutions.StringOrSubstitutions)({
                            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                              (*substitutions.StringOrSubstitution)({
                                StringValue: (*string)(<nil>),
                                SubstitutionValue: (*substitutions.Substitution)({
                                  Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)({
                                    ResourceName: (string) (len=10) "authoriser",
                                    ResourceEachTemplateIndex: (*int64)(<nil>),
                                    Path: ([]*substitutions.SubstitutionPathItem) {
                                    },
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 153,
                                        Column: (int) 23
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                  StringValue: (*string)(<nil>),
                                  IntValue: (*int64)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 153,
                                      Column: (int) 23
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 153,
                                    Column: (int) 21
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 153,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 153,
                                Column: (int) 34
                              })
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 153,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 153,
                                Column: (int) 34
                              })
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 156,
                                Column: (int) 3
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                          Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                            (*substitutions.StringOrSubstitution)({
                              StringValue: (*string)(<nil>),
                              SubstitutionValue: (*substitutions.Substitution)({
                                Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                ResourceProperty: (*substitutions.SubstitutionResourceProperty)({
                                  ResourceName: (string) (len=10) "authoriser",
                                  ResourceEachTemplateIndex: (*int64)(<nil>),
                                  Path: ([]*substitutions.SubstitutionPathItem) {
                                  },
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 153,
                                      Column: (int) 23
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                Child: (*substitutions.SubstitutionChild)(<nil>),
                                StringValue: (*string)(<nil>),
                                IntValue: (*int64)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 153,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 153,
                                  Column: (int) 21
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 153,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 153,
                              Column: (int) 34
                            })
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 153,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 153,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 156,
                            Column: (int) 3
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=3) {
                      (string) (len=10) "authoriser": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                          Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                            (*substitutions.StringOrSubstitution)({
                              StringValue: (*string)(<nil>),
                              SubstitutionValue: (*substitutions.Substitution)({
                                Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                ResourceProperty: (*substitutions.SubstitutionResourceProperty)({
                                  ResourceName: (string) (len=10) "authoriser",
                                  ResourceEachTemplateIndex: (*int64)(<nil>),
                                  Path: ([]*substitutions.SubstitutionPathItem) {
                                  },
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 153,
                                      Column: (int) 23
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                Child: (*substitutions.SubstitutionChild)(<nil>),
                                StringValue: (*string)(<nil>),
                                IntValue: (*int64)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 153,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 153,
                                  Column: (int) 21
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 153,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 153,
                              Column: (int) 34
                            })
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 153,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=6) "method": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=3) "get"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 151,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 151,
                              Column: (int) 20
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 151,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=4) "path": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=7) "/orders"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 152,
                              Column: (int) 15
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 152,
                              Column: (int) 22
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 152,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 151,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                      (string) (len=10) "authoriser": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 153,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=6) "method": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 151,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=4) "path": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 152,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 150,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 156,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=3) {
                  (string) (len=8) "endpoint": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=3) {
                      (string) (len=10) "authoriser": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                          Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                            (*substitutions.StringOrSubstitution)({
                              StringValue: (*string)(<nil>),
                              SubstitutionValue: (*substitutions.Substitution)({
                                Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                ResourceProperty: (*substitutions.SubstitutionResourceProperty)({
                                  ResourceName: (string) (len=10) "authoriser",
                                  ResourceEachTemplateIndex: (*int64)(<nil>),
                                  Path: ([]*substitutions.SubstitutionPathItem) {
                                  },
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 153,
                                      Column: (int) 23
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                Child: (*substitutions.SubstitutionChild)(<nil>),
                                StringValue: (*string)(<nil>),
                                IntValue: (*int64)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 153,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 153,
                                  Column: (int) 21
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 153,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 153,
                              Column: (int) 34
                            })
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 153,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=6) "method": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=3) "get"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 151,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 151,
                              Column: (int) 20
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 151,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=4) "path": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=7) "/orders"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 152,
                              Column: (int) 15
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 152,
                              Column: (int) 22
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 152,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 151,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                      (string) (len=10) "authoriser": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 153,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=6) "method": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 151,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=4) "path": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 152,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  (string) (len=7) "handler": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=18) "handlers.GetOrders"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 148,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 148,
                          Column: (int) 34
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 148,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=7) "timeout": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(120),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 149,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 149,
                          Column: (int) 19
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 149,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 148,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                  (string) (len=8) "endpoint": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 150,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=7) "handler": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 148,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=7) "timeout": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 149,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 148,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 156,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=16) "celerity/handler",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 142,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 142,
                  Column: (int) 29
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=18) "Get Orders Handler"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 144,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 144,
                        Column: (int) 38
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 144,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 144,
                    Column: (int) 38
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=3) "app": (string) (len=8) "orderApi"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 146,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 144,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=8) "endpoint": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) (len=3) {
                    (string) (len=10) "authoriser": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)({
                                ResourceName: (string) (len=10) "authoriser",
                                ResourceEachTemplateIndex: (*int64)(<nil>),
                                Path: ([]*substitutions.SubstitutionPathItem) {
                                },
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 153,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 153,
                                  Column: (int) 23
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 153,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 153,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 153,
                            Column: (int) 34
                          })
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 153,
                          Column: (int) 21
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    }),
                    (string) (len=6) "method": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=3) "get"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 151,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 151,
                            Column: (int) 20
                          })
                        })
                      }),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 151,
                          Column: (int) 17
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    }),
                    (string) (len=4) "path": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=7) "/orders"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 152,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 152,
                            Column: (int) 22
                          })
                        })
                      }),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 152,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    })
                  },
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 151,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                    (string) (len=10) "authoriser": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 153,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=6) "method": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 151,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=4) "path": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 152,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                (string) (len=7) "handler": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=18) "handlers.GetOrders"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 148,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 148,
                        Column: (int) 34
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 148,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=7) "timeout": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(120),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 149,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 149,
                        Column: (int) 19
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 149,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 148,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=8) "endpoint": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 150,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "handler": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 148,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "timeout": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 149,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 142,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 141,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 156,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=19) "updateOrderFunction",
          Path: (string) (len=30) "/resources/updateOrderFunction",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=3) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=35) "/resources/updateOrderFunction/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.ResourceTypeWrapper)({
                Value: (string) (len=16) "celerity/handler",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 157,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 157,
                    Column: (int) 29
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 157,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 157,
                    Column: (int) 29
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 159,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=8) "metadata",
              Path: (string) (len=39) "/resources/updateOrderFunction/metadata",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=2) {
                (*schema.TreeNode)({
                  Label: (string) (len=11) "displayName",
                  Path: (string) (len=62) "/resources/updateOrderFunction/metadata/displayName/stringSubs",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=69) "/resources/updateOrderFunction/metadata/displayName/stringSubs/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=21) "Update Order Function",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 159,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 159,
                            Column: (int) 41
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 161,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=21) "Update Order Function"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 159,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 159,
                            Column: (int) 41
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 159,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 159,
                        Column: (int) 41
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 159,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 159,
                        Column: (int) 41
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 161,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "labels",
                  Path: (string) (len=46) "/resources/updateOrderFunction/metadata/labels",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=2) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=53) "/resources/updateOrderFunction/metadata/labels/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=11) "orderPubSub",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 161,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 166,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    }),
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=53) "/resources/updateOrderFunction/metadata/labels/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=8) "consumer",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 166,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 168,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.StringMap)({
                    Values: (map[string]string) (len=2) {
                      (string) (len=10) "pubsubType": (string) (len=8) "consumer",
                      (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                    },
                    SourceMeta: (map[string]*source.Meta) (len=2) {
                      (string) (len=10) "pubsubType": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 166,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=8) "workflow": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 161,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 161,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 168,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.Metadata)({
                DisplayName: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=21) "Update Order Function"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 159,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 159,
                          Column: (int) 41
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 159,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 159,
                      Column: (int) 41
                    })
                  })
                }),
                Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
                Labels: (*schema.StringMap)({
                  Values: (map[string]string) (len=2) {
                    (string) (len=10) "pubsubType": (string) (len=8) "consumer",
                    (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                  },
                  SourceMeta: (map[string]*source.Meta) (len=2) {
                    (string) (len=10) "pubsubType": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 166,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=8) "workflow": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 161,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                Custom: (*core.MappingNode)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 159,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 159,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 168,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=4) "spec",
              Path: (string) (len=35) "/resources/updateOrderFunction/spec",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=7) "handler",
                  Path: (string) (len=43) "/resources/updateOrderFunction/spec/handler",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=50) "/resources/updateOrderFunction/spec/handler/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=20) "handlers.UpdateOrder"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 168,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 168,
                            Column: (int) 36
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 168,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 168,
                            Column: (int) 36
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 169,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=20) "handlers.UpdateOrder"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 168,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 168,
                          Column: (int) 36
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 168,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 168,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 169,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=7) "timeout",
                  Path: (string) (len=43) "/resources/updateOrderFunction/spec/timeout",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=50) "/resources/updateOrderFunction/spec/timeout/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(120),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 169,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 169,
                            Column: (int) 19
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 169,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 169,
                            Column: (int) 19
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 170,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(120),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 169,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 169,
                          Column: (int) 19
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 169,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 169,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 170,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "events",
                  Path: (string) (len=42) "/resources/updateOrderFunction/spec/events",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=10) "orderEvent",
                      Path: (string) (len=53) "/resources/updateOrderFunction/spec/events/orderEvent",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=2) {
                        (*schema.TreeNode)({
                          Label: (string) (len=4) "type",
                          Path: (string) (len=58) "/resources/updateOrderFunction/spec/events/orderEvent/type",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=6) "scalar",
                              Path: (string) (len=65) "/resources/updateOrderFunction/spec/events/orderEvent/type/scalar",
                              Type: (schema.TreeNodeType) 1,
                              Children: ([]*schema.TreeNode) <nil>,
                              SchemaElement: (*core.ScalarValue)({
                                IntValue: (*int)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                StringValue: (*string)((len=6) "pubsub"),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 172,
                                    Column: (int) 17
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 172,
                                    Column: (int) 23
                                  })
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 172,
                                    Column: (int) 17
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 172,
                                    Column: (int) 23
                                  })
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 175,
                                    Column: (int) 11
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=6) "pubsub"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 172,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 172,
                                  Column: (int) 23
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 172,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 172,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 175,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        }),
                        (*schema.TreeNode)({
                          Label: (string) (len=9) "batchSize",
                          Path: (string) (len=63) "/resources/updateOrderFunction/spec/events/orderEvent/batchSize",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=6) "scalar",
                              Path: (string) (len=70) "/resources/updateOrderFunction/spec/events/orderEvent/batchSize/scalar",
                              Type: (schema.TreeNodeType) 1,
                              Children: ([]*schema.TreeNode) <nil>,
                              SchemaElement: (*core.ScalarValue)({
                                IntValue: (*int)(10),
                                BoolValue: (*bool)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                StringValue: (*string)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 175,
                                    Column: (int) 22
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 175,
                                    Column: (int) 24
                                  })
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 175,
                                    Column: (int) 22
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 175,
                                    Column: (int) 24
                                  })
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 177,
                                    Column: (int) 3
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(10),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 175,
                                  Column: (int) 22
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 175,
                                  Column: (int) 24
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 175,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 175,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 177,
                                Column: (int) 3
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=2) {
                          (string) (len=9) "batchSize": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(10),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 175,
                                  Column: (int) 22
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 175,
                                  Column: (int) 24
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 175,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=4) "type": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=6) "pubsub"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 172,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 172,
                                  Column: (int) 23
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 172,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 172,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                          (string) (len=9) "batchSize": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 175,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=4) "type": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 172,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 171,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 177,
                            Column: (int) 3
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=1) {
                      (string) (len=10) "orderEvent": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=2) {
                          (string) (len=9) "batchSize": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(10),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 175,
                                  Column: (int) 22
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 175,
                                  Column: (int) 24
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 175,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=4) "type": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=6) "pubsub"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 172,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 172,
                                  Column: (int) 23
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 172,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 172,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                          (string) (len=9) "batchSize": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 175,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=4) "type": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 172,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 171,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=10) "orderEvent": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 171,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 170,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 177,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=3) {
                  (string) (len=6) "events": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=1) {
                      (string) (len=10) "orderEvent": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=2) {
                          (string) (len=9) "batchSize": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(10),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 175,
                                  Column: (int) 22
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 175,
                                  Column: (int) 24
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 175,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=4) "type": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=6) "pubsub"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 172,
                                  Column: (int) 17
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 172,
                                  Column: (int) 23
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 172,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 172,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                          (string) (len=9) "batchSize": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 175,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=4) "type": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 172,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 171,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=10) "orderEvent": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 171,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  (string) (len=7) "handler": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=20) "handlers.UpdateOrder"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 168,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 168,
                          Column: (int) 36
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 168,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=7) "timeout": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(120),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 169,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 169,
                          Column: (int) 19
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 169,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 168,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                  (string) (len=6) "events": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 170,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=7) "handler": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 168,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=7) "timeout": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 169,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 168,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 177,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=16) "celerity/handler",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 157,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 157,
                  Column: (int) 29
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=21) "Update Order Function"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 159,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 159,
                        Column: (int) 41
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 159,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 159,
                    Column: (int) 41
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=2) {
                  (string) (len=10) "pubsubType": (string) (len=8) "consumer",
                  (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                },
                SourceMeta: (map[string]*source.Meta) (len=2) {
                  (string) (len=10) "pubsubType": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 166,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=8) "workflow": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 161,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 159,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=6) "events": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) (len=1) {
                    (string) (len=10) "orderEvent": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) (len=2) {
                        (string) (len=9) "batchSize": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)({
                            IntValue: (*int)(10),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 175,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 175,
                                Column: (int) 24
                              })
                            })
                          }),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 175,
                              Column: (int) 22
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        }),
                        (string) (len=4) "type": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)({
                            IntValue: (*int)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)((len=6) "pubsub"),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 172,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 172,
                                Column: (int) 23
                              })
                            })
                          }),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 172,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        })
                      },
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 172,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                        (string) (len=9) "batchSize": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 175,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        (string) (len=4) "type": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 172,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }
                    })
                  },
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 171,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=10) "orderEvent": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 171,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                (string) (len=7) "handler": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=20) "handlers.UpdateOrder"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 168,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 168,
                        Column: (int) 36
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 168,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=7) "timeout": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(120),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 169,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 169,
                        Column: (int) 19
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 169,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 168,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=6) "events": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 170,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "handler": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 168,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "timeout": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 169,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 157,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 156,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 177,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=19) "sharedPackagesLayer",
          Path: (string) (len=30) "/resources/sharedPackagesLayer",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=3) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=35) "/resources/sharedPackagesLayer/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.ResourceTypeWrapper)({
                Value: (string) (len=21) "celerity/layerVersion",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 184,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 184,
                    Column: (int) 34
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 184,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 184,
                    Column: (int) 34
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 186,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=8) "metadata",
              Path: (string) (len=39) "/resources/sharedPackagesLayer/metadata",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=2) {
                (*schema.TreeNode)({
                  Label: (string) (len=11) "displayName",
                  Path: (string) (len=62) "/resources/sharedPackagesLayer/metadata/displayName/stringSubs",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=69) "/resources/sharedPackagesLayer/metadata/displayName/stringSubs/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=21) "Shared Packages Layer",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 186,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 186,
                            Column: (int) 41
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 188,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=21) "Shared Packages Layer"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 186,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 186,
                            Column: (int) 41
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 186,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 186,
                        Column: (int) 41
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 186,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 186,
                        Column: (int) 41
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 188,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "labels",
                  Path: (string) (len=46) "/resources/sharedPackagesLayer/metadata/labels",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=2) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=53) "/resources/sharedPackagesLayer/metadata/labels/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=11) "orderPubSub",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 188,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 189,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    }),
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=53) "/resources/sharedPackagesLayer/metadata/labels/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=8) "orderApi",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 189,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 191,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.StringMap)({
                    Values: (map[string]string) (len=2) {
                      (string) (len=3) "app": (string) (len=8) "orderApi",
                      (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                    },
                    SourceMeta: (map[string]*source.Meta) (len=2) {
                      (string) (len=3) "app": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 189,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=8) "workflow": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 188,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 188,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 191,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.Metadata)({
                DisplayName: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=21) "Shared Packages Layer"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 186,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 186,
                          Column: (int) 41
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 186,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 186,
                      Column: (int) 41
                    })
                  })
                }),
                Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
                Labels: (*schema.StringMap)({
                  Values: (map[string]string) (len=2) {
                    (string) (len=3) "app": (string) (len=8) "orderApi",
                    (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                  },
                  SourceMeta: (map[string]*source.Meta) (len=2) {
                    (string) (len=3) "app": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 189,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=8) "workflow": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 188,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                Custom: (*core.MappingNode)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 186,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 186,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 191,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=4) "spec",
              Path: (string) (len=35) "/resources/sharedPackagesLayer/spec",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=18) "compatibleRuntimes",
                  Path: (string) (len=54) "/resources/sharedPackagesLayer/spec/compatibleRuntimes",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=1) "0",
                      Path: (string) (len=56) "/resources/sharedPackagesLayer/spec/compatibleRuntimes/0",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=6) "scalar",
                          Path: (string) (len=63) "/resources/sharedPackagesLayer/spec/compatibleRuntimes/0/scalar",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*core.ScalarValue)({
                            IntValue: (*int)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)((len=5) "go1.x"),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 191,
                                Column: (int) 28
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 191,
                                Column: (int) 35
                              })
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 191,
                                Column: (int) 28
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 191,
                                Column: (int) 35
                              })
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 194,
                                Column: (int) 7
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=5) "go1.x"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 191,
                              Column: (int) 28
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 191,
                              Column: (int) 35
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 191,
                            Column: (int) 28
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 191,
                            Column: (int) 28
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 194,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) (len=1) {
                      (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=5) "go1.x"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 191,
                              Column: (int) 28
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 191,
                              Column: (int) 35
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 191,
                            Column: (int) 28
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      })
                    },
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 191,
                        Column: (int) 27
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 191,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 194,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=7) "content",
                  Path: (string) (len=43) "/resources/sharedPackagesLayer/spec/content",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=50) "/resources/sharedPackagesLayer/spec/content/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=27) "build/shared-packages-layer"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 194,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 194,
                            Column: (int) 43
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 194,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 194,
                            Column: (int) 43
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 195,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=27) "build/shared-packages-layer"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 194,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 194,
                          Column: (int) 43
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 194,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 194,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 195,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=9) "layerName",
                  Path: (string) (len=45) "/resources/sharedPackagesLayer/spec/layerName",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=52) "/resources/sharedPackagesLayer/spec/layerName/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=19) "sharedPackagesLayer"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 195,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 195,
                            Column: (int) 37
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 195,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 195,
                            Column: (int) 37
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 197,
                            Column: (int) 3
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=19) "sharedPackagesLayer"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 195,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 195,
                          Column: (int) 37
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 195,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 195,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 197,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=3) {
                  (string) (len=18) "compatibleRuntimes": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) (len=1) {
                      (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=5) "go1.x"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 191,
                              Column: (int) 28
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 191,
                              Column: (int) 35
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 191,
                            Column: (int) 28
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      })
                    },
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 191,
                        Column: (int) 27
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=7) "content": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=27) "build/shared-packages-layer"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 194,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 194,
                          Column: (int) 43
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 194,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=9) "layerName": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=19) "sharedPackagesLayer"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 195,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 195,
                          Column: (int) 37
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 195,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 191,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                  (string) (len=18) "compatibleRuntimes": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 191,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=7) "content": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 194,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=9) "layerName": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 195,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 191,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 197,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=21) "celerity/layerVersion",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 184,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 184,
                  Column: (int) 34
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=21) "Shared Packages Layer"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 186,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 186,
                        Column: (int) 41
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 186,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 186,
                    Column: (int) 41
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=2) {
                  (string) (len=3) "app": (string) (len=8) "orderApi",
                  (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                },
                SourceMeta: (map[string]*source.Meta) (len=2) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 189,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=8) "workflow": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 188,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 186,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=18) "compatibleRuntimes": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) (len=1) {
                    (*core.MappingNode)({
                      Literal: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=5) "go1.x"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 191,
                            Column: (int) 28
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 191,
                            Column: (int) 35
                          })
                        })
                      }),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 191,
                          Column: (int) 28
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    })
                  },
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 191,
                      Column: (int) 27
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=7) "content": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=27) "build/shared-packages-layer"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 194,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 194,
                        Column: (int) 43
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 194,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=9) "layerName": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=19) "sharedPackagesLayer"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 195,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 195,
                        Column: (int) 37
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 195,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 191,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=18) "compatibleRuntimes": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 191,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "content": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 194,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=9) "layerName": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 195,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 184,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 177,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 197,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=11) "orderPubSub",
          Path: (string) (len=22) "/resources/orderPubSub",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=4) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=27) "/resources/orderPubSub/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.ResourceTypeWrapper)({
                Value: (string) (len=15) "celerity/pubsub",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 201,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 201,
                    Column: (int) 28
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 201,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 201,
                    Column: (int) 28
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 203,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=8) "metadata",
              Path: (string) (len=31) "/resources/orderPubSub/metadata",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=2) {
                (*schema.TreeNode)({
                  Label: (string) (len=11) "displayName",
                  Path: (string) (len=54) "/resources/orderPubSub/metadata/displayName/stringSubs",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=61) "/resources/orderPubSub/metadata/displayName/stringSubs/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=13) "Order Pub/Sub",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 203,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 203,
                            Column: (int) 33
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 205,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=13) "Order Pub/Sub"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 203,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 203,
                            Column: (int) 33
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 203,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 203,
                        Column: (int) 33
                      })
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 203,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 203,
                        Column: (int) 33
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 205,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=6) "labels",
                  Path: (string) (len=38) "/resources/orderPubSub/metadata/labels",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=45) "/resources/orderPubSub/metadata/labels/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=11) "orderPubSub",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 205,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 207,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.StringMap)({
                    Values: (map[string]string) (len=1) {
                      (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                    },
                    SourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=8) "workflow": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 205,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 205,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 207,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.Metadata)({
                DisplayName: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=13) "Order Pub/Sub"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 203,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 203,
                          Column: (int) 33
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 203,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 203,
                      Column: (int) 33
                    })
                  })
                }),
                Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
                Labels: (*schema.StringMap)({
                  Values: (map[string]string) (len=1) {
                    (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                  },
                  SourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=8) "workflow": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 205,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                Custom: (*core.MappingNode)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 203,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 203,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 207,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=12) "linkSelector",
              Path: (string) (len=35) "/resources/orderPubSub/linkSelector",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=7) "byLabel",
                  Path: (string) (len=43) "/resources/orderPubSub/linkSelector/byLabel",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "string",
                      Path: (string) (len=50) "/resources/orderPubSub/linkSelector/byLabel/string",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (string) (len=11) "orderPubSub",
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 208,
                            Column: (int) 9
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 210,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*schema.StringMap)({
                    Values: (map[string]string) (len=1) {
                      (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                    },
                    SourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=8) "workflow": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 208,
                          Column: (int) 9
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 208,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 210,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*schema.LinkSelector)({
                ByLabel: (*schema.StringMap)({
                  Values: (map[string]string) (len=1) {
                    (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                  },
                  SourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=8) "workflow": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 208,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 207,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 207,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 210,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=4) "spec",
              Path: (string) (len=27) "/resources/orderPubSub/spec",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=9) "topicName",
                  Path: (string) (len=37) "/resources/orderPubSub/spec/topicName",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=10) "stringSubs",
                      Path: (string) (len=48) "/resources/orderPubSub/spec/topicName/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=15) "ordersTopicName",
                          Path: (string) (len=71) "/resources/orderPubSub/spec/topicName/stringSubs/varRef/ordersTopicName",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=15) "ordersTopicName",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 210,
                                Column: (int) 20
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 210,
                                Column: (int) 20
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 212,
                                Column: (int) 3
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)({
                                VariableName: (string) (len=15) "ordersTopicName",
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 210,
                                    Column: (int) 20
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 210,
                                  Column: (int) 20
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 210,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 210,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 210,
                            Column: (int) 46
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 210,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 210,
                            Column: (int) 46
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 212,
                            Column: (int) 3
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=15) "ordersTopicName",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 210,
                                  Column: (int) 20
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 210,
                                Column: (int) 20
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 210,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 210,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 210,
                          Column: (int) 46
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 210,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 210,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 212,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=1) {
                  (string) (len=9) "topicName": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)({
                              VariableName: (string) (len=15) "ordersTopicName",
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 210,
                                  Column: (int) 20
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 210,
                                Column: (int) 20
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 210,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 210,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 210,
                          Column: (int) 46
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 210,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 210,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=9) "topicName": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 210,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 210,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 212,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=15) "celerity/pubsub",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 201,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 201,
                  Column: (int) 28
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=13) "Order Pub/Sub"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 203,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 203,
                        Column: (int) 33
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 203,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 203,
                    Column: (int) 33
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=8) "workflow": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 205,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 203,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)({
              ByLabel: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=8) "workflow": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 208,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 207,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=1) {
                (string) (len=9) "topicName": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=15) "ordersTopicName",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 210,
                                Column: (int) 20
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 210,
                              Column: (int) 20
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 210,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 210,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 210,
                        Column: (int) 46
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 210,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 210,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=9) "topicName": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 210,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 201,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 197,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 212,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        }),
        (*schema.TreeNode)({
          Label: (string) (len=9) "s3Buckets",
          Path: (string) (len=20) "/resources/s3Buckets",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=3) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=25) "/resources/s3Buckets/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.ResourceTypeWrapper)({
                Value: (string) (len=13) "aws/s3/bucket",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 213,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 213,
                    Column: (int) 24
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 213,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 213,
                    Column: (int) 24
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 214,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 214,
                    Column: (int) 36
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=4) "each",
              Path: (string) (len=36) "/resources/s3Buckets/each/stringSubs",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=15) "bucketsToCreate",
                  Path: (string) (len=59) "/resources/s3Buckets/each/stringSubs/valRef/bucketsToCreate",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (*substitutions.SubstitutionValueReference)({
                    ValueName: (string) (len=15) "bucketsToCreate",
                    Path: ([]*substitutions.SubstitutionPathItem) {
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 214,
                        Column: (int) 13
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 214,
                        Column: (int) 13
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 216,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)(<nil>),
                    SubstitutionValue: (*substitutions.Substitution)({
                      Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                      Variable: (*substitutions.SubstitutionVariable)(<nil>),
                      ValueReference: (*substitutions.SubstitutionValueReference)({
                        ValueName: (string) (len=15) "bucketsToCreate",
                        Path: ([]*substitutions.SubstitutionPathItem) {
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 214,
                            Column: (int) 13
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                      Child: (*substitutions.SubstitutionChild)(<nil>),
                      StringValue: (*string)(<nil>),
                      IntValue: (*int64)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 214,
                          Column: (int) 13
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 214,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 214,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 214,
                    Column: (int) 36
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 214,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 214,
                    Column: (int) 36
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 216,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=4) "spec",
              Path: (string) (len=25) "/resources/s3Buckets/spec",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=3) {
                (*schema.TreeNode)({
                  Label: (string) (len=10) "bucketName",
                  Path: (string) (len=36) "/resources/s3Buckets/spec/bucketName",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=10) "stringSubs",
                      Path: (string) (len=47) "/resources/s3Buckets/spec/bucketName/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=7) "elemRef",
                          Path: (string) (len=55) "/resources/s3Buckets/spec/bucketName/stringSubs/elemRef",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*substitutions.SubstitutionElemReference)({
                            Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                              (*substitutions.SubstitutionPathItem)({
                                FieldName: (string) (len=10) "bucketName",
                                PrimitiveArrIndex: (*int64)(<nil>)
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 216,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 216,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 217,
                                Column: (int) 7
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)({
                                Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                                  (*substitutions.SubstitutionPathItem)({
                                    FieldName: (string) (len=10) "bucketName",
                                    PrimitiveArrIndex: (*int64)(<nil>)
                                  })
                                },
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 216,
                                    Column: (int) 21
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 216,
                                  Column: (int) 21
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 216,
                                Column: (int) 19
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 216,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 216,
                            Column: (int) 37
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 216,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 216,
                            Column: (int) 37
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 217,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)({
                              Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                                (*substitutions.SubstitutionPathItem)({
                                  FieldName: (string) (len=10) "bucketName",
                                  PrimitiveArrIndex: (*int64)(<nil>)
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 216,
                                  Column: (int) 21
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 216,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 216,
                              Column: (int) 19
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 216,
                          Column: (int) 19
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 216,
                          Column: (int) 37
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 216,
                        Column: (int) 19
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 216,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 217,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=17) "objectLockEnabled",
                  Path: (string) (len=43) "/resources/s3Buckets/spec/objectLockEnabled",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=10) "stringSubs",
                      Path: (string) (len=54) "/resources/s3Buckets/spec/objectLockEnabled/stringSubs",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=1) {
                        (*schema.TreeNode)({
                          Label: (string) (len=7) "elemRef",
                          Path: (string) (len=62) "/resources/s3Buckets/spec/objectLockEnabled/stringSubs/elemRef",
                          Type: (schema.TreeNodeType) 1,
                          Children: ([]*schema.TreeNode) <nil>,
                          SchemaElement: (*substitutions.SubstitutionElemReference)({
                            Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                              (*substitutions.SubstitutionPathItem)({
                                FieldName: (string) (len=17) "objectLockEnabled",
                                PrimitiveArrIndex: (*int64)(<nil>)
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 217,
                                Column: (int) 28
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 217,
                                Column: (int) 28
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 218,
                                Column: (int) 7
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)({
                                Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                                  (*substitutions.SubstitutionPathItem)({
                                    FieldName: (string) (len=17) "objectLockEnabled",
                                    PrimitiveArrIndex: (*int64)(<nil>)
                                  })
                                },
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 217,
                                    Column: (int) 28
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 217,
                                  Column: (int) 28
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 217,
                                Column: (int) 26
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 217,
                            Column: (int) 26
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 217,
                            Column: (int) 51
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 217,
                            Column: (int) 26
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 217,
                            Column: (int) 51
                          })
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 218,
                            Column: (int) 7
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)({
                              Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                                (*substitutions.SubstitutionPathItem)({
                                  FieldName: (string) (len=17) "objectLockEnabled",
                                  PrimitiveArrIndex: (*int64)(<nil>)
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 217,
                                  Column: (int) 28
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 217,
                                Column: (int) 28
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 217,
                              Column: (int) 26
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 217,
                          Column: (int) 26
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 217,
                          Column: (int) 51
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 217,
                        Column: (int) 26
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 217,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 218,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                }),
                (*schema.TreeNode)({
                  Label: (string) (len=4) "tags",
                  Path: (string) (len=30) "/resources/s3Buckets/spec/tags",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=1) "0",
                      Path: (string) (len=32) "/resources/s3Buckets/spec/tags/0",
                      Type: (schema.TreeNodeType) 0,
                      Children: ([]*schema.TreeNode) (len=2) {
                        (*schema.TreeNode)({
                          Label: (string) (len=3) "key",
                          Path: (string) (len=36) "/resources/s3Buckets/spec/tags/0/key",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=6) "scalar",
                              Path: (string) (len=43) "/resources/s3Buckets/spec/tags/0/key/scalar",
                              Type: (schema.TreeNodeType) 1,
                              Children: ([]*schema.TreeNode) <nil>,
                              SchemaElement: (*core.ScalarValue)({
                                IntValue: (*int)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                StringValue: (*string)((len=12) "bucketNumber"),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 219,
                                    Column: (int) 16
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 219,
                                    Column: (int) 30
                                  })
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 219,
                                    Column: (int) 16
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 219,
                                    Column: (int) 30
                                  })
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 220,
                                    Column: (int) 11
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=12) "bucketNumber"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 219,
                                  Column: (int) 16
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 219,
                                  Column: (int) 30
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 219,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 219,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 220,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        }),
                        (*schema.TreeNode)({
                          Label: (string) (len=5) "value",
                          Path: (string) (len=38) "/resources/s3Buckets/spec/tags/0/value",
                          Type: (schema.TreeNodeType) 0,
                          Children: ([]*schema.TreeNode) (len=1) {
                            (*schema.TreeNode)({
                              Label: (string) (len=10) "stringSubs",
                              Path: (string) (len=49) "/resources/s3Buckets/spec/tags/0/value/stringSubs",
                              Type: (schema.TreeNodeType) 0,
                              Children: ([]*schema.TreeNode) (len=2) {
                                (*schema.TreeNode)({
                                  Label: (string) (len=6) "string",
                                  Path: (string) (len=56) "/resources/s3Buckets/spec/tags/0/value/stringSubs/string",
                                  Type: (schema.TreeNodeType) 1,
                                  Children: ([]*schema.TreeNode) <nil>,
                                  SchemaElement: (string) (len=7) "bucket-",
                                  Range: (*source.Range)({
                                    Start: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 18
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    End: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                }),
                                (*schema.TreeNode)({
                                  Label: (string) (len=12) "elemIndexRef",
                                  Path: (string) (len=62) "/resources/s3Buckets/spec/tags/0/value/stringSubs/elemIndexRef",
                                  Type: (schema.TreeNodeType) 1,
                                  Children: ([]*schema.TreeNode) <nil>,
                                  SchemaElement: (*substitutions.SubstitutionElemIndexReference)({
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  Range: (*source.Range)({
                                    Start: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    }),
                                    End: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 223,
                                        Column: (int) 3
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                })
                              },
                              SchemaElement: (*substitutions.StringOrSubstitutions)({
                                Values: ([]*substitutions.StringOrSubstitution) (len=2) {
                                  (*substitutions.StringOrSubstitution)({
                                    StringValue: (*string)((len=7) "bucket-"),
                                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 18
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  (*substitutions.StringOrSubstitution)({
                                    StringValue: (*string)(<nil>),
                                    SubstitutionValue: (*substitutions.Substitution)({
                                      Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                      Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                      ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                      ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                      ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)({
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 220,
                                            Column: (int) 27
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      }),
                                      DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                      ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                      Child: (*substitutions.SubstitutionChild)(<nil>),
                                      StringValue: (*string)(<nil>),
                                      IntValue: (*int64)(<nil>),
                                      FloatValue: (*float64)(<nil>),
                                      BoolValue: (*bool)(<nil>),
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 220,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 25
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  })
                                },
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 220,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 220,
                                    Column: (int) 29
                                  })
                                })
                              }),
                              Range: (*source.Range)({
                                Start: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 220,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 220,
                                    Column: (int) 29
                                  })
                                }),
                                End: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 223,
                                    Column: (int) 3
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            })
                          },
                          SchemaElement: (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                              Values: ([]*substitutions.StringOrSubstitution) (len=2) {
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)((len=7) "bucket-"),
                                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 18
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)(<nil>),
                                  SubstitutionValue: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)({
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 220,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 25
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 220,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 220,
                                  Column: (int) 29
                                })
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 220,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          Range: (*source.Range)({
                            Start: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 220,
                                Column: (int) 11
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            End: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 223,
                                Column: (int) 3
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        })
                      },
                      SchemaElement: (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=2) {
                          (string) (len=3) "key": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=12) "bucketNumber"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 219,
                                  Column: (int) 16
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 219,
                                  Column: (int) 30
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 219,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=5) "value": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                              Values: ([]*substitutions.StringOrSubstitution) (len=2) {
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)((len=7) "bucket-"),
                                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 18
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)(<nil>),
                                  SubstitutionValue: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)({
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 220,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 25
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 220,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 220,
                                  Column: (int) 29
                                })
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 220,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 219,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                          (string) (len=3) "key": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 219,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=5) "value": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 220,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 219,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        End: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 223,
                            Column: (int) 3
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) (len=1) {
                      (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=2) {
                          (string) (len=3) "key": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=12) "bucketNumber"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 219,
                                  Column: (int) 16
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 219,
                                  Column: (int) 30
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 219,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=5) "value": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                              Values: ([]*substitutions.StringOrSubstitution) (len=2) {
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)((len=7) "bucket-"),
                                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 18
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)(<nil>),
                                  SubstitutionValue: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)({
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 220,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 25
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 220,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 220,
                                  Column: (int) 29
                                })
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 220,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 219,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                          (string) (len=3) "key": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 219,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=5) "value": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 220,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      })
                    },
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 219,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 218,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 223,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=3) {
                  (string) (len=10) "bucketName": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)({
                              Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                                (*substitutions.SubstitutionPathItem)({
                                  FieldName: (string) (len=10) "bucketName",
                                  PrimitiveArrIndex: (*int64)(<nil>)
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 216,
                                  Column: (int) 21
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 216,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 216,
                              Column: (int) 19
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 216,
                          Column: (int) 19
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 216,
                          Column: (int) 37
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 216,
                        Column: (int) 19
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=17) "objectLockEnabled": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)({
                              Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                                (*substitutions.SubstitutionPathItem)({
                                  FieldName: (string) (len=17) "objectLockEnabled",
                                  PrimitiveArrIndex: (*int64)(<nil>)
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 217,
                                  Column: (int) 28
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 217,
                                Column: (int) 28
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 217,
                              Column: (int) 26
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 217,
                          Column: (int) 26
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 217,
                          Column: (int) 51
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 217,
                        Column: (int) 26
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=4) "tags": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) (len=1) {
                      (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) (len=2) {
                          (string) (len=3) "key": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)({
                              IntValue: (*int)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              StringValue: (*string)((len=12) "bucketNumber"),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 219,
                                  Column: (int) 16
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 219,
                                  Column: (int) 30
                                })
                              })
                            }),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 219,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          }),
                          (string) (len=5) "value": (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) <nil>,
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                              Values: ([]*substitutions.StringOrSubstitution) (len=2) {
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)((len=7) "bucket-"),
                                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 18
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                (*substitutions.StringOrSubstitution)({
                                  StringValue: (*string)(<nil>),
                                  SubstitutionValue: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)({
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 220,
                                          Column: (int) 27
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 25
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 220,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)({
                                  Line: (int) 220,
                                  Column: (int) 29
                                })
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 220,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) <nil>
                          })
                        },
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 219,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                          (string) (len=3) "key": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 219,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          (string) (len=5) "value": (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 220,
                              Column: (int) 11
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }
                      })
                    },
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 219,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 216,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                  (string) (len=10) "bucketName": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 216,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=17) "objectLockEnabled": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 217,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=4) "tags": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 218,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 216,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 223,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=13) "aws/s3/bucket",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 213,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 213,
                  Column: (int) 24
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)(<nil>),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)(<nil>),
                  SubstitutionValue: (*substitutions.Substitution)({
                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                    ValueReference: (*substitutions.SubstitutionValueReference)({
                      ValueName: (string) (len=15) "bucketsToCreate",
                      Path: ([]*substitutions.SubstitutionPathItem) {
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 214,
                          Column: (int) 13
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }),
                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                    Child: (*substitutions.SubstitutionChild)(<nil>),
                    StringValue: (*string)(<nil>),
                    IntValue: (*int64)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 214,
                        Column: (int) 13
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 214,
                      Column: (int) 11
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 214,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 214,
                  Column: (int) 36
                })
              })
            }),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=10) "bucketName": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)({
                            Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                              (*substitutions.SubstitutionPathItem)({
                                FieldName: (string) (len=10) "bucketName",
                                PrimitiveArrIndex: (*int64)(<nil>)
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 216,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 216,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 216,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 216,
                        Column: (int) 19
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 216,
                        Column: (int) 37
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 216,
                      Column: (int) 19
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=17) "objectLockEnabled": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)({
                            Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                              (*substitutions.SubstitutionPathItem)({
                                FieldName: (string) (len=17) "objectLockEnabled",
                                PrimitiveArrIndex: (*int64)(<nil>)
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 217,
                                Column: (int) 28
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 217,
                              Column: (int) 28
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 217,
                            Column: (int) 26
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 217,
                        Column: (int) 26
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 217,
                        Column: (int) 51
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 217,
                      Column: (int) 26
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=4) "tags": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) (len=1) {
                    (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) (len=2) {
                        (string) (len=3) "key": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)({
                            IntValue: (*int)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)((len=12) "bucketNumber"),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 219,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 219,
                                Column: (int) 30
                              })
                            })
                          }),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 219,
                              Column: (int) 16
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        }),
                        (string) (len=5) "value": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)(<nil>),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                            Values: ([]*substitutions.StringOrSubstitution) (len=2) {
                              (*substitutions.StringOrSubstitution)({
                                StringValue: (*string)((len=7) "bucket-"),
                                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 220,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              (*substitutions.StringOrSubstitution)({
                                StringValue: (*string)(<nil>),
                                SubstitutionValue: (*substitutions.Substitution)({
                                  Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)({
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                  StringValue: (*string)(<nil>),
                                  IntValue: (*int64)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 220,
                                    Column: (int) 25
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 220,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 220,
                                Column: (int) 29
                              })
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 220,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        })
                      },
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 219,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                        (string) (len=3) "key": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 219,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        (string) (len=5) "value": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 220,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }
                    })
                  },
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 219,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 216,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=10) "bucketName": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 216,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=17) "objectLockEnabled": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 217,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=4) "tags": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 218,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 213,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 212,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 223,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        })
      },
      SchemaElement: (*schema.ResourceMap)({
        Values: (map[string]*schema.Resource) (len=7) {
          (string) (len=10) "authoriser": (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=16) "celerity/handler",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 121,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 121,
                  Column: (int) 29
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=10) "Authoriser"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 123,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 123,
                        Column: (int) 30
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 123,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 123,
                    Column: (int) 30
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)({
                Values: (map[string]*substitutions.StringOrSubstitutions) (len=4) {
                  (string) (len=10) "authoriser": (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=4) "true"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 128,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 128,
                            Column: (int) 25
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 128,
                        Column: (int) 21
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 128,
                        Column: (int) 25
                      })
                    })
                  }),
                  (string) (len=26) "authoriser.identity.header": (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=18) "MyCustomAuthHeader"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 132,
                            Column: (int) 37
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 132,
                            Column: (int) 55
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 132,
                        Column: (int) 37
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 132,
                        Column: (int) 55
                      })
                    })
                  }),
                  (string) (len=36) "authoriser.identity.reauthoriseEvery": (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=2) "20"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 134,
                            Column: (int) 47
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 134,
                            Column: (int) 49
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 134,
                        Column: (int) 47
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 134,
                        Column: (int) 49
                      })
                    })
                  }),
                  (string) (len=40) "authoriser.identity.validationExpression": (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)((len=9) "Bearer .*"),
                        SubstitutionValue: (*substitutions.Substitution)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 133,
                            Column: (int) 51
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 133,
                            Column: (int) 62
                          })
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 133,
                        Column: (int) 51
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 133,
                        Column: (int) 62
                      })
                    })
                  })
                },
                SourceMeta: (map[string]*source.Meta) (len=4) {
                  (string) (len=10) "authoriser": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 128,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=26) "authoriser.identity.header": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 132,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=36) "authoriser.identity.reauthoriseEvery": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 134,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=40) "authoriser.identity.validationExpression": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 133,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=3) "app": (string) (len=8) "orderApi"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 136,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 123,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=2) {
                (string) (len=7) "handler": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=19) "handlers.Authoriser"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 138,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 138,
                        Column: (int) 35
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 138,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=7) "timeout": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(120),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 139,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 139,
                        Column: (int) 19
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 139,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 138,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                (string) (len=7) "handler": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 138,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "timeout": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 139,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 121,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=16) "getOrdersHandler": (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=16) "celerity/handler",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 142,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 142,
                  Column: (int) 29
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=18) "Get Orders Handler"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 144,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 144,
                        Column: (int) 38
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 144,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 144,
                    Column: (int) 38
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=3) "app": (string) (len=8) "orderApi"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 146,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 144,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=8) "endpoint": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) (len=3) {
                    (string) (len=10) "authoriser": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                        Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                          (*substitutions.StringOrSubstitution)({
                            StringValue: (*string)(<nil>),
                            SubstitutionValue: (*substitutions.Substitution)({
                              Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                              Variable: (*substitutions.SubstitutionVariable)(<nil>),
                              ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                              ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                              ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                              DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                              ResourceProperty: (*substitutions.SubstitutionResourceProperty)({
                                ResourceName: (string) (len=10) "authoriser",
                                ResourceEachTemplateIndex: (*int64)(<nil>),
                                Path: ([]*substitutions.SubstitutionPathItem) {
                                },
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 153,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              Child: (*substitutions.SubstitutionChild)(<nil>),
                              StringValue: (*string)(<nil>),
                              IntValue: (*int64)(<nil>),
                              FloatValue: (*float64)(<nil>),
                              BoolValue: (*bool)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 153,
                                  Column: (int) 23
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 153,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          })
                        },
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 153,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 153,
                            Column: (int) 34
                          })
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 153,
                          Column: (int) 21
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    }),
                    (string) (len=6) "method": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=3) "get"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 151,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 151,
                            Column: (int) 20
                          })
                        })
                      }),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 151,
                          Column: (int) 17
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    }),
                    (string) (len=4) "path": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=7) "/orders"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 152,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 152,
                            Column: (int) 22
                          })
                        })
                      }),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 152,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    })
                  },
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 151,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                    (string) (len=10) "authoriser": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 153,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=6) "method": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 151,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=4) "path": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 152,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                (string) (len=7) "handler": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=18) "handlers.GetOrders"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 148,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 148,
                        Column: (int) 34
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 148,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=7) "timeout": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(120),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 149,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 149,
                        Column: (int) 19
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 149,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 148,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=8) "endpoint": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 150,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "handler": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 148,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "timeout": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 149,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 142,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=8) "orderApi": (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=12) "celerity/api",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 72,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 72,
                  Column: (int) 25
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=28) "The API for the order system"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 73,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 73,
                      Column: (int) 46
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 73,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 73,
                  Column: (int) 46
                })
              })
            }),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=9) "Order API"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 78,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 78,
                        Column: (int) 29
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 78,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 78,
                    Column: (int) 29
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=3) "app": (string) (len=8) "orderApi"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 80,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=1) {
                  (string) (len=6) "visual": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=4) {
                      (string) (len=6) "height": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(50),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 85,
                              Column: (int) 19
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 85,
                              Column: (int) 21
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 85,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=9) "linkPorts": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) (len=1) {
                          (*core.MappingNode)({
                            Literal: (*core.ScalarValue)(<nil>),
                            Fields: (map[string]*core.MappingNode) (len=3) {
                              (string) (len=10) "annotation": (*core.MappingNode)({
                                Literal: (*core.ScalarValue)({
                                  IntValue: (*int)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  StringValue: (*string)((len=10) "Orders API"),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 89,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)({
                                      Line: (int) 89,
                                      Column: (int) 37
                                    })
                                  })
                                }),
                                Fields: (map[string]*core.MappingNode) <nil>,
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 89,
                                    Column: (int) 27
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) <nil>
                              }),
                              (string) (len=9) "connectAt": (*core.MappingNode)({
                                Literal: (*core.ScalarValue)({
                                  IntValue: (*int)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  StringValue: (*string)((len=6) "70 100"),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 88,
                                      Column: (int) 26
                                    },
                                    EndPosition: (*source.Position)({
                                      Line: (int) 88,
                                      Column: (int) 32
                                    })
                                  })
                                }),
                                Fields: (map[string]*core.MappingNode) <nil>,
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 88,
                                    Column: (int) 26
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) <nil>
                              }),
                              (string) (len=6) "linkTo": (*core.MappingNode)({
                                Literal: (*core.ScalarValue)({
                                  IntValue: (*int)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  StringValue: (*string)((len=16) "getOrderEndpoint"),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 87,
                                      Column: (int) 23
                                    },
                                    EndPosition: (*source.Position)({
                                      Line: (int) 87,
                                      Column: (int) 39
                                    })
                                  })
                                }),
                                Fields: (map[string]*core.MappingNode) <nil>,
                                Items: ([]*core.MappingNode) <nil>,
                                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 87,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                }),
                                FieldsSourceMeta: (map[string]*source.Meta) <nil>
                              })
                            },
                            Items: ([]*core.MappingNode) <nil>,
                            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 87,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                              (string) (len=10) "annotation": (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 89,
                                  Column: (int) 15
                                },
                                EndPosition: (*source.Position)(<nil>)
                              }),
                              (string) (len=9) "connectAt": (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 88,
                                  Column: (int) 15
                                },
                                EndPosition: (*source.Position)(<nil>)
                              }),
                              (string) (len=6) "linkTo": (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 87,
                                  Column: (int) 15
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }
                          })
                        },
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 87,
                            Column: (int) 13
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=5) "point": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=6) "20 100"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 83,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 83,
                              Column: (int) 24
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 83,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=5) "width": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(50),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 84,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 84,
                              Column: (int) 20
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 84,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 83,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=4) {
                      (string) (len=6) "height": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 85,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=9) "linkPorts": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 86,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=5) "point": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 83,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=5) "width": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 84,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 82,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=6) "visual": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 82,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 78,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)({
              And: ([]*schema.Condition) (len=1) {
                (*schema.Condition)({
                  And: ([]*schema.Condition) <nil>,
                  Or: ([]*schema.Condition) <nil>,
                  Not: (*schema.Condition)({
                    And: ([]*schema.Condition) <nil>,
                    Or: ([]*schema.Condition) <nil>,
                    Not: (*schema.Condition)(<nil>),
                    StringValue: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)({
                              FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                              Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                                (*substitutions.SubstitutionFunctionArg)({
                                  Name: (string) "",
                                  Value: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)({
                                      FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                      Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                        (*substitutions.SubstitutionFunctionArg)({
                                          Name: (string) "",
                                          Value: (*substitutions.Substitution)({
                                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                              DataSourceName: (string) (len=7) "network",
                                              FieldName: (string) (len=4) "tags",
                                              PrimitiveArrIndex: (*int64)(<nil>),
                                              SourceMeta: (*source.Meta)({
                                                Position: (source.Position) {
                                                  Line: (int) 76,
                                                  Column: (int) 25
                                                },
                                                EndPosition: (*source.Position)(<nil>)
                                              })
                                            }),
                                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                            Child: (*substitutions.SubstitutionChild)(<nil>),
                                            StringValue: (*string)(<nil>),
                                            IntValue: (*int64)(<nil>),
                                            FloatValue: (*float64)(<nil>),
                                            BoolValue: (*bool)(<nil>),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 25
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 25
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        })
                                      },
                                      Path: ([]*substitutions.SubstitutionPathItem) {
                                      },
                                      SourceMeta: (*source.Meta)({
                                        Position: (source.Position) {
                                          Line: (int) 76,
                                          Column: (int) 21
                                        },
                                        EndPosition: (*source.Position)(<nil>)
                                      })
                                    }),
                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(<nil>),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 21
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 21
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                (*substitutions.SubstitutionFunctionArg)({
                                  Name: (string) "",
                                  Value: (*substitutions.Substitution)({
                                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                    ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                    Child: (*substitutions.SubstitutionChild)(<nil>),
                                    StringValue: (*string)(<nil>),
                                    IntValue: (*int64)(10),
                                    FloatValue: (*float64)(<nil>),
                                    BoolValue: (*bool)(<nil>),
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 52
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 52
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                })
                              },
                              Path: ([]*substitutions.SubstitutionPathItem) {
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 76,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 76,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 76,
                              Column: (int) 16
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 76,
                          Column: (int) 16
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 76,
                          Column: (int) 56
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 76,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 76,
                      Column: (int) 11
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                })
              },
              Or: ([]*schema.Condition) <nil>,
              Not: (*schema.Condition)(<nil>),
              StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 75,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)({
              ByLabel: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=3) "app": (string) (len=8) "orderApi"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 92,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 91,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=11) "environment": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) (len=1) {
                    (string) (len=9) "variables": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) (len=1) {
                        (string) (len=14) "DYNAMODB_TABLE": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)(<nil>),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                              (*substitutions.StringOrSubstitution)({
                                StringValue: (*string)(<nil>),
                                SubstitutionValue: (*substitutions.Substitution)({
                                  Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                  Variable: (*substitutions.SubstitutionVariable)({
                                    VariableName: (string) (len=13) "dynamoDBTable",
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 105,
                                        Column: (int) 29
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                  StringValue: (*string)(<nil>),
                                  IntValue: (*int64)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 105,
                                      Column: (int) 29
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 105,
                                    Column: (int) 27
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 105,
                                Column: (int) 27
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 105,
                                Column: (int) 53
                              })
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 105,
                              Column: (int) 27
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        })
                      },
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 105,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                        (string) (len=14) "DYNAMODB_TABLE": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 105,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }
                    })
                  },
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 104,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=9) "variables": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 104,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                (string) (len=7) "runtime": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=5) "go1.x"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 110,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 110,
                        Column: (int) 21
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 110,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=14) "tracingEnabled": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(true),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 113,
                        Column: (int) 23
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 113,
                        Column: (int) 27
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 113,
                      Column: (int) 23
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 103,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=11) "environment": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 103,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "runtime": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 110,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=14) "tracingEnabled": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 113,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 72,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=11) "orderPubSub": (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=15) "celerity/pubsub",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 201,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 201,
                  Column: (int) 28
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=13) "Order Pub/Sub"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 203,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 203,
                        Column: (int) 33
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 203,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 203,
                    Column: (int) 33
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=8) "workflow": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 205,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 203,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)({
              ByLabel: (*schema.StringMap)({
                Values: (map[string]string) (len=1) {
                  (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                },
                SourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=8) "workflow": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 208,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 207,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=1) {
                (string) (len=9) "topicName": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=15) "ordersTopicName",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 210,
                                Column: (int) 20
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 210,
                              Column: (int) 20
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 210,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 210,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 210,
                        Column: (int) 46
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 210,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 210,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=9) "topicName": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 210,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 201,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=9) "s3Buckets": (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=13) "aws/s3/bucket",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 213,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 213,
                  Column: (int) 24
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)(<nil>),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)(<nil>),
                  SubstitutionValue: (*substitutions.Substitution)({
                    Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                    Variable: (*substitutions.SubstitutionVariable)(<nil>),
                    ValueReference: (*substitutions.SubstitutionValueReference)({
                      ValueName: (string) (len=15) "bucketsToCreate",
                      Path: ([]*substitutions.SubstitutionPathItem) {
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 214,
                          Column: (int) 13
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }),
                    ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                    ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                    DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                    ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                    Child: (*substitutions.SubstitutionChild)(<nil>),
                    StringValue: (*string)(<nil>),
                    IntValue: (*int64)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 214,
                        Column: (int) 13
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 214,
                      Column: (int) 11
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 214,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 214,
                  Column: (int) 36
                })
              })
            }),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=10) "bucketName": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)({
                            Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                              (*substitutions.SubstitutionPathItem)({
                                FieldName: (string) (len=10) "bucketName",
                                PrimitiveArrIndex: (*int64)(<nil>)
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 216,
                                Column: (int) 21
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 216,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 216,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 216,
                        Column: (int) 19
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 216,
                        Column: (int) 37
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 216,
                      Column: (int) 19
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=17) "objectLockEnabled": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)({
                            Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                              (*substitutions.SubstitutionPathItem)({
                                FieldName: (string) (len=17) "objectLockEnabled",
                                PrimitiveArrIndex: (*int64)(<nil>)
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 217,
                                Column: (int) 28
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 217,
                              Column: (int) 28
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 217,
                            Column: (int) 26
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 217,
                        Column: (int) 26
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 217,
                        Column: (int) 51
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 217,
                      Column: (int) 26
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=4) "tags": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) (len=1) {
                    (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) (len=2) {
                        (string) (len=3) "key": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)({
                            IntValue: (*int)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)((len=12) "bucketNumber"),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 219,
                                Column: (int) 16
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 219,
                                Column: (int) 30
                              })
                            })
                          }),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 219,
                              Column: (int) 16
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        }),
                        (string) (len=5) "value": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)(<nil>),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                            Values: ([]*substitutions.StringOrSubstitution) (len=2) {
                              (*substitutions.StringOrSubstitution)({
                                StringValue: (*string)((len=7) "bucket-"),
                                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 220,
                                    Column: (int) 18
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              (*substitutions.StringOrSubstitution)({
                                StringValue: (*string)(<nil>),
                                SubstitutionValue: (*substitutions.Substitution)({
                                  Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)({
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 220,
                                        Column: (int) 27
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                  StringValue: (*string)(<nil>),
                                  IntValue: (*int64)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 220,
                                    Column: (int) 25
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 220,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 220,
                                Column: (int) 29
                              })
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 220,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        })
                      },
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 219,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                        (string) (len=3) "key": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 219,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        (string) (len=5) "value": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 220,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }
                    })
                  },
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 219,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 216,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=10) "bucketName": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 216,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=17) "objectLockEnabled": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 217,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=4) "tags": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 218,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 213,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=19) "sharedPackagesLayer": (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=21) "celerity/layerVersion",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 184,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 184,
                  Column: (int) 34
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=21) "Shared Packages Layer"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 186,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 186,
                        Column: (int) 41
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 186,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 186,
                    Column: (int) 41
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=2) {
                  (string) (len=3) "app": (string) (len=8) "orderApi",
                  (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                },
                SourceMeta: (map[string]*source.Meta) (len=2) {
                  (string) (len=3) "app": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 189,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=8) "workflow": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 188,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 186,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=18) "compatibleRuntimes": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) (len=1) {
                    (*core.MappingNode)({
                      Literal: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=5) "go1.x"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 191,
                            Column: (int) 28
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 191,
                            Column: (int) 35
                          })
                        })
                      }),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 191,
                          Column: (int) 28
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    })
                  },
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 191,
                      Column: (int) 27
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=7) "content": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=27) "build/shared-packages-layer"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 194,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 194,
                        Column: (int) 43
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 194,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=9) "layerName": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=19) "sharedPackagesLayer"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 195,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 195,
                        Column: (int) 37
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 195,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 191,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=18) "compatibleRuntimes": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 191,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "content": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 194,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=9) "layerName": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 195,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 184,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          (string) (len=19) "updateOrderFunction": (*schema.Resource)({
            Type: (*schema.ResourceTypeWrapper)({
              Value: (string) (len=16) "celerity/handler",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 157,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 157,
                  Column: (int) 29
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)(<nil>),
            Metadata: (*schema.Metadata)({
              DisplayName: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=21) "Update Order Function"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 159,
                        Column: (int) 20
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 159,
                        Column: (int) 41
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 159,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 159,
                    Column: (int) 41
                  })
                })
              }),
              Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
              Labels: (*schema.StringMap)({
                Values: (map[string]string) (len=2) {
                  (string) (len=10) "pubsubType": (string) (len=8) "consumer",
                  (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
                },
                SourceMeta: (map[string]*source.Meta) (len=2) {
                  (string) (len=10) "pubsubType": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 166,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=8) "workflow": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 161,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Custom: (*core.MappingNode)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 159,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            Condition: (*schema.Condition)(<nil>),
            Each: (*substitutions.StringOrSubstitutions)(<nil>),
            LinkSelector: (*schema.LinkSelector)(<nil>),
            Spec: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=3) {
                (string) (len=6) "events": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) (len=1) {
                    (string) (len=10) "orderEvent": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) (len=2) {
                        (string) (len=9) "batchSize": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)({
                            IntValue: (*int)(10),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 175,
                                Column: (int) 22
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 175,
                                Column: (int) 24
                              })
                            })
                          }),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 175,
                              Column: (int) 22
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        }),
                        (string) (len=4) "type": (*core.MappingNode)({
                          Literal: (*core.ScalarValue)({
                            IntValue: (*int)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            StringValue: (*string)((len=6) "pubsub"),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 172,
                                Column: (int) 17
                              },
                              EndPosition: (*source.Position)({
                                Line: (int) 172,
                                Column: (int) 23
                              })
                            })
                          }),
                          Fields: (map[string]*core.MappingNode) <nil>,
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 172,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) <nil>
                        })
                      },
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 172,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                        (string) (len=9) "batchSize": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 175,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        (string) (len=4) "type": (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 172,
                            Column: (int) 11
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }
                    })
                  },
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 171,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                    (string) (len=10) "orderEvent": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 171,
                        Column: (int) 9
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                }),
                (string) (len=7) "handler": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=20) "handlers.UpdateOrder"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 168,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 168,
                        Column: (int) 36
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 168,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                }),
                (string) (len=7) "timeout": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(120),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 169,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 169,
                        Column: (int) 19
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 169,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 168,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                (string) (len=6) "events": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 170,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "handler": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 168,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=7) "timeout": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 169,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 157,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        },
        SourceMeta: (map[string]*source.Meta) (len=7) {
          (string) (len=10) "authoriser": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 120,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=16) "getOrdersHandler": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 141,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=8) "orderApi": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 69,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=11) "orderPubSub": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 197,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=9) "s3Buckets": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 212,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=19) "sharedPackagesLayer": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 177,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          (string) (len=19) "updateOrderFunction": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 156,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }
      }),
      Range: (*source.Range)({
        Start: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 69,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        End: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 223,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      })
    }),
    (*schema.TreeNode)({
      Label: (string) (len=7) "exports",
      Path: (string) (len=8) "/exports",
      Type: (schema.TreeNodeType) 0,
      Children: ([]*schema.TreeNode) (len=1) {
        (*schema.TreeNode)({
          Label: (string) (len=13) "orderPubSubID",
          Path: (string) (len=22) "/exports/orderPubSubID",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=3) {
            (*schema.TreeNode)({
              Label: (string) (len=4) "type",
              Path: (string) (len=27) "/exports/orderPubSubID/type",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*schema.ExportTypeWrapper)({
                Value: (schema.ExportType) (len=6) "string",
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 224,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 224,
                    Column: (int) 17
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 224,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 224,
                    Column: (int) 17
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 225,
                    Column: (int) 12
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 225,
                    Column: (int) 32
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=5) "field",
              Path: (string) (len=28) "/exports/orderPubSubID/field",
              Type: (schema.TreeNodeType) 1,
              Children: ([]*schema.TreeNode) <nil>,
              SchemaElement: (*core.ScalarValue)({
                IntValue: (*int)(<nil>),
                BoolValue: (*bool)(<nil>),
                FloatValue: (*float64)(<nil>),
                StringValue: (*string)((len=20) "orderPubSub.state.id"),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 225,
                    Column: (int) 12
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 225,
                    Column: (int) 32
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 225,
                    Column: (int) 12
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 225,
                    Column: (int) 32
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 226,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 226,
                    Column: (int) 54
                  })
                })
              })
            }),
            (*schema.TreeNode)({
              Label: (string) (len=11) "description",
              Path: (string) (len=45) "/exports/orderPubSubID/description/stringSubs",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=6) "string",
                  Path: (string) (len=52) "/exports/orderPubSubID/description/stringSubs/string",
                  Type: (schema.TreeNodeType) 1,
                  Children: ([]*schema.TreeNode) <nil>,
                  SchemaElement: (string) (len=36) "The ID of the Order Pub/Sub resource",
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 226,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 226,
                        Column: (int) 54
                      })
                    }),
                    End: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 229,
                        Column: (int) 3
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  })
                })
              },
              SchemaElement: (*substitutions.StringOrSubstitutions)({
                Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                  (*substitutions.StringOrSubstitution)({
                    StringValue: (*string)((len=36) "The ID of the Order Pub/Sub resource"),
                    SubstitutionValue: (*substitutions.Substitution)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 226,
                        Column: (int) 18
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 226,
                        Column: (int) 54
                      })
                    })
                  })
                },
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 226,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 226,
                    Column: (int) 54
                  })
                })
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 226,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 226,
                    Column: (int) 54
                  })
                }),
                End: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 229,
                    Column: (int) 3
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            })
          },
          SchemaElement: (*schema.Export)({
            Type: (*schema.ExportTypeWrapper)({
              Value: (schema.ExportType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 224,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 224,
                  Column: (int) 17
                })
              })
            }),
            Field: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=20) "orderPubSub.state.id"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 225,
                  Column: (int) 12
                },
                EndPosition: (*source.Position)({
                  Line: (int) 225,
                  Column: (int) 32
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=36) "The ID of the Order Pub/Sub resource"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 226,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 226,
                      Column: (int) 54
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 226,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 226,
                  Column: (int) 54
                })
              })
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 224,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 223,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 229,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        })
      },
      SchemaElement: (*schema.ExportMap)({
        Values: (map[string]*schema.Export) (len=1) {
          (string) (len=13) "orderPubSubID": (*schema.Export)({
            Type: (*schema.ExportTypeWrapper)({
              Value: (schema.ExportType) (len=6) "string",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 224,
                  Column: (int) 11
                },
                EndPosition: (*source.Position)({
                  Line: (int) 224,
                  Column: (int) 17
                })
              })
            }),
            Field: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=20) "orderPubSub.state.id"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 225,
                  Column: (int) 12
                },
                EndPosition: (*source.Position)({
                  Line: (int) 225,
                  Column: (int) 32
                })
              })
            }),
            Description: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=36) "The ID of the Order Pub/Sub resource"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 226,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 226,
                      Column: (int) 54
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 226,
                  Column: (int) 18
                },
                EndPosition: (*source.Position)({
                  Line: (int) 226,
                  Column: (int) 54
                })
              })
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 224,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          })
        },
        SourceMeta: (map[string]*source.Meta) (len=1) {
          (string) (len=13) "orderPubSubID": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 223,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }
      }),
      Range: (*source.Range)({
        Start: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 223,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        End: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 229,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      })
    }),
    (*schema.TreeNode)({
      Label: (string) (len=8) "metadata",
      Path: (string) (len=9) "/metadata",
      Type: (schema.TreeNodeType) 0,
      Children: ([]*schema.TreeNode) (len=1) {
        (*schema.TreeNode)({
          Label: (string) (len=11) "buildConfig",
          Path: (string) (len=21) "/metadata/buildConfig",
          Type: (schema.TreeNodeType) 0,
          Children: ([]*schema.TreeNode) (len=1) {
            (*schema.TreeNode)({
              Label: (string) (len=2) "js",
              Path: (string) (len=24) "/metadata/buildConfig/js",
              Type: (schema.TreeNodeType) 0,
              Children: ([]*schema.TreeNode) (len=1) {
                (*schema.TreeNode)({
                  Label: (string) (len=6) "engine",
                  Path: (string) (len=31) "/metadata/buildConfig/js/engine",
                  Type: (schema.TreeNodeType) 0,
                  Children: ([]*schema.TreeNode) (len=1) {
                    (*schema.TreeNode)({
                      Label: (string) (len=6) "scalar",
                      Path: (string) (len=38) "/metadata/buildConfig/js/engine/scalar",
                      Type: (schema.TreeNodeType) 1,
                      Children: ([]*schema.TreeNode) <nil>,
                      SchemaElement: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=7) "esbuild"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 231,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 231,
                            Column: (int) 22
                          })
                        })
                      }),
                      Range: (*source.Range)({
                        Start: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 231,
                            Column: (int) 15
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 231,
                            Column: (int) 22
                          })
                        }),
                        End: (*source.Meta)(<nil>)
                      })
                    })
                  },
                  SchemaElement: (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=7) "esbuild"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 231,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 231,
                          Column: (int) 22
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 231,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  Range: (*source.Range)({
                    Start: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 231,
                        Column: (int) 7
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    End: (*source.Meta)(<nil>)
                  })
                })
              },
              SchemaElement: (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=1) {
                  (string) (len=6) "engine": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=7) "esbuild"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 231,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 231,
                          Column: (int) 22
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 231,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 231,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=6) "engine": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 231,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              Range: (*source.Range)({
                Start: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 230,
                    Column: (int) 5
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                End: (*source.Meta)(<nil>)
              })
            })
          },
          SchemaElement: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=1) {
              (string) (len=2) "js": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=1) {
                  (string) (len=6) "engine": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=7) "esbuild"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 231,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 231,
                          Column: (int) 22
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 231,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 231,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=6) "engine": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 231,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 230,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
              (string) (len=2) "js": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 230,
                  Column: (int) 5
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          Range: (*source.Range)({
            Start: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 229,
                Column: (int) 3
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            End: (*source.Meta)(<nil>)
          })
        })
      },
      SchemaElement: (*core.MappingNode)({
        Literal: (*core.ScalarValue)(<nil>),
        Fields: (map[string]*core.MappingNode) (len=1) {
          (string) (len=11) "buildConfig": (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=1) {
              (string) (len=2) "js": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=1) {
                  (string) (len=6) "engine": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=7) "esbuild"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 231,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 231,
                          Column: (int) 22
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 231,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 231,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=6) "engine": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 231,
                      Column: (int) 7
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 230,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
              (string) (len=2) "js": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 230,
                  Column: (int) 5
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          })
        },
        Items: ([]*core.MappingNode) <nil>,
        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
        SourceMeta: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 229,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
          (string) (len=11) "buildConfig": (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 229,
              Column: (int) 3
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }
      }),
      Range: (*source.Range)({
        Start: (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 229,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        End: (*source.Meta)(<nil>)
      })
    })
  },
  SchemaElement: (*schema.Blueprint)({
    Version: (*core.ScalarValue)({
      IntValue: (*int)(<nil>),
      BoolValue: (*bool)(<nil>),
      FloatValue: (*float64)(<nil>),
      StringValue: (*string)((len=10) "2021-12-18"),
      SourceMeta: (*source.Meta)({
        Position: (source.Position) {
          Line: (int) 1,
          Column: (int) 10
        },
        EndPosition: (*source.Position)({
          Line: (int) 1,
          Column: (int) 20
        })
      })
    }),
    Transform: (*schema.TransformValueWrapper)({
      Values: ([]string) (len=1) {
        (string) (len=19) "celerity-2022-01-22"
      },
      SourceMeta: ([]*source.Meta) (len=1) {
        (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 3,
            Column: (int) 5
          },
          EndPosition: (*source.Position)({
            Line: (int) 3,
            Column: (int) 24
          })
        })
      }
    }),
    Variables: (*schema.VariableMap)({
      Values: (map[string]*schema.Variable) (len=5) {
        (string) (len=13) "dynamoDBTable": (*schema.Variable)({
          Type: (*schema.VariableTypeWrapper)({
            Value: (schema.VariableType) (len=6) "string",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 6,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 6,
                Column: (int) 17
              })
            })
          }),
          Description: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=25) "The Orders DynamoDB Table"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 7,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 7,
                Column: (int) 43
              })
            })
          }),
          Secret: (*core.ScalarValue)(<nil>),
          Default: (*core.ScalarValue)(<nil>),
          AllowedValues: ([]*core.ScalarValue) <nil>,
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 6,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=11) "environment": (*schema.Variable)({
          Type: (*schema.VariableTypeWrapper)({
            Value: (schema.VariableType) (len=6) "string",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 12,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 12,
                Column: (int) 17
              })
            })
          }),
          Description: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=28) "The environment to deploy to"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 13,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 13,
                Column: (int) 46
              })
            })
          }),
          Secret: (*core.ScalarValue)(<nil>),
          Default: (*core.ScalarValue)(<nil>),
          AllowedValues: ([]*core.ScalarValue) <nil>,
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 12,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=12) "instanceType": (*schema.Variable)({
          Type: (*schema.VariableTypeWrapper)({
            Value: (schema.VariableType) (len=20) "aws/ec2/instanceType",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 20,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 20,
                Column: (int) 31
              })
            })
          }),
          Description: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=24) "The instance type to use"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 21,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 21,
                Column: (int) 42
              })
            })
          }),
          Secret: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(false),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 22,
                Column: (int) 13
              },
              EndPosition: (*source.Position)({
                Line: (int) 22,
                Column: (int) 18
              })
            })
          }),
          Default: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=8) "t2.micro"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 23,
                Column: (int) 14
              },
              EndPosition: (*source.Position)({
                Line: (int) 23,
                Column: (int) 22
              })
            })
          }),
          AllowedValues: ([]*core.ScalarValue) (len=4) {
            (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=8) "t2.micro"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 25,
                  Column: (int) 9
                },
                EndPosition: (*source.Position)({
                  Line: (int) 25,
                  Column: (int) 17
                })
              })
            }),
            (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=8) "t2.small"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 26,
                  Column: (int) 9
                },
                EndPosition: (*source.Position)({
                  Line: (int) 26,
                  Column: (int) 17
                })
              })
            }),
            (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=9) "t2.medium"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 27,
                  Column: (int) 9
                },
                EndPosition: (*source.Position)({
                  Line: (int) 27,
                  Column: (int) 18
                })
              })
            }),
            (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=8) "t2.large"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 28,
                  Column: (int) 9
                },
                EndPosition: (*source.Position)({
                  Line: (int) 28,
                  Column: (int) 17
                })
              })
            })
          },
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 20,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=15) "ordersTopicName": (*schema.Variable)({
          Type: (*schema.VariableTypeWrapper)({
            Value: (schema.VariableType) (len=6) "string",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 9,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 9,
                Column: (int) 17
              })
            })
          }),
          Description: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=22) "The Orders Event Topic"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 10,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 10,
                Column: (int) 40
              })
            })
          }),
          Secret: (*core.ScalarValue)(<nil>),
          Default: (*core.ScalarValue)(<nil>),
          AllowedValues: ([]*core.ScalarValue) <nil>,
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 9,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=6) "region": (*schema.Variable)({
          Type: (*schema.VariableTypeWrapper)({
            Value: (schema.VariableType) (len=6) "string",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 15,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 15,
                Column: (int) 17
              })
            })
          }),
          Description: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=23) "The region to deploy to"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 16,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 16,
                Column: (int) 41
              })
            })
          }),
          Secret: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(false),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 17,
                Column: (int) 13
              },
              EndPosition: (*source.Position)({
                Line: (int) 17,
                Column: (int) 18
              })
            })
          }),
          Default: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=9) "us-west-2"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 18,
                Column: (int) 14
              },
              EndPosition: (*source.Position)({
                Line: (int) 18,
                Column: (int) 23
              })
            })
          }),
          AllowedValues: ([]*core.ScalarValue) <nil>,
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 15,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=5) {
        (string) (len=13) "dynamoDBTable": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 5,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=11) "environment": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 11,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=12) "instanceType": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 19,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=15) "ordersTopicName": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 8,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=6) "region": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 14,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Values: (*schema.ValueMap)({
      Values: (map[string]*schema.Value) (len=1) {
        (string) (len=12) "computedInfo": (*schema.Value)({
          Type: (*schema.ValueTypeWrapper)({
            Value: (schema.ValueType) (len=6) "object",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 32,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 32,
                Column: (int) 17
              })
            })
          }),
          Value: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)(<nil>),
                SubstitutionValue: (*substitutions.Substitution)({
                  Function: (*substitutions.SubstitutionFunctionExpr)({
                    FunctionName: (substitutions.SubstitutionFunctionName) (len=6) "object",
                    Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                      (*substitutions.SubstitutionFunctionArg)({
                        Name: (string) (len=8) "ddbTable",
                        Value: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=13) "dynamoDBTable",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 32
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 32
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      (*substitutions.SubstitutionFunctionArg)({
                        Name: (string) (len=9) "topicName",
                        Value: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                          Variable: (*substitutions.SubstitutionVariable)({
                            VariableName: (string) (len=15) "ordersTopicName",
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 33,
                                Column: (int) 69
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 33,
                              Column: (int) 69
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 33,
                            Column: (int) 57
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    Path: ([]*substitutions.SubstitutionPathItem) {
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 33,
                        Column: (int) 14
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                  Child: (*substitutions.SubstitutionChild)(<nil>),
                  StringValue: (*string)(<nil>),
                  IntValue: (*int64)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 33,
                      Column: (int) 14
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 33,
                    Column: (int) 12
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 33,
                Column: (int) 12
              },
              EndPosition: (*source.Position)({
                Line: (int) 33,
                Column: (int) 98
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=16) "A computed value"),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 34,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 34,
                    Column: (int) 34
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 34,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 34,
                Column: (int) 34
              })
            })
          }),
          Secret: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(false),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 35,
                Column: (int) 13
              },
              EndPosition: (*source.Position)({
                Line: (int) 35,
                Column: (int) 18
              })
            })
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 32,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=1) {
        (string) (len=12) "computedInfo": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 31,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Include: (*schema.IncludeMap)({
      Values: (map[string]*schema.Include) (len=1) {
        (string) (len=10) "networking": (*schema.Include)({
          Path: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=24) "networking.blueprint.yml"),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 39,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 39,
                    Column: (int) 35
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 39,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 39,
                Column: (int) 35
              })
            })
          }),
          Variables: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=2) {
              (string) (len=11) "environment": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)({
                          VariableName: (string) (len=11) "environment",
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 42,
                              Column: (int) 22
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 42,
                            Column: (int) 22
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 42,
                          Column: (int) 20
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 42,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 42,
                      Column: (int) 44
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 42,
                    Column: (int) 20
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=6) "region": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)({
                          VariableName: (string) (len=6) "region",
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 43,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 43,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 43,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 43,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 43,
                      Column: (int) 34
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 43,
                    Column: (int) 15
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 42,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
              (string) (len=11) "environment": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 42,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=6) "region": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 43,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          Metadata: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=3) {
              (string) (len=6) "bucket": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=23) "order-system-blueprints"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 46,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 46,
                      Column: (int) 38
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 46,
                    Column: (int) 15
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=6) "region": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)({
                          VariableName: (string) (len=6) "region",
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 47,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 47,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 47,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 47,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 47,
                      Column: (int) 36
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 47,
                    Column: (int) 15
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=10) "sourceType": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=6) "aws/s3"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 45,
                      Column: (int) 19
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 45,
                      Column: (int) 25
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 45,
                    Column: (int) 19
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 45,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
              (string) (len=6) "bucket": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 46,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=6) "region": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 47,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=10) "sourceType": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 45,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=35) "The networking blueprint to include"),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 40,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 40,
                    Column: (int) 53
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 40,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 40,
                Column: (int) 53
              })
            })
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 39,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=1) {
        (string) (len=10) "networking": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 38,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Resources: (*schema.ResourceMap)({
      Values: (map[string]*schema.Resource) (len=7) {
        (string) (len=10) "authoriser": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=16) "celerity/handler",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 121,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 121,
                Column: (int) 29
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)(<nil>),
          Metadata: (*schema.Metadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=10) "Authoriser"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 123,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 123,
                      Column: (int) 30
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 123,
                  Column: (int) 20
                },
                EndPosition: (*source.Position)({
                  Line: (int) 123,
                  Column: (int) 30
                })
              })
            }),
            Annotations: (*schema.StringOrSubstitutionsMap)({
              Values: (map[string]*substitutions.StringOrSubstitutions) (len=4) {
                (string) (len=10) "authoriser": (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=4) "true"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 128,
                          Column: (int) 21
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 128,
                          Column: (int) 25
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 128,
                      Column: (int) 21
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 128,
                      Column: (int) 25
                    })
                  })
                }),
                (string) (len=26) "authoriser.identity.header": (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=18) "MyCustomAuthHeader"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 132,
                          Column: (int) 37
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 132,
                          Column: (int) 55
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 132,
                      Column: (int) 37
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 132,
                      Column: (int) 55
                    })
                  })
                }),
                (string) (len=36) "authoriser.identity.reauthoriseEvery": (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=2) "20"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 134,
                          Column: (int) 47
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 134,
                          Column: (int) 49
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 134,
                      Column: (int) 47
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 134,
                      Column: (int) 49
                    })
                  })
                }),
                (string) (len=40) "authoriser.identity.validationExpression": (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)((len=9) "Bearer .*"),
                      SubstitutionValue: (*substitutions.Substitution)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 133,
                          Column: (int) 51
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 133,
                          Column: (int) 62
                        })
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 133,
                      Column: (int) 51
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 133,
                      Column: (int) 62
                    })
                  })
                })
              },
              SourceMeta: (map[string]*source.Meta) (len=4) {
                (string) (len=10) "authoriser": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 128,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=26) "authoriser.identity.header": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 132,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=36) "authoriser.identity.reauthoriseEvery": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 134,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=40) "authoriser.identity.validationExpression": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 133,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Labels: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=3) "app": (string) (len=8) "orderApi"
              },
              SourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=3) "app": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 136,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 123,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)(<nil>),
          Spec: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=2) {
              (string) (len=7) "handler": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=19) "handlers.Authoriser"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 138,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 138,
                      Column: (int) 35
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 138,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=7) "timeout": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(120),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 139,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 139,
                      Column: (int) 19
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 139,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 138,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
              (string) (len=7) "handler": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 138,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=7) "timeout": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 139,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 121,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=16) "getOrdersHandler": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=16) "celerity/handler",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 142,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 142,
                Column: (int) 29
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)(<nil>),
          Metadata: (*schema.Metadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=18) "Get Orders Handler"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 144,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 144,
                      Column: (int) 38
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 144,
                  Column: (int) 20
                },
                EndPosition: (*source.Position)({
                  Line: (int) 144,
                  Column: (int) 38
                })
              })
            }),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Labels: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=3) "app": (string) (len=8) "orderApi"
              },
              SourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=3) "app": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 146,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 144,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)(<nil>),
          Spec: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=3) {
              (string) (len=8) "endpoint": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=3) {
                  (string) (len=10) "authoriser": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                      Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                        (*substitutions.StringOrSubstitution)({
                          StringValue: (*string)(<nil>),
                          SubstitutionValue: (*substitutions.Substitution)({
                            Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                            Variable: (*substitutions.SubstitutionVariable)(<nil>),
                            ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                            ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                            ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                            DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                            ResourceProperty: (*substitutions.SubstitutionResourceProperty)({
                              ResourceName: (string) (len=10) "authoriser",
                              ResourceEachTemplateIndex: (*int64)(<nil>),
                              Path: ([]*substitutions.SubstitutionPathItem) {
                              },
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 153,
                                  Column: (int) 23
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            Child: (*substitutions.SubstitutionChild)(<nil>),
                            StringValue: (*string)(<nil>),
                            IntValue: (*int64)(<nil>),
                            FloatValue: (*float64)(<nil>),
                            BoolValue: (*bool)(<nil>),
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 153,
                                Column: (int) 23
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 153,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        })
                      },
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 153,
                          Column: (int) 21
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 153,
                          Column: (int) 34
                        })
                      })
                    }),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 153,
                        Column: (int) 21
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=6) "method": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=3) "get"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 151,
                          Column: (int) 17
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 151,
                          Column: (int) 20
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 151,
                        Column: (int) 17
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  }),
                  (string) (len=4) "path": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=7) "/orders"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 152,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 152,
                          Column: (int) 22
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 152,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 151,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                  (string) (len=10) "authoriser": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 153,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=6) "method": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 151,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  (string) (len=4) "path": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 152,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              (string) (len=7) "handler": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=18) "handlers.GetOrders"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 148,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 148,
                      Column: (int) 34
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 148,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=7) "timeout": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(120),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 149,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 149,
                      Column: (int) 19
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 149,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 148,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
              (string) (len=8) "endpoint": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 150,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=7) "handler": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 148,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=7) "timeout": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 149,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 142,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=8) "orderApi": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=12) "celerity/api",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 72,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 72,
                Column: (int) 25
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=28) "The API for the order system"),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 73,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 73,
                    Column: (int) 46
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 73,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 73,
                Column: (int) 46
              })
            })
          }),
          Metadata: (*schema.Metadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=9) "Order API"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 78,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 78,
                      Column: (int) 29
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 78,
                  Column: (int) 20
                },
                EndPosition: (*source.Position)({
                  Line: (int) 78,
                  Column: (int) 29
                })
              })
            }),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Labels: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=3) "app": (string) (len=8) "orderApi"
              },
              SourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=3) "app": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 80,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Custom: (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=1) {
                (string) (len=6) "visual": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)(<nil>),
                  Fields: (map[string]*core.MappingNode) (len=4) {
                    (string) (len=6) "height": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)({
                        IntValue: (*int)(50),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 85,
                            Column: (int) 19
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 85,
                            Column: (int) 21
                          })
                        })
                      }),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 85,
                          Column: (int) 19
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    }),
                    (string) (len=9) "linkPorts": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)(<nil>),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) (len=1) {
                        (*core.MappingNode)({
                          Literal: (*core.ScalarValue)(<nil>),
                          Fields: (map[string]*core.MappingNode) (len=3) {
                            (string) (len=10) "annotation": (*core.MappingNode)({
                              Literal: (*core.ScalarValue)({
                                IntValue: (*int)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                StringValue: (*string)((len=10) "Orders API"),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 89,
                                    Column: (int) 27
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 89,
                                    Column: (int) 37
                                  })
                                })
                              }),
                              Fields: (map[string]*core.MappingNode) <nil>,
                              Items: ([]*core.MappingNode) <nil>,
                              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 89,
                                  Column: (int) 27
                                },
                                EndPosition: (*source.Position)(<nil>)
                              }),
                              FieldsSourceMeta: (map[string]*source.Meta) <nil>
                            }),
                            (string) (len=9) "connectAt": (*core.MappingNode)({
                              Literal: (*core.ScalarValue)({
                                IntValue: (*int)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                StringValue: (*string)((len=6) "70 100"),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 88,
                                    Column: (int) 26
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 88,
                                    Column: (int) 32
                                  })
                                })
                              }),
                              Fields: (map[string]*core.MappingNode) <nil>,
                              Items: ([]*core.MappingNode) <nil>,
                              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 88,
                                  Column: (int) 26
                                },
                                EndPosition: (*source.Position)(<nil>)
                              }),
                              FieldsSourceMeta: (map[string]*source.Meta) <nil>
                            }),
                            (string) (len=6) "linkTo": (*core.MappingNode)({
                              Literal: (*core.ScalarValue)({
                                IntValue: (*int)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                StringValue: (*string)((len=16) "getOrderEndpoint"),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 87,
                                    Column: (int) 23
                                  },
                                  EndPosition: (*source.Position)({
                                    Line: (int) 87,
                                    Column: (int) 39
                                  })
                                })
                              }),
                              Fields: (map[string]*core.MappingNode) <nil>,
                              Items: ([]*core.MappingNode) <nil>,
                              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 87,
                                  Column: (int) 23
                                },
                                EndPosition: (*source.Position)(<nil>)
                              }),
                              FieldsSourceMeta: (map[string]*source.Meta) <nil>
                            })
                          },
                          Items: ([]*core.MappingNode) <nil>,
                          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 87,
                              Column: (int) 15
                            },
                            EndPosition: (*source.Position)(<nil>)
                          }),
                          FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
                            (string) (len=10) "annotation": (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 89,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            (string) (len=9) "connectAt": (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 88,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)(<nil>)
                            }),
                            (string) (len=6) "linkTo": (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 87,
                                Column: (int) 15
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }
                        })
                      },
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 87,
                          Column: (int) 13
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    }),
                    (string) (len=5) "point": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)({
                        IntValue: (*int)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)((len=6) "20 100"),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 83,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 83,
                            Column: (int) 24
                          })
                        })
                      }),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 83,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    }),
                    (string) (len=5) "width": (*core.MappingNode)({
                      Literal: (*core.ScalarValue)({
                        IntValue: (*int)(50),
                        BoolValue: (*bool)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        StringValue: (*string)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 84,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)({
                            Line: (int) 84,
                            Column: (int) 20
                          })
                        })
                      }),
                      Fields: (map[string]*core.MappingNode) <nil>,
                      Items: ([]*core.MappingNode) <nil>,
                      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 84,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      FieldsSourceMeta: (map[string]*source.Meta) <nil>
                    })
                  },
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 83,
                      Column: (int) 11
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) (len=4) {
                    (string) (len=6) "height": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 85,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=9) "linkPorts": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 86,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=5) "point": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 83,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    (string) (len=5) "width": (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 84,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 82,
                  Column: (int) 9
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=6) "visual": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 82,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 78,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Condition: (*schema.Condition)({
            And: ([]*schema.Condition) (len=1) {
              (*schema.Condition)({
                And: ([]*schema.Condition) <nil>,
                Or: ([]*schema.Condition) <nil>,
                Not: (*schema.Condition)({
                  And: ([]*schema.Condition) <nil>,
                  Or: ([]*schema.Condition) <nil>,
                  Not: (*schema.Condition)(<nil>),
                  StringValue: (*substitutions.StringOrSubstitutions)({
                    Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                      (*substitutions.StringOrSubstitution)({
                        StringValue: (*string)(<nil>),
                        SubstitutionValue: (*substitutions.Substitution)({
                          Function: (*substitutions.SubstitutionFunctionExpr)({
                            FunctionName: (substitutions.SubstitutionFunctionName) (len=2) "eq",
                            Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=2) {
                              (*substitutions.SubstitutionFunctionArg)({
                                Name: (string) "",
                                Value: (*substitutions.Substitution)({
                                  Function: (*substitutions.SubstitutionFunctionExpr)({
                                    FunctionName: (substitutions.SubstitutionFunctionName) (len=3) "len",
                                    Arguments: ([]*substitutions.SubstitutionFunctionArg) (len=1) {
                                      (*substitutions.SubstitutionFunctionArg)({
                                        Name: (string) "",
                                        Value: (*substitutions.Substitution)({
                                          Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)({
                                            DataSourceName: (string) (len=7) "network",
                                            FieldName: (string) (len=4) "tags",
                                            PrimitiveArrIndex: (*int64)(<nil>),
                                            SourceMeta: (*source.Meta)({
                                              Position: (source.Position) {
                                                Line: (int) 76,
                                                Column: (int) 25
                                              },
                                              EndPosition: (*source.Position)(<nil>)
                                            })
                                          }),
                                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                          Child: (*substitutions.SubstitutionChild)(<nil>),
                                          StringValue: (*string)(<nil>),
                                          IntValue: (*int64)(<nil>),
                                          FloatValue: (*float64)(<nil>),
                                          BoolValue: (*bool)(<nil>),
                                          SourceMeta: (*source.Meta)({
                                            Position: (source.Position) {
                                              Line: (int) 76,
                                              Column: (int) 25
                                            },
                                            EndPosition: (*source.Position)(<nil>)
                                          })
                                        }),
                                        SourceMeta: (*source.Meta)({
                                          Position: (source.Position) {
                                            Line: (int) 76,
                                            Column: (int) 25
                                          },
                                          EndPosition: (*source.Position)(<nil>)
                                        })
                                      })
                                    },
                                    Path: ([]*substitutions.SubstitutionPathItem) {
                                    },
                                    SourceMeta: (*source.Meta)({
                                      Position: (source.Position) {
                                        Line: (int) 76,
                                        Column: (int) 21
                                      },
                                      EndPosition: (*source.Position)(<nil>)
                                    })
                                  }),
                                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                  StringValue: (*string)(<nil>),
                                  IntValue: (*int64)(<nil>),
                                  FloatValue: (*float64)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 21
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 76,
                                    Column: (int) 21
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              (*substitutions.SubstitutionFunctionArg)({
                                Name: (string) "",
                                Value: (*substitutions.Substitution)({
                                  Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                  ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                  Child: (*substitutions.SubstitutionChild)(<nil>),
                                  StringValue: (*string)(<nil>),
                                  IntValue: (*int64)(10),
                                  FloatValue: (*float64)(<nil>),
                                  BoolValue: (*bool)(<nil>),
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 76,
                                      Column: (int) 52
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 76,
                                    Column: (int) 52
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              })
                            },
                            Path: ([]*substitutions.SubstitutionPathItem) {
                            },
                            SourceMeta: (*source.Meta)({
                              Position: (source.Position) {
                                Line: (int) 76,
                                Column: (int) 18
                              },
                              EndPosition: (*source.Position)(<nil>)
                            })
                          }),
                          Variable: (*substitutions.SubstitutionVariable)(<nil>),
                          ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                          ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                          ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                          DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                          ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                          Child: (*substitutions.SubstitutionChild)(<nil>),
                          StringValue: (*string)(<nil>),
                          IntValue: (*int64)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 76,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 76,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      })
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 76,
                        Column: (int) 16
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 76,
                        Column: (int) 56
                      })
                    })
                  }),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 76,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }),
                StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 76,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            },
            Or: ([]*schema.Condition) <nil>,
            Not: (*schema.Condition)(<nil>),
            StringValue: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 75,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)({
            ByLabel: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=3) "app": (string) (len=8) "orderApi"
              },
              SourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=3) "app": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 92,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 91,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Spec: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=3) {
              (string) (len=11) "environment": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=1) {
                  (string) (len=9) "variables": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=1) {
                      (string) (len=14) "DYNAMODB_TABLE": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                          Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                            (*substitutions.StringOrSubstitution)({
                              StringValue: (*string)(<nil>),
                              SubstitutionValue: (*substitutions.Substitution)({
                                Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                Variable: (*substitutions.SubstitutionVariable)({
                                  VariableName: (string) (len=13) "dynamoDBTable",
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 105,
                                      Column: (int) 29
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                                DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                Child: (*substitutions.SubstitutionChild)(<nil>),
                                StringValue: (*string)(<nil>),
                                IntValue: (*int64)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 105,
                                    Column: (int) 29
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 105,
                                  Column: (int) 27
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 105,
                              Column: (int) 27
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 105,
                              Column: (int) 53
                            })
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 105,
                            Column: (int) 27
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 105,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                      (string) (len=14) "DYNAMODB_TABLE": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 105,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 104,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=9) "variables": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 104,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              (string) (len=7) "runtime": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=5) "go1.x"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 110,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 110,
                      Column: (int) 21
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 110,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=14) "tracingEnabled": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(true),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 113,
                      Column: (int) 23
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 113,
                      Column: (int) 27
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 113,
                    Column: (int) 23
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 103,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
              (string) (len=11) "environment": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 103,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=7) "runtime": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 110,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=14) "tracingEnabled": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 113,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 72,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=11) "orderPubSub": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=15) "celerity/pubsub",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 201,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 201,
                Column: (int) 28
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)(<nil>),
          Metadata: (*schema.Metadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=13) "Order Pub/Sub"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 203,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 203,
                      Column: (int) 33
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 203,
                  Column: (int) 20
                },
                EndPosition: (*source.Position)({
                  Line: (int) 203,
                  Column: (int) 33
                })
              })
            }),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Labels: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
              },
              SourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=8) "workflow": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 205,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 203,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)({
            ByLabel: (*schema.StringMap)({
              Values: (map[string]string) (len=1) {
                (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
              },
              SourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=8) "workflow": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 208,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 207,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Spec: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=1) {
              (string) (len=9) "topicName": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)({
                          VariableName: (string) (len=15) "ordersTopicName",
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 210,
                              Column: (int) 20
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 210,
                            Column: (int) 20
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 210,
                          Column: (int) 18
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 210,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 210,
                      Column: (int) 46
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 210,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 210,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
              (string) (len=9) "topicName": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 210,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 201,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=9) "s3Buckets": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=13) "aws/s3/bucket",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 213,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 213,
                Column: (int) 24
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)(<nil>),
          Metadata: (*schema.Metadata)(<nil>),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)(<nil>),
                SubstitutionValue: (*substitutions.Substitution)({
                  Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                  Variable: (*substitutions.SubstitutionVariable)(<nil>),
                  ValueReference: (*substitutions.SubstitutionValueReference)({
                    ValueName: (string) (len=15) "bucketsToCreate",
                    Path: ([]*substitutions.SubstitutionPathItem) {
                    },
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 214,
                        Column: (int) 13
                      },
                      EndPosition: (*source.Position)(<nil>)
                    })
                  }),
                  ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                  ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                  DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                  ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                  Child: (*substitutions.SubstitutionChild)(<nil>),
                  StringValue: (*string)(<nil>),
                  IntValue: (*int64)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 214,
                      Column: (int) 13
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 214,
                    Column: (int) 11
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 214,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 214,
                Column: (int) 36
              })
            })
          }),
          LinkSelector: (*schema.LinkSelector)(<nil>),
          Spec: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=3) {
              (string) (len=10) "bucketName": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)({
                          Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                            (*substitutions.SubstitutionPathItem)({
                              FieldName: (string) (len=10) "bucketName",
                              PrimitiveArrIndex: (*int64)(<nil>)
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 216,
                              Column: (int) 21
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 216,
                            Column: (int) 21
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 216,
                          Column: (int) 19
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 216,
                      Column: (int) 19
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 216,
                      Column: (int) 37
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 216,
                    Column: (int) 19
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=17) "objectLockEnabled": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)(<nil>),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)({
                          Path: ([]*substitutions.SubstitutionPathItem) (len=1) {
                            (*substitutions.SubstitutionPathItem)({
                              FieldName: (string) (len=17) "objectLockEnabled",
                              PrimitiveArrIndex: (*int64)(<nil>)
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 217,
                              Column: (int) 28
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 217,
                            Column: (int) 28
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 217,
                          Column: (int) 26
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 217,
                      Column: (int) 26
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 217,
                      Column: (int) 51
                    })
                  })
                }),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 217,
                    Column: (int) 26
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=4) "tags": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) (len=1) {
                  (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=2) {
                      (string) (len=3) "key": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=12) "bucketNumber"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 219,
                              Column: (int) 16
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 219,
                              Column: (int) 30
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 219,
                            Column: (int) 16
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=5) "value": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)(<nil>),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)({
                          Values: ([]*substitutions.StringOrSubstitution) (len=2) {
                            (*substitutions.StringOrSubstitution)({
                              StringValue: (*string)((len=7) "bucket-"),
                              SubstitutionValue: (*substitutions.Substitution)(<nil>),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 220,
                                  Column: (int) 18
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            }),
                            (*substitutions.StringOrSubstitution)({
                              StringValue: (*string)(<nil>),
                              SubstitutionValue: (*substitutions.Substitution)({
                                Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                                Variable: (*substitutions.SubstitutionVariable)(<nil>),
                                ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                                ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                                ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)({
                                  SourceMeta: (*source.Meta)({
                                    Position: (source.Position) {
                                      Line: (int) 220,
                                      Column: (int) 27
                                    },
                                    EndPosition: (*source.Position)(<nil>)
                                  })
                                }),
                                DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                                ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                                Child: (*substitutions.SubstitutionChild)(<nil>),
                                StringValue: (*string)(<nil>),
                                IntValue: (*int64)(<nil>),
                                FloatValue: (*float64)(<nil>),
                                BoolValue: (*bool)(<nil>),
                                SourceMeta: (*source.Meta)({
                                  Position: (source.Position) {
                                    Line: (int) 220,
                                    Column: (int) 27
                                  },
                                  EndPosition: (*source.Position)(<nil>)
                                })
                              }),
                              SourceMeta: (*source.Meta)({
                                Position: (source.Position) {
                                  Line: (int) 220,
                                  Column: (int) 25
                                },
                                EndPosition: (*source.Position)(<nil>)
                              })
                            })
                          },
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 220,
                              Column: (int) 18
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 220,
                              Column: (int) 29
                            })
                          })
                        }),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 220,
                            Column: (int) 18
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 219,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                      (string) (len=3) "key": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 219,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=5) "value": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 220,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  })
                },
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 219,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 216,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
              (string) (len=10) "bucketName": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 216,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=17) "objectLockEnabled": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 217,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=4) "tags": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 218,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 213,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=19) "sharedPackagesLayer": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=21) "celerity/layerVersion",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 184,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 184,
                Column: (int) 34
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)(<nil>),
          Metadata: (*schema.Metadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=21) "Shared Packages Layer"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 186,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 186,
                      Column: (int) 41
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 186,
                  Column: (int) 20
                },
                EndPosition: (*source.Position)({
                  Line: (int) 186,
                  Column: (int) 41
                })
              })
            }),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Labels: (*schema.StringMap)({
              Values: (map[string]string) (len=2) {
                (string) (len=3) "app": (string) (len=8) "orderApi",
                (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
              },
              SourceMeta: (map[string]*source.Meta) (len=2) {
                (string) (len=3) "app": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 189,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=8) "workflow": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 188,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 186,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)(<nil>),
          Spec: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=3) {
              (string) (len=18) "compatibleRuntimes": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) (len=1) {
                  (*core.MappingNode)({
                    Literal: (*core.ScalarValue)({
                      IntValue: (*int)(<nil>),
                      BoolValue: (*bool)(<nil>),
                      FloatValue: (*float64)(<nil>),
                      StringValue: (*string)((len=5) "go1.x"),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 191,
                          Column: (int) 28
                        },
                        EndPosition: (*source.Position)({
                          Line: (int) 191,
                          Column: (int) 35
                        })
                      })
                    }),
                    Fields: (map[string]*core.MappingNode) <nil>,
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 191,
                        Column: (int) 28
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) <nil>
                  })
                },
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 191,
                    Column: (int) 27
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=7) "content": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=27) "build/shared-packages-layer"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 194,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 194,
                      Column: (int) 43
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 194,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=9) "layerName": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=19) "sharedPackagesLayer"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 195,
                      Column: (int) 18
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 195,
                      Column: (int) 37
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 195,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 191,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
              (string) (len=18) "compatibleRuntimes": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 191,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=7) "content": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 194,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=9) "layerName": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 195,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 184,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        }),
        (string) (len=19) "updateOrderFunction": (*schema.Resource)({
          Type: (*schema.ResourceTypeWrapper)({
            Value: (string) (len=16) "celerity/handler",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 157,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 157,
                Column: (int) 29
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)(<nil>),
          Metadata: (*schema.Metadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=21) "Update Order Function"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 159,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 159,
                      Column: (int) 41
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 159,
                  Column: (int) 20
                },
                EndPosition: (*source.Position)({
                  Line: (int) 159,
                  Column: (int) 41
                })
              })
            }),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Labels: (*schema.StringMap)({
              Values: (map[string]string) (len=2) {
                (string) (len=10) "pubsubType": (string) (len=8) "consumer",
                (string) (len=8) "workflow": (string) (len=11) "orderPubSub"
              },
              SourceMeta: (map[string]*source.Meta) (len=2) {
                (string) (len=10) "pubsubType": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 166,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                (string) (len=8) "workflow": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 161,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            }),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 159,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Condition: (*schema.Condition)(<nil>),
          Each: (*substitutions.StringOrSubstitutions)(<nil>),
          LinkSelector: (*schema.LinkSelector)(<nil>),
          Spec: (*core.MappingNode)({
            Literal: (*core.ScalarValue)(<nil>),
            Fields: (map[string]*core.MappingNode) (len=3) {
              (string) (len=6) "events": (*core.MappingNode)({
                Literal: (*core.ScalarValue)(<nil>),
                Fields: (map[string]*core.MappingNode) (len=1) {
                  (string) (len=10) "orderEvent": (*core.MappingNode)({
                    Literal: (*core.ScalarValue)(<nil>),
                    Fields: (map[string]*core.MappingNode) (len=2) {
                      (string) (len=9) "batchSize": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(10),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)(<nil>),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 175,
                              Column: (int) 22
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 175,
                              Column: (int) 24
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 175,
                            Column: (int) 22
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      }),
                      (string) (len=4) "type": (*core.MappingNode)({
                        Literal: (*core.ScalarValue)({
                          IntValue: (*int)(<nil>),
                          BoolValue: (*bool)(<nil>),
                          FloatValue: (*float64)(<nil>),
                          StringValue: (*string)((len=6) "pubsub"),
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 172,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)({
                              Line: (int) 172,
                              Column: (int) 23
                            })
                          })
                        }),
                        Fields: (map[string]*core.MappingNode) <nil>,
                        Items: ([]*core.MappingNode) <nil>,
                        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 172,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)(<nil>)
                        }),
                        FieldsSourceMeta: (map[string]*source.Meta) <nil>
                      })
                    },
                    Items: ([]*core.MappingNode) <nil>,
                    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 172,
                        Column: (int) 11
                      },
                      EndPosition: (*source.Position)(<nil>)
                    }),
                    FieldsSourceMeta: (map[string]*source.Meta) (len=2) {
                      (string) (len=9) "batchSize": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 175,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      }),
                      (string) (len=4) "type": (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 172,
                          Column: (int) 11
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    }
                  })
                },
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 171,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                  (string) (len=10) "orderEvent": (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 171,
                      Column: (int) 9
                    },
                    EndPosition: (*source.Position)(<nil>)
                  })
                }
              }),
              (string) (len=7) "handler": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(<nil>),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)((len=20) "handlers.UpdateOrder"),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 168,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 168,
                      Column: (int) 36
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 168,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              }),
              (string) (len=7) "timeout": (*core.MappingNode)({
                Literal: (*core.ScalarValue)({
                  IntValue: (*int)(120),
                  BoolValue: (*bool)(<nil>),
                  FloatValue: (*float64)(<nil>),
                  StringValue: (*string)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 169,
                      Column: (int) 16
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 169,
                      Column: (int) 19
                    })
                  })
                }),
                Fields: (map[string]*core.MappingNode) <nil>,
                Items: ([]*core.MappingNode) <nil>,
                StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 169,
                    Column: (int) 16
                  },
                  EndPosition: (*source.Position)(<nil>)
                }),
                FieldsSourceMeta: (map[string]*source.Meta) <nil>
              })
            },
            Items: ([]*core.MappingNode) <nil>,
            StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 168,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            }),
            FieldsSourceMeta: (map[string]*source.Meta) (len=3) {
              (string) (len=6) "events": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 170,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=7) "handler": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 168,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=7) "timeout": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 169,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 157,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=7) {
        (string) (len=10) "authoriser": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 120,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=16) "getOrdersHandler": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 141,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=8) "orderApi": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 69,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=11) "orderPubSub": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 197,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=9) "s3Buckets": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 212,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=19) "sharedPackagesLayer": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 177,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        }),
        (string) (len=19) "updateOrderFunction": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 156,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    DataSources: (*schema.DataSourceMap)({
      Values: (map[string]*schema.DataSource) (len=1) {
        (string) (len=7) "network": (*schema.DataSource)({
          Type: (*schema.DataSourceTypeWrapper)({
            Value: (string) (len=7) "aws/vpc",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 51,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 51,
                Column: (int) 20
              })
            })
          }),
          DataSourceMetadata: (*schema.DataSourceMetadata)({
            DisplayName: (*substitutions.StringOrSubstitutions)({
              Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                (*substitutions.StringOrSubstitution)({
                  StringValue: (*string)((len=14) "Network source"),
                  SubstitutionValue: (*substitutions.Substitution)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 53,
                      Column: (int) 20
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 53,
                      Column: (int) 34
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 53,
                  Column: (int) 20
                },
                EndPosition: (*source.Position)({
                  Line: (int) 53,
                  Column: (int) 34
                })
              })
            }),
            Annotations: (*schema.StringOrSubstitutionsMap)(<nil>),
            Custom: (*core.MappingNode)(<nil>),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 53,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Filter: (*schema.DataSourceFilter)({
            Field: (*core.ScalarValue)({
              IntValue: (*int)(<nil>),
              BoolValue: (*bool)(<nil>),
              FloatValue: (*float64)(<nil>),
              StringValue: (*string)((len=4) "tags"),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 55,
                  Column: (int) 14
                },
                EndPosition: (*source.Position)({
                  Line: (int) 55,
                  Column: (int) 18
                })
              })
            }),
            Operator: (*schema.DataSourceFilterOperatorWrapper)({
              Value: (schema.DataSourceFilterOperator) (len=7) "has key",
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 56,
                  Column: (int) 17
                },
                EndPosition: (*source.Position)({
                  Line: (int) 56,
                  Column: (int) 24
                })
              })
            }),
            Search: (*schema.DataSourceFilterSearch)({
              Values: ([]*substitutions.StringOrSubstitutions) (len=1) {
                (*substitutions.StringOrSubstitutions)({
                  Values: ([]*substitutions.StringOrSubstitution) (len=1) {
                    (*substitutions.StringOrSubstitution)({
                      StringValue: (*string)(<nil>),
                      SubstitutionValue: (*substitutions.Substitution)({
                        Function: (*substitutions.SubstitutionFunctionExpr)(<nil>),
                        Variable: (*substitutions.SubstitutionVariable)({
                          VariableName: (string) (len=11) "environment",
                          SourceMeta: (*source.Meta)({
                            Position: (source.Position) {
                              Line: (int) 57,
                              Column: (int) 17
                            },
                            EndPosition: (*source.Position)(<nil>)
                          })
                        }),
                        ValueReference: (*substitutions.SubstitutionValueReference)(<nil>),
                        ElemReference: (*substitutions.SubstitutionElemReference)(<nil>),
                        ElemIndexReference: (*substitutions.SubstitutionElemIndexReference)(<nil>),
                        DataSourceProperty: (*substitutions.SubstitutionDataSourceProperty)(<nil>),
                        ResourceProperty: (*substitutions.SubstitutionResourceProperty)(<nil>),
                        Child: (*substitutions.SubstitutionChild)(<nil>),
                        StringValue: (*string)(<nil>),
                        IntValue: (*int64)(<nil>),
                        FloatValue: (*float64)(<nil>),
                        BoolValue: (*bool)(<nil>),
                        SourceMeta: (*source.Meta)({
                          Position: (source.Position) {
                            Line: (int) 57,
                            Column: (int) 17
                          },
                          EndPosition: (*source.Position)(<nil>)
                        })
                      }),
                      SourceMeta: (*source.Meta)({
                        Position: (source.Position) {
                          Line: (int) 57,
                          Column: (int) 15
                        },
                        EndPosition: (*source.Position)(<nil>)
                      })
                    })
                  },
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 57,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 57,
                      Column: (int) 39
                    })
                  })
                })
              },
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 57,
                  Column: (int) 15
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 55,
                Column: (int) 7
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }),
          Exports: (*schema.DataSourceFieldExportMap)({
            Values: (map[string]*schema.DataSourceFieldExport) (len=3) {
              (string) (len=14) "securityGroups": (*schema.DataSourceFieldExport)({
                Type: (*schema.DataSourceFieldTypeWrapper)({
                  Value: (schema.DataSourceFieldType) (len=5) "array",
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 62,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 62,
                      Column: (int) 20
                    })
                  })
                }),
                AliasFor: (*core.ScalarValue)(<nil>),
                Description: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 62,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              (string) (len=7) "subnets": (*schema.DataSourceFieldExport)({
                Type: (*schema.DataSourceFieldTypeWrapper)({
                  Value: (schema.DataSourceFieldType) (len=5) "array",
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 60,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 60,
                      Column: (int) 20
                    })
                  })
                }),
                AliasFor: (*core.ScalarValue)(<nil>),
                Description: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 60,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }),
              (string) (len=3) "vpc": (*schema.DataSourceFieldExport)({
                Type: (*schema.DataSourceFieldTypeWrapper)({
                  Value: (schema.DataSourceFieldType) (len=6) "string",
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 64,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)({
                      Line: (int) 64,
                      Column: (int) 21
                    })
                  })
                }),
                AliasFor: (*core.ScalarValue)(<nil>),
                Description: (*substitutions.StringOrSubstitutions)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 64,
                    Column: (int) 9
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              })
            },
            SourceMeta: (map[string]*source.Meta) (len=3) {
              (string) (len=14) "securityGroups": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 61,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=7) "subnets": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 59,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              (string) (len=3) "vpc": (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 63,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              })
            }
          }),
          Description: (*substitutions.StringOrSubstitutions)(<nil>),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 51,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=1) {
        (string) (len=7) "network": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 50,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Exports: (*schema.ExportMap)({
      Values: (map[string]*schema.Export) (len=1) {
        (string) (len=13) "orderPubSubID": (*schema.Export)({
          Type: (*schema.ExportTypeWrapper)({
            Value: (schema.ExportType) (len=6) "string",
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 224,
                Column: (int) 11
              },
              EndPosition: (*source.Position)({
                Line: (int) 224,
                Column: (int) 17
              })
            })
          }),
          Field: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=20) "orderPubSub.state.id"),
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 225,
                Column: (int) 12
              },
              EndPosition: (*source.Position)({
                Line: (int) 225,
                Column: (int) 32
              })
            })
          }),
          Description: (*substitutions.StringOrSubstitutions)({
            Values: ([]*substitutions.StringOrSubstitution) (len=1) {
              (*substitutions.StringOrSubstitution)({
                StringValue: (*string)((len=36) "The ID of the Order Pub/Sub resource"),
                SubstitutionValue: (*substitutions.Substitution)(<nil>),
                SourceMeta: (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 226,
                    Column: (int) 18
                  },
                  EndPosition: (*source.Position)({
                    Line: (int) 226,
                    Column: (int) 54
                  })
                })
              })
            },
            SourceMeta: (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 226,
                Column: (int) 18
              },
              EndPosition: (*source.Position)({
                Line: (int) 226,
                Column: (int) 54
              })
            })
          }),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 224,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          })
        })
      },
      SourceMeta: (map[string]*source.Meta) (len=1) {
        (string) (len=13) "orderPubSubID": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 223,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    }),
    Metadata: (*core.MappingNode)({
      Literal: (*core.ScalarValue)(<nil>),
      Fields: (map[string]*core.MappingNode) (len=1) {
        (string) (len=11) "buildConfig": (*core.MappingNode)({
          Literal: (*core.ScalarValue)(<nil>),
          Fields: (map[string]*core.MappingNode) (len=1) {
            (string) (len=2) "js": (*core.MappingNode)({
              Literal: (*core.ScalarValue)(<nil>),
              Fields: (map[string]*core.MappingNode) (len=1) {
                (string) (len=6) "engine": (*core.MappingNode)({
                  Literal: (*core.ScalarValue)({
                    IntValue: (*int)(<nil>),
                    BoolValue: (*bool)(<nil>),
                    FloatValue: (*float64)(<nil>),
                    StringValue: (*string)((len=7) "esbuild"),
                    SourceMeta: (*source.Meta)({
                      Position: (source.Position) {
                        Line: (int) 231,
                        Column: (int) 15
                      },
                      EndPosition: (*source.Position)({
                        Line: (int) 231,
                        Column: (int) 22
                      })
                    })
                  }),
                  Fields: (map[string]*core.MappingNode) <nil>,
                  Items: ([]*core.MappingNode) <nil>,
                  StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
                  SourceMeta: (*source.Meta)({
                    Position: (source.Position) {
                      Line: (int) 231,
                      Column: (int) 15
                    },
                    EndPosition: (*source.Position)(<nil>)
                  }),
                  FieldsSourceMeta: (map[string]*source.Meta) <nil>
                })
              },
              Items: ([]*core.MappingNode) <nil>,
              StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
              SourceMeta: (*source.Meta)({
                Position: (source.Position) {
                  Line: (int) 231,
                  Column: (int) 7
                },
                EndPosition: (*source.Position)(<nil>)
              }),
              FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
                (string) (len=6) "engine": (*source.Meta)({
                  Position: (source.Position) {
                    Line: (int) 231,
                    Column: (int) 7
                  },
                  EndPosition: (*source.Position)(<nil>)
                })
              }
            })
          },
          Items: ([]*core.MappingNode) <nil>,
          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
          SourceMeta: (*source.Meta)({
            Position: (source.Position) {
              Line: (int) 230,
              Column: (int) 5
            },
            EndPosition: (*source.Position)(<nil>)
          }),
          FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
            (string) (len=2) "js": (*source.Meta)({
              Position: (source.Position) {
                Line: (int) 230,
                Column: (int) 5
              },
              EndPosition: (*source.Position)(<nil>)
            })
          }
        })
      },
      Items: ([]*core.MappingNode) <nil>,
      StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
      SourceMeta: (*source.Meta)({
        Position: (source.Position) {
          Line: (int) 229,
          Column: (int) 3
        },
        EndPosition: (*source.Position)(<nil>)
      }),
      FieldsSourceMeta: (map[string]*source.Meta) (len=1) {
        (string) (len=11) "buildConfig": (*source.Meta)({
          Position: (source.Position) {
            Line: (int) 229,
            Column: (int) 3
          },
          EndPosition: (*source.Position)(<nil>)
        })
      }
    })
  }),
  Range: (*source.Range)({
    Start: (*source.Meta)({
      Position: (source.Position) {
        Line: (int) 1,
        Column: (int) 1
      },
      EndPosition: (*source.Position)(<nil>)
    }),
    End: (*source.Meta)(<nil>)
  })
})
