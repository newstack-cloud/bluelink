syntax = "proto3";
package schema;

option go_package = "github.com/two-hundred/celerity/libs/blueprint/schemapb";

message Blueprint {
    ScalarValue version = 1;
    repeated string transform = 2;
    map<string, Variable> variables = 3;
    map<string, Value> values = 4;
    map<string, Include> include = 5;
    map<string, Resource> resources = 6;
    map<string, DataSource> data_sources = 7;
    map<string, Export> exports = 8;
    optional MappingNode metadata = 9;
}

message Export {
    string type = 1;
    ScalarValue field = 2;
    optional StringOrSubstitutions description = 3;
}

message Variable {
    string type = 1;
    optional ScalarValue description = 2;
    ScalarValue secret = 3;
    ScalarValue default = 4;
    repeated ScalarValue allowed_values = 5;
}

message Value {
    string type = 1;
    StringOrSubstitutions value = 2;
    optional StringOrSubstitutions description = 3;
    ScalarValue secret = 4;
}

message ScalarValue {
    oneof value {
        int64 int_value = 1;
        bool bool_value = 2;
        double float_value = 3;
        string string_value = 4;
    }
}

message Include {
    StringOrSubstitutions path = 1;
    MappingNode variables = 2;
    MappingNode metadata = 3;
    optional StringOrSubstitutions description = 4;
}

message Resource {
    string type = 1;
    optional StringOrSubstitutions description = 2;
    ResourceMetadata metadata = 3;
    optional ResourceCondition condition = 4;
    optional StringOrSubstitutions each = 5;
    optional LinkSelector link_selector = 6;
    MappingNode spec = 7;
}

message LinkSelector {
    map<string, string> by_label = 1;
}

message ResourceMetadata {
    optional StringOrSubstitutions display_name = 1;
    map<string, StringOrSubstitutions> annotations = 2;
    map<string, string> labels = 3;
    optional MappingNode custom = 4;
}

message ResourceCondition {
    StringOrSubstitutions string_value = 1;
    repeated ResourceCondition and = 2;
    repeated ResourceCondition or = 3;
    ResourceCondition not = 4;
}

message DataSource {
    string type = 1;
    DataSourceMetadata metadata = 2;
    DataSourceFilter filter = 3;
    map<string, DataSourceFieldExport> exports = 4;
    optional StringOrSubstitutions description = 5;
}

message DataSourceMetadata {
    optional StringOrSubstitutions display_name = 1;
    map<string, StringOrSubstitutions> annotations = 2;
    optional MappingNode custom = 3;
}

message DataSourceFilter {
    ScalarValue field = 1;
    string operator = 2;
    DataSourceFilterSearch search = 3;
}

message DataSourceFilterSearch {
    repeated StringOrSubstitutions values = 1;
}

message DataSourceFieldExport {
    string type = 1;
    ScalarValue alias_for = 2;
    optional StringOrSubstitutions description = 3;
}

message MappingNode {
    // repeated fields and maps are not supported in oneof so it's better
    // to have a separate field for each type of value
    // and check at runtime during deserialisation.
    ScalarValue literal = 1;
    map<string, MappingNode> fields = 2;
    repeated MappingNode items = 3;
    StringOrSubstitutions string_with_substitutions = 4;
}

message StringOrSubstitutions {
    repeated StringOrSubstitution values = 1;
}

message StringOrSubstitution {
    oneof value {
        string string_value = 1;
        Substitution substitution_value = 2;
    }
}

message Substitution {
    oneof sub {
        SubstitutionFunctionExpr function_expr = 1;
        SubstitutionVariable variable = 2;
        SubstitutionValue value = 3;
        SubstitutionElem elem = 4;
        SubstitutionElemIndex elem_index = 5;
        SubstitutionDataSourceProperty data_source_property = 6;
        SubstitutionResourceProperty resource_property = 7;
        SubstitutionChild child = 8;
        string string_value = 9;
        int64 int_value = 10;
        double float_value = 11;
        bool bool_value = 12;
    }
}

message SubstitutionFunctionExpr {
    string function_name = 1;
    repeated SubstitutionFunctionArg arguments = 2;
}

message SubstitutionFunctionArg {
    optional string name = 1;
    Substitution value = 2;
}

message SubstitutionVariable {
    string variable_name = 1;
}

message SubstitutionValue {
    string value_name = 1;
    repeated SubstitutionPathItem path = 2;
}

message SubstitutionElem {
    repeated SubstitutionPathItem path = 1;
}

message SubstitutionElemIndex {
    bool is_index = 1;
}

message SubstitutionDataSourceProperty {
    string data_source_name = 1;
    string field_name = 2;
    optional int64 primitive_arr_index = 3;
}

message SubstitutionResourceProperty {
    string resource_name = 1;
    optional int64 each_template_index = 2;
    repeated SubstitutionPathItem path = 3;
}

message SubstitutionChild {
    string child_name = 1;
    repeated SubstitutionPathItem path = 3;
}

message SubstitutionPathItem {
    oneof item {
        string field_name = 1;
        int64 primitive_arr_index = 2;
    }
}
