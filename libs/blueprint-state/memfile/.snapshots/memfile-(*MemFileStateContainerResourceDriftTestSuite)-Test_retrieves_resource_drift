(state.ResourceDriftState) {
  ResourceID: (string) (len=22) "test-orders-table-0-id",
  ResourceName: (string) (len=13) "ordersTable_0",
  SpecData: (*core.MappingNode)({
    Scalar: (*core.ScalarValue)(<nil>),
    Fields: (map[string]*core.MappingNode) (len=3) {
      (string) (len=2) "id": (*core.MappingNode)({
        Scalar: (*core.ScalarValue)({
          IntValue: (*int)(<nil>),
          BoolValue: (*bool)(<nil>),
          FloatValue: (*float64)(<nil>),
          StringValue: (*string)((len=72) "arn:aws:dynamodb:eu-west-1:123456789012:table/legacy-production-orders-1"),
          SourceMeta: (*source.Meta)(<nil>)
        }),
        Fields: (map[string]*core.MappingNode) <nil>,
        Items: ([]*core.MappingNode) <nil>,
        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
        SourceMeta: (*source.Meta)(<nil>),
        FieldsSourceMeta: (map[string]*source.Meta) <nil>
      }),
      (string) (len=6) "region": (*core.MappingNode)({
        Scalar: (*core.ScalarValue)({
          IntValue: (*int)(<nil>),
          BoolValue: (*bool)(<nil>),
          FloatValue: (*float64)(<nil>),
          StringValue: (*string)((len=9) "eu-west-2"),
          SourceMeta: (*source.Meta)(<nil>)
        }),
        Fields: (map[string]*core.MappingNode) <nil>,
        Items: ([]*core.MappingNode) <nil>,
        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
        SourceMeta: (*source.Meta)(<nil>),
        FieldsSourceMeta: (map[string]*source.Meta) <nil>
      }),
      (string) (len=9) "tableName": (*core.MappingNode)({
        Scalar: (*core.ScalarValue)({
          IntValue: (*int)(<nil>),
          BoolValue: (*bool)(<nil>),
          FloatValue: (*float64)(<nil>),
          StringValue: (*string)((len=26) "legacy-production-orders-1"),
          SourceMeta: (*source.Meta)(<nil>)
        }),
        Fields: (map[string]*core.MappingNode) <nil>,
        Items: ([]*core.MappingNode) <nil>,
        StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
        SourceMeta: (*source.Meta)(<nil>),
        FieldsSourceMeta: (map[string]*source.Meta) <nil>
      })
    },
    Items: ([]*core.MappingNode) <nil>,
    StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
    SourceMeta: (*source.Meta)(<nil>),
    FieldsSourceMeta: (map[string]*source.Meta) <nil>
  }),
  Difference: (*state.ResourceDriftChanges)({
    ModifiedFields: ([]*state.ResourceDriftFieldChange) (len=1) {
      (*state.ResourceDriftFieldChange)({
        FieldPath: (string) (len=11) "spec.region",
        StateValue: (*core.MappingNode)({
          Scalar: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=9) "eu-west-1"),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          Fields: (map[string]*core.MappingNode) <nil>,
          Items: ([]*core.MappingNode) <nil>,
          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
          SourceMeta: (*source.Meta)(<nil>),
          FieldsSourceMeta: (map[string]*source.Meta) <nil>
        }),
        DriftedValue: (*core.MappingNode)({
          Scalar: (*core.ScalarValue)({
            IntValue: (*int)(<nil>),
            BoolValue: (*bool)(<nil>),
            FloatValue: (*float64)(<nil>),
            StringValue: (*string)((len=9) "eu-west-2"),
            SourceMeta: (*source.Meta)(<nil>)
          }),
          Fields: (map[string]*core.MappingNode) <nil>,
          Items: ([]*core.MappingNode) <nil>,
          StringWithSubstitutions: (*substitutions.StringOrSubstitutions)(<nil>),
          SourceMeta: (*source.Meta)(<nil>),
          FieldsSourceMeta: (map[string]*source.Meta) <nil>
        })
      })
    },
    NewFields: ([]*state.ResourceDriftFieldChange) {
    },
    RemovedFields: ([]string) {
    },
    UnchangedFields: ([]string) {
    }
  }),
  Timestamp: (*int)(1733145728)
}
