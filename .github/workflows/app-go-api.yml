# This is a basic workflow to help you get started with Actions

name: Celerity Deploy Engine API

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
    paths: ['apps/api/**']
  pull_request:
    branches: [ main ]
    paths: ['apps/api/**']
  workflow_dispatch:
    inputs: {}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  integrate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      working-directory: ./apps/api

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v1
      with:
        go-version: '1.23'

    # Install global Go dependencies
    - name: Install Go Global Dependencies
      run: go install honnef.co/go/tools/cmd/staticcheck@latest && go get -u golang.org/x/sys/unix
      working-directory: ${{env.working-directory}}

    # SonarCloud scan runs in a docker container where the workspace directory gets mounted to /github/workspace
    # so we need to replace all references to the github workspace directory with /github/workspace.
    - name: Linting
      run: >
        export PATH=$PATH:$(go env GOPATH)/bin && bash scripts/lint.sh &&
          sed -i 's#${{ github.workspace }}#/github/workspace#g' govet-report.out &&
          sed -i 's#${{ github.workspace }}#/github/workspace#g' staticcheck.out
      working-directory: ${{env.working-directory}}

    - name: Run Tests
      run: bash scripts/run-tests.sh
      working-directory: ${{env.working-directory}}

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@master
      with:
        projectBaseDir: ${{ env.working-directory }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}